; Assembly listing for method JITTest.Program:Main(System.String[])
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd
;
; Lcl frame size = 0

G_M61513_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M61513_IG02:
       call     JITTest.ScalarByte:EntryPoint()
       call     JITTest.ScalarSByte:EntryPoint()
       call     JITTest.ScalarUShort:EntryPoint()
       call     JITTest.ScalarShort:EntryPoint()
       call     JITTest.ScalarUInt32:EntryPoint()
       call     JITTest.ScalarInt32:EntryPoint()
       call     JITTest.ScalarUInt64:EntryPoint()
       call     JITTest.ScalarInt64:EntryPoint()
       call     JITTest.ScalarHalf:EntryPoint()
       call     JITTest.ScalarFloat:EntryPoint()
       call     JITTest.ScalarDouble:EntryPoint()
						;; bbWeight=1    PerfScore 11.00
G_M61513_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 60, prolog size 3, PerfScore 19.75, (MethodHash=30e40fb6) for method JITTest.Program:Main(System.String[])
; ============================================================

; Assembly listing for method JITTest.ScalarByte:EntryPoint()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V01 tmp1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V02 tmp2         [V02    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V03 tmp3         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V04 tmp4         [V04    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V05 tmp5         [V05    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V06 tmp6         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V07 tmp7         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V08 tmp8         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V09 tmp9         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V10 tmp10        [V10    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V11 tmp11        [V11    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V12 tmp12        [V12    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V13 tmp13        [V13    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V14 tmp14        [V14    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V15 tmp15        [V15    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V16 tmp16        [V16    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V17 tmp17        [V17    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V18 tmp18        [V18    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V19 tmp19        [V19    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V20 tmp20        [V20    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V21 tmp21        [V21    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V22 tmp22        [V22    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V23 tmp23        [V23    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V24 tmp24        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V25 tmp25        [V25    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V26 tmp26        [V26    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V27 tmp27        [V27    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V28 tmp28        [V28    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V29 tmp29        [V29    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V30 tmp30        [V30    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V31 tmp31        [V31    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V32 tmp32        [V32    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;  V33 EHSlots      [V33    ] (  1,  1   )     blk (16) [ebp-0x14]   do-not-enreg[X] must-init addr-exposed "lvaShadowSPslotsVar"
;
; Lcl frame size = 20

G_M62066_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 20
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-14H], eax
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], eax
       mov      dword ptr [ebp-08H], eax
						;; bbWeight=1    PerfScore 6.75
G_M62066_IG02:
       xor      ecx, ecx
       call     JITTest.ScalarByte:Atan(ubyte):ubyte
       jmp      SHORT G_M62066_IG04
						;; bbWeight=1    PerfScore 3.25
G_M62066_IG03:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG04:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Atan2(ubyte,ubyte):ubyte
       jmp      SHORT G_M62066_IG06
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG05:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG06:
       xor      ecx, ecx
       call     JITTest.ScalarByte:Cos(ubyte):ubyte
       jmp      SHORT G_M62066_IG08
						;; bbWeight=1    PerfScore 3.25
G_M62066_IG07:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG08:
       xor      ecx, ecx
       call     JITTest.ScalarByte:Cosh(ubyte):ubyte
       jmp      SHORT G_M62066_IG10
						;; bbWeight=1    PerfScore 3.25
G_M62066_IG09:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG10:
       call     JITTest.ScalarByte:One():ubyte
       jmp      SHORT G_M62066_IG12
						;; bbWeight=1    PerfScore 3.00
G_M62066_IG11:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG12:
       call     JITTest.ScalarByte:Two():ubyte
       jmp      SHORT G_M62066_IG14
						;; bbWeight=1    PerfScore 3.00
G_M62066_IG13:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG14:
       xor      ecx, ecx
       call     JITTest.ScalarByte:IsNormal(ubyte):bool
       jmp      SHORT G_M62066_IG16
						;; bbWeight=1    PerfScore 3.25
G_M62066_IG15:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG16:
       call     JITTest.ScalarByte:Pi():ubyte
       jmp      SHORT G_M62066_IG18
						;; bbWeight=1    PerfScore 3.00
G_M62066_IG17:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG18:
       call     JITTest.ScalarByte:Tau():ubyte
       jmp      SHORT G_M62066_IG20
						;; bbWeight=1    PerfScore 3.00
G_M62066_IG19:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG20:
       call     JITTest.ScalarByte:HalfPi():ubyte
       jmp      SHORT G_M62066_IG22
						;; bbWeight=1    PerfScore 3.00
G_M62066_IG21:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG22:
       call     JITTest.ScalarByte:PositiveInfinity():ubyte
       jmp      SHORT G_M62066_IG24
						;; bbWeight=1    PerfScore 3.00
G_M62066_IG23:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG24:
       call     JITTest.ScalarByte:NegativeInfinity():ubyte
       jmp      SHORT G_M62066_IG26
						;; bbWeight=1    PerfScore 3.00
G_M62066_IG25:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG26:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarByte:As(double):ubyte
       jmp      SHORT G_M62066_IG28
						;; bbWeight=1    PerfScore 4.08
G_M62066_IG27:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG28:
       xor      ecx, ecx
       call     JITTest.ScalarByte:SquareRoot(ubyte):ubyte
       jmp      SHORT G_M62066_IG30
						;; bbWeight=1    PerfScore 3.25
G_M62066_IG29:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG30:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Add(ubyte,ubyte):ubyte
       jmp      SHORT G_M62066_IG32
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG31:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG32:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Mod(ubyte,ubyte):ubyte
       jmp      SHORT G_M62066_IG34
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG33:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG34:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Subtract(ubyte,ubyte):ubyte
       jmp      SHORT G_M62066_IG36
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG35:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG36:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Multiply(ubyte,ubyte):ubyte
       jmp      SHORT G_M62066_IG38
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG37:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG38:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Divide(ubyte,ubyte):ubyte
       jmp      SHORT G_M62066_IG40
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG39:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG40:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Min(ubyte,ubyte):ubyte
       jmp      SHORT G_M62066_IG42
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG41:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG42:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Max(ubyte,ubyte):ubyte
       jmp      SHORT G_M62066_IG44
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG43:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG44:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Larger(ubyte,ubyte):bool
       jmp      SHORT G_M62066_IG46
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG45:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG46:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Smaller(ubyte,ubyte):bool
       jmp      SHORT G_M62066_IG48
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG47:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG48:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:LargerEquals(ubyte,ubyte):bool
       jmp      SHORT G_M62066_IG50
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG49:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG50:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:SmallerEquals(ubyte,ubyte):bool
       jmp      SHORT G_M62066_IG52
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG51:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG52:
       push     0
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Clamp(ubyte,ubyte,ubyte):ubyte
       jmp      SHORT G_M62066_IG54
						;; bbWeight=1    PerfScore 4.50
G_M62066_IG53:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG54:
       xor      ecx, ecx
       call     JITTest.ScalarByte:Negate(ubyte):ubyte
       jmp      SHORT G_M62066_IG56
						;; bbWeight=1    PerfScore 3.25
G_M62066_IG55:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG56:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarByte:Equal(ubyte,ubyte):bool
       jmp      SHORT G_M62066_IG58
						;; bbWeight=1    PerfScore 3.50
G_M62066_IG57:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG58:
       xor      ecx, ecx
       call     JITTest.ScalarByte:Acos(ubyte):ubyte
       jmp      SHORT G_M62066_IG60
						;; bbWeight=1    PerfScore 3.25
G_M62066_IG59:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG60:
       xor      ecx, ecx
       call     JITTest.ScalarByte:Abs(ubyte):ubyte
       jmp      SHORT G_M62066_IG62
						;; bbWeight=1    PerfScore 3.25
G_M62066_IG61:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG62:
       xor      ecx, ecx
       call     JITTest.ScalarByte:Sin(ubyte):ubyte
       jmp      SHORT G_M62066_IG64
						;; bbWeight=1    PerfScore 3.25
G_M62066_IG63:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG64:
       xor      ecx, ecx
       call     JITTest.ScalarByte:Sinh(ubyte):ubyte
       jmp      SHORT G_M62066_IG66
						;; bbWeight=1    PerfScore 3.25
G_M62066_IG65:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG66:
       xor      ecx, ecx
       call     JITTest.ScalarByte:Asin(ubyte):ubyte
       jmp      SHORT G_M62066_IG68
						;; bbWeight=1    PerfScore 3.25
G_M62066_IG67:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M62066_IG68:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75

; Total bytes of code 515, prolog size 23, PerfScore 171.03, (MethodHash=b1e80d8d) for method JITTest.ScalarByte:EntryPoint()
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Atan(ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M39210_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M39210_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=72e766d5) for method JITTest.ScalarByte:Atan(ubyte):ubyte
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:ThrowInvalidType()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; esp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 tmp0         [V00,T00] (  3,  0   )     ref  ->  esi         class-hnd exact "NewObj constructor temp"
;  V01 tmp1         [V01,T01] (  2,  0   )     ref  ->  edx         "argument with side effect"
;
; Lcl frame size = 0

G_M50239_IG01:
       push     esi
						;; bbWeight=1    PerfScore 1.00
G_M50239_IG02:
       mov      ecx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      esi, eax
       mov      ecx, 743
       mov      edx, 0xD1FFAB1E
       call     CORINFO_HELP_STRCNS
       mov      edx, eax
       mov      ecx, esi
       call     System.NotSupportedException:.ctor(System.String):this
       mov      ecx, esi
       call     CORINFO_HELP_THROW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 45, prolog size 1, PerfScore 5.50, (MethodHash=a0773bc0) for method Silk.NET.Maths.Scalar:ThrowInvalidType()
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Atan2(ubyte,ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref   
;* V01 arg1         [V01    ] (  0,  0   )   ubyte  ->  zero-ref   
;* V02 tmp0         [V02    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M50795_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M50795_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=8f3d3994) for method JITTest.ScalarByte:Atan2(ubyte,ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Cos(ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M26959_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M26959_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=805296b0) for method JITTest.ScalarByte:Cos(ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Cosh(ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M28871_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M28871_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=06b78f38) for method JITTest.ScalarByte:Cosh(ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:One():ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00,T00] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M19083_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M19083_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M19083_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=7c09b574) for method JITTest.ScalarByte:One():ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Two():ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00,T00] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M62371_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M62371_IG02:
       mov      eax, 2
						;; bbWeight=1    PerfScore 0.25
G_M62371_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=980b0c5c) for method JITTest.ScalarByte:Two():ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:IsNormal(ubyte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref   
;* V01 tmp0         [V01,T00] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M32392_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M32392_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M32392_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=1a988177) for method JITTest.ScalarByte:IsNormal(ubyte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Pi():ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M31926_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M31926_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=192e8349) for method JITTest.ScalarByte:Pi():ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Tau():ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M37999_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M37999_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=d0a66b90) for method JITTest.ScalarByte:Tau():ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:HalfPi():ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M16981_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M16981_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=4febbdaa) for method JITTest.ScalarByte:HalfPi():ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:PositiveInfinity():ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M59590_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M59590_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=855f1739) for method JITTest.ScalarByte:PositiveInfinity():ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:NegativeInfinity():ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M21390_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M21390_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=e8ffac71) for method JITTest.ScalarByte:NegativeInfinity():ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:As(double):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   ubyte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M12168_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M12168_IG02:
       vcvttsd2si eax, dword ptr [ebp+08H]
       movzx    eax, al
						;; bbWeight=1    PerfScore 7.25
G_M12168_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 18, prolog size 6, PerfScore 13.90, (MethodHash=ed9dd077) for method JITTest.ScalarByte:As(double):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:SquareRoot(ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 tmp0         [V01,T01] (  2,  2   )   ubyte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M30487_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M30487_IG02:
       movzx    eax, cl
       vxorps   xmm0, xmm0
       vcvtsi2ss  xmm0, eax
       vsqrtss  xmm0, xmm0
       vcvttss2si  eax, xmm0
       movzx    eax, al
						;; bbWeight=1    PerfScore 21.83
G_M30487_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 30, prolog size 6, PerfScore 28.98, (MethodHash=ecd488e8) for method JITTest.ScalarByte:SquareRoot(ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Add(ubyte,ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )   ubyte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M36354_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M36354_IG02:
       movzx    eax, cl
       movzx    edx, dl
       add      eax, edx
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.00
G_M36354_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.35, (MethodHash=0dcf71fd) for method JITTest.ScalarByte:Add(ubyte,ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Mod(ubyte,ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )   ubyte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M23557_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M23557_IG02:
       movzx    eax, cl
       movzx    ecx, dl
       cdq      
       idiv     edx:eax, ecx
       movzx    eax, dl
						;; bbWeight=1    PerfScore 27.75
G_M23557_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 32.20, (MethodHash=cf50a3fa) for method JITTest.ScalarByte:Mod(ubyte,ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Subtract(ubyte,ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )   ubyte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M39191_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M39191_IG02:
       movzx    eax, cl
       movzx    edx, dl
       sub      eax, edx
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.00
G_M39191_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.35, (MethodHash=a93666e8) for method JITTest.ScalarByte:Subtract(ubyte,ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Multiply(ubyte,ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )   ubyte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M23119_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M23119_IG02:
       movzx    eax, cl
       movzx    edx, dl
       imul     eax, edx
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.75
G_M23119_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 7.20, (MethodHash=2f9ba5b0) for method JITTest.ScalarByte:Multiply(ubyte,ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Divide(ubyte,ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )   ubyte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M32304_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M32304_IG02:
       movzx    eax, cl
       movzx    ecx, dl
       cdq      
       idiv     edx:eax, ecx
       movzx    eax, al
						;; bbWeight=1    PerfScore 27.75
G_M32304_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 32.20, (MethodHash=cd1781cf) for method JITTest.ScalarByte:Divide(ubyte,ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Min(ubyte,ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;
; Lcl frame size = 0

G_M59209_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M59209_IG02:
       movzx    ecx, cl
       movzx    edx, dl
       call     Silk.NET.Maths.Scalar:Min(ubyte,ubyte):ubyte
						;; bbWeight=1    PerfScore 1.50
G_M59209_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.85, (MethodHash=5c4118b6) for method JITTest.ScalarByte:Min(ubyte,ubyte):ubyte
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Min(ubyte,ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T04] (  3,  2   )   ubyte  ->  edx         "Inline return value spill temp"
;  V03 cse0         [V03,T02] (  3,  2.50)     int  ->  edx         "CSE - aggressive"
;  V04 cse1         [V04,T03] (  3,  2.50)     int  ->  eax         "CSE - aggressive"
;
; Lcl frame size = 0

G_M13475_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M13475_IG02:
       movzx    eax, cl
       movzx    edx, dl
       cmp      eax, edx
       jle      SHORT G_M13475_IG04
						;; bbWeight=1    PerfScore 1.75
G_M13475_IG03:
       jmp      SHORT G_M13475_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M13475_IG04:
       mov      edx, eax
						;; bbWeight=0.50 PerfScore 0.12
G_M13475_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M13475_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 21, prolog size 3, PerfScore 7.98, (MethodHash=ac01cb5c) for method Silk.NET.Maths.Scalar:Min(ubyte,ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Max(ubyte,ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;
; Lcl frame size = 0

G_M5143_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M5143_IG02:
       movzx    ecx, cl
       movzx    edx, dl
       call     Silk.NET.Maths.Scalar:Max(ubyte,ubyte):ubyte
						;; bbWeight=1    PerfScore 1.50
G_M5143_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.85, (MethodHash=0e69ebe8) for method JITTest.ScalarByte:Max(ubyte,ubyte):ubyte
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Max(ubyte,ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T04] (  3,  2   )   ubyte  ->  edx         "Inline return value spill temp"
;  V03 cse0         [V03,T02] (  3,  2.50)     int  ->  edx         "CSE - aggressive"
;  V04 cse1         [V04,T03] (  3,  2.50)     int  ->  eax         "CSE - aggressive"
;
; Lcl frame size = 0

G_M12541_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M12541_IG02:
       movzx    eax, cl
       movzx    edx, dl
       cmp      eax, edx
       jge      SHORT G_M12541_IG04
						;; bbWeight=1    PerfScore 1.75
G_M12541_IG03:
       jmp      SHORT G_M12541_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M12541_IG04:
       mov      edx, eax
						;; bbWeight=0.50 PerfScore 0.12
G_M12541_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M12541_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 21, prolog size 3, PerfScore 7.98, (MethodHash=2d41cf02) for method Silk.NET.Maths.Scalar:Max(ubyte,ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Larger(ubyte,ubyte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M30237_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M30237_IG02:
       movzx    eax, cl
       movzx    edx, dl
       cmp      eax, edx
       setg     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M30237_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=5a4a89e2) for method JITTest.ScalarByte:Larger(ubyte,ubyte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Smaller(ubyte,ubyte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M28954_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M28954_IG02:
       movzx    eax, cl
       movzx    edx, dl
       cmp      eax, edx
       setl     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M28954_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=24ff8ee5) for method JITTest.ScalarByte:Smaller(ubyte,ubyte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarByte:LargerEquals(ubyte,ubyte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M16162_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M16162_IG02:
       movzx    eax, cl
       movzx    edx, dl
       cmp      eax, edx
       setge    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M16162_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=1a0ac0dd) for method JITTest.ScalarByte:LargerEquals(ubyte,ubyte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarByte:SmallerEquals(ubyte,ubyte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M12389_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M12389_IG02:
       movzx    eax, cl
       movzx    edx, dl
       cmp      eax, edx
       setle    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M12389_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=638fcf9a) for method JITTest.ScalarByte:SmallerEquals(ubyte,ubyte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Clamp(ubyte,ubyte,ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 arg2         [V02,T03] (  1,  1   )   ubyte  ->  [ebp+0x08]  
;  V03 tmp0         [V03,T02] (  2,  4   )     int  ->  ecx         "argument with side effect"
;
; Lcl frame size = 0

G_M17859_IG01:
       push     ebp
       mov      ebp, esp
       push     ebx
						;; bbWeight=1    PerfScore 2.25
G_M17859_IG02:
       movzx    ecx, cl
       movzx    edx, dl
       call     Silk.NET.Maths.Scalar:Max(ubyte,ubyte):ubyte
       mov      ecx, eax
       mov      ebx, dword ptr [ebp+08H]
       movzx    edx, bl
       call     Silk.NET.Maths.Scalar:Min(ubyte,ubyte):ubyte
       movzx    eax, al
						;; bbWeight=1    PerfScore 4.25
G_M17859_IG03:
       pop      ebx
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 3.00

; Total bytes of code 36, prolog size 4, PerfScore 13.10, (MethodHash=4545ba3c) for method JITTest.ScalarByte:Clamp(ubyte,ubyte,ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Negate(ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;
; Lcl frame size = 0

G_M26380_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M26380_IG02:
       movzx    ecx, cl
       call     Silk.NET.Maths.Scalar:Negate(ubyte):ubyte
						;; bbWeight=1    PerfScore 1.25
G_M26380_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.30, (MethodHash=adaf98f3) for method JITTest.ScalarByte:Negate(ubyte):ubyte
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Negate(ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref   
;* V01 loc0         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op
;
; Lcl frame size = 0

G_M58726_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M58726_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=530f1a99) for method Silk.NET.Maths.Scalar:Negate(ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Equal(ubyte,ubyte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   ubyte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M44190_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M44190_IG02:
       movzx    eax, cl
       movzx    edx, dl
       cmp      eax, edx
       sete     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M44190_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=ab5d5361) for method JITTest.ScalarByte:Equal(ubyte,ubyte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Acos(ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M30510_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M30510_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=bd7488d1) for method JITTest.ScalarByte:Acos(ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Abs(ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   ubyte  ->  ecx        
;  V01 tmp0         [V01,T01] (  2,  2   )   ubyte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M15744_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M15744_IG02:
       movzx    eax, cl
						;; bbWeight=1    PerfScore 0.25
G_M15744_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 8, prolog size 3, PerfScore 3.80, (MethodHash=edafc27f) for method JITTest.ScalarByte:Abs(ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Sin(ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M28516_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M28516_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=695e909b) for method JITTest.ScalarByte:Sin(ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Sinh(ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M28492_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M28492_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=9d7a90b3) for method JITTest.ScalarByte:Sinh(ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarByte:Asin(ubyte):ubyte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   ubyte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   ubyte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   ubyte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M10245_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M10245_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=cc8fd7fa) for method JITTest.ScalarByte:Asin(ubyte):ubyte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:EntryPoint()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V01 tmp1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V02 tmp2         [V02    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V03 tmp3         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V04 tmp4         [V04    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V05 tmp5         [V05    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V06 tmp6         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V07 tmp7         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V08 tmp8         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V09 tmp9         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V10 tmp10        [V10    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V11 tmp11        [V11    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V12 tmp12        [V12    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V13 tmp13        [V13    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V14 tmp14        [V14    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V15 tmp15        [V15    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V16 tmp16        [V16    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V17 tmp17        [V17    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V18 tmp18        [V18    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V19 tmp19        [V19    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V20 tmp20        [V20    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V21 tmp21        [V21    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V22 tmp22        [V22    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V23 tmp23        [V23    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V24 tmp24        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V25 tmp25        [V25    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V26 tmp26        [V26    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V27 tmp27        [V27    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V28 tmp28        [V28    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V29 tmp29        [V29    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V30 tmp30        [V30    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V31 tmp31        [V31    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V32 tmp32        [V32    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;  V33 EHSlots      [V33    ] (  1,  1   )     blk (16) [ebp-0x14]   do-not-enreg[X] must-init addr-exposed "lvaShadowSPslotsVar"
;
; Lcl frame size = 20

G_M53313_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 20
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-14H], eax
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], eax
       mov      dword ptr [ebp-08H], eax
						;; bbWeight=1    PerfScore 6.75
G_M53313_IG02:
       xor      ecx, ecx
       call     JITTest.ScalarSByte:Atan(byte):byte
       jmp      SHORT G_M53313_IG04
						;; bbWeight=1    PerfScore 3.25
G_M53313_IG03:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG04:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Atan2(byte,byte):byte
       jmp      SHORT G_M53313_IG06
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG05:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG06:
       xor      ecx, ecx
       call     JITTest.ScalarSByte:Cos(byte):byte
       jmp      SHORT G_M53313_IG08
						;; bbWeight=1    PerfScore 3.25
G_M53313_IG07:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG08:
       xor      ecx, ecx
       call     JITTest.ScalarSByte:Cosh(byte):byte
       jmp      SHORT G_M53313_IG10
						;; bbWeight=1    PerfScore 3.25
G_M53313_IG09:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG10:
       call     JITTest.ScalarSByte:One():byte
       jmp      SHORT G_M53313_IG12
						;; bbWeight=1    PerfScore 3.00
G_M53313_IG11:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG12:
       call     JITTest.ScalarSByte:Two():byte
       jmp      SHORT G_M53313_IG14
						;; bbWeight=1    PerfScore 3.00
G_M53313_IG13:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG14:
       xor      ecx, ecx
       call     JITTest.ScalarSByte:IsNormal(byte):bool
       jmp      SHORT G_M53313_IG16
						;; bbWeight=1    PerfScore 3.25
G_M53313_IG15:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG16:
       call     JITTest.ScalarSByte:Pi():byte
       jmp      SHORT G_M53313_IG18
						;; bbWeight=1    PerfScore 3.00
G_M53313_IG17:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG18:
       call     JITTest.ScalarSByte:Tau():byte
       jmp      SHORT G_M53313_IG20
						;; bbWeight=1    PerfScore 3.00
G_M53313_IG19:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG20:
       call     JITTest.ScalarSByte:HalfPi():byte
       jmp      SHORT G_M53313_IG22
						;; bbWeight=1    PerfScore 3.00
G_M53313_IG21:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG22:
       call     JITTest.ScalarSByte:PositiveInfinity():byte
       jmp      SHORT G_M53313_IG24
						;; bbWeight=1    PerfScore 3.00
G_M53313_IG23:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG24:
       call     JITTest.ScalarSByte:NegativeInfinity():byte
       jmp      SHORT G_M53313_IG26
						;; bbWeight=1    PerfScore 3.00
G_M53313_IG25:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG26:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarSByte:As(double):byte
       jmp      SHORT G_M53313_IG28
						;; bbWeight=1    PerfScore 4.08
G_M53313_IG27:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG28:
       xor      ecx, ecx
       call     JITTest.ScalarSByte:SquareRoot(byte):byte
       jmp      SHORT G_M53313_IG30
						;; bbWeight=1    PerfScore 3.25
G_M53313_IG29:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG30:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Add(byte,byte):byte
       jmp      SHORT G_M53313_IG32
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG31:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG32:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Mod(byte,byte):byte
       jmp      SHORT G_M53313_IG34
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG33:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG34:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Subtract(byte,byte):byte
       jmp      SHORT G_M53313_IG36
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG35:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG36:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Multiply(byte,byte):byte
       jmp      SHORT G_M53313_IG38
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG37:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG38:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Divide(byte,byte):byte
       jmp      SHORT G_M53313_IG40
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG39:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG40:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Min(byte,byte):byte
       jmp      SHORT G_M53313_IG42
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG41:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG42:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Max(byte,byte):byte
       jmp      SHORT G_M53313_IG44
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG43:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG44:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Larger(byte,byte):bool
       jmp      SHORT G_M53313_IG46
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG45:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG46:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Smaller(byte,byte):bool
       jmp      SHORT G_M53313_IG48
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG47:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG48:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:LargerEquals(byte,byte):bool
       jmp      SHORT G_M53313_IG50
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG49:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG50:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:SmallerEquals(byte,byte):bool
       jmp      SHORT G_M53313_IG52
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG51:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG52:
       push     0
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Clamp(byte,byte,byte):byte
       jmp      SHORT G_M53313_IG54
						;; bbWeight=1    PerfScore 4.50
G_M53313_IG53:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG54:
       xor      ecx, ecx
       call     JITTest.ScalarSByte:Negate(byte):byte
       jmp      SHORT G_M53313_IG56
						;; bbWeight=1    PerfScore 3.25
G_M53313_IG55:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG56:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarSByte:Equal(byte,byte):bool
       jmp      SHORT G_M53313_IG58
						;; bbWeight=1    PerfScore 3.50
G_M53313_IG57:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG58:
       xor      ecx, ecx
       call     JITTest.ScalarSByte:Acos(byte):byte
       jmp      SHORT G_M53313_IG60
						;; bbWeight=1    PerfScore 3.25
G_M53313_IG59:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG60:
       xor      ecx, ecx
       call     JITTest.ScalarSByte:Abs(byte):byte
       jmp      SHORT G_M53313_IG62
						;; bbWeight=1    PerfScore 3.25
G_M53313_IG61:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG62:
       xor      ecx, ecx
       call     JITTest.ScalarSByte:Sin(byte):byte
       jmp      SHORT G_M53313_IG64
						;; bbWeight=1    PerfScore 3.25
G_M53313_IG63:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG64:
       xor      ecx, ecx
       call     JITTest.ScalarSByte:Sinh(byte):byte
       jmp      SHORT G_M53313_IG66
						;; bbWeight=1    PerfScore 3.25
G_M53313_IG65:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG66:
       xor      ecx, ecx
       call     JITTest.ScalarSByte:Asin(byte):byte
       jmp      SHORT G_M53313_IG68
						;; bbWeight=1    PerfScore 3.25
G_M53313_IG67:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M53313_IG68:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75

; Total bytes of code 515, prolog size 23, PerfScore 171.03, (MethodHash=cd8b2fbe) for method JITTest.ScalarSByte:EntryPoint()
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Atan(byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    byte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M52345_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M52345_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=097d3386) for method JITTest.ScalarSByte:Atan(byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Atan2(byte,byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    byte  ->  zero-ref   
;* V01 arg1         [V01    ] (  0,  0   )    byte  ->  zero-ref   
;* V02 tmp0         [V02    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M24045_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M24045_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=d1d8a212) for method JITTest.ScalarSByte:Atan2(byte,byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Cos(byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    byte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M63484_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M63484_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=976a0803) for method JITTest.ScalarSByte:Cos(byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Cosh(byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    byte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M6740_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M6740_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=ff1ce5ab) for method JITTest.ScalarSByte:Cosh(byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:One():byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00,T00] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M16493_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M16493_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M16493_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=3b26bf92) for method JITTest.ScalarSByte:One():byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Two():byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00,T00] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M25605_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M25605_IG02:
       mov      eax, 2
						;; bbWeight=1    PerfScore 0.25
G_M25605_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=6ccd9bfa) for method JITTest.ScalarSByte:Two():byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:IsNormal(byte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    byte  ->  zero-ref   
;* V01 tmp0         [V01,T00] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M35534_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M35534_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M35534_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=45437531) for method JITTest.ScalarSByte:IsNormal(byte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Pi():byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M41872_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M41872_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=95095c6f) for method JITTest.ScalarSByte:Pi():byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Tau():byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M23113_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M23113_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=b93aa5b6) for method JITTest.ScalarSByte:Tau():byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:HalfPi():byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M23955_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M23955_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=d101a26c) for method JITTest.ScalarSByte:HalfPi():byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:PositiveInfinity():byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M21088_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M21088_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=7d12ad9f) for method JITTest.ScalarSByte:PositiveInfinity():byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:NegativeInfinity():byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M11304_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M11304_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=5484d3d7) for method JITTest.ScalarSByte:NegativeInfinity():byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:As(double):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )    byte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M36782_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M36782_IG02:
       vcvttsd2si eax, dword ptr [ebp+08H]
       movsx    eax, al
						;; bbWeight=1    PerfScore 7.25
G_M36782_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 18, prolog size 6, PerfScore 13.90, (MethodHash=42fb7051) for method JITTest.ScalarSByte:As(double):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:SquareRoot(byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 tmp0         [V01,T01] (  2,  2   )    byte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M31812_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M31812_IG02:
       movsx    eax, cl
       vxorps   xmm0, xmm0
       vcvtsi2ss  xmm0, eax
       vsqrtss  xmm0, xmm0
       vcvttss2si  eax, xmm0
       movsx    eax, al
						;; bbWeight=1    PerfScore 21.83
G_M31812_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 30, prolog size 6, PerfScore 28.98, (MethodHash=b08083bb) for method JITTest.ScalarSByte:SquareRoot(byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Add(byte,byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    byte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M48804_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M48804_IG02:
       movsx    eax, cl
       movsx    edx, dl
       add      eax, edx
       movsx    eax, al
						;; bbWeight=1    PerfScore 1.00
G_M48804_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.35, (MethodHash=ee0e415b) for method JITTest.ScalarSByte:Add(byte,byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Mod(byte,byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    byte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M5699_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M5699_IG02:
       movsx    eax, cl
       movsx    ecx, dl
       cdq      
       idiv     edx:eax, ecx
       movsx    eax, dl
						;; bbWeight=1    PerfScore 27.75
G_M5699_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 32.20, (MethodHash=855be9bc) for method JITTest.ScalarSByte:Mod(byte,byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Subtract(byte,byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    byte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M5297_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M5297_IG02:
       movsx    eax, cl
       movsx    edx, dl
       sub      eax, edx
       movsx    eax, al
						;; bbWeight=1    PerfScore 1.00
G_M5297_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.35, (MethodHash=6859eb4e) for method JITTest.ScalarSByte:Subtract(byte,byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Multiply(byte,byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    byte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M14569_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M14569_IG02:
       movsx    eax, cl
       movsx    edx, dl
       imul     eax, edx
       movsx    eax, al
						;; bbWeight=1    PerfScore 2.75
G_M14569_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 7.20, (MethodHash=0e6ac716) for method JITTest.ScalarSByte:Multiply(byte,byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Divide(byte,byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    byte  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M18614_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M18614_IG02:
       movsx    eax, cl
       movsx    ecx, dl
       cdq      
       idiv     edx:eax, ecx
       movsx    eax, al
						;; bbWeight=1    PerfScore 27.75
G_M18614_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 32.20, (MethodHash=ce89b749) for method JITTest.ScalarSByte:Divide(byte,byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Min(byte,byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;
; Lcl frame size = 0

G_M38415_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M38415_IG02:
       movsx    ecx, cl
       movsx    edx, dl
       call     Silk.NET.Maths.Scalar:Min(byte,byte):byte
						;; bbWeight=1    PerfScore 1.50
G_M38415_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.85, (MethodHash=b61169f0) for method JITTest.ScalarSByte:Min(byte,byte):byte
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Min(byte,byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T04] (  3,  2   )    byte  ->  edx         "Inline return value spill temp"
;  V03 cse0         [V03,T02] (  3,  2.50)     int  ->  edx         "CSE - aggressive"
;  V04 cse1         [V04,T03] (  3,  2.50)     int  ->  eax         "CSE - aggressive"
;
; Lcl frame size = 0

G_M1654_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M1654_IG02:
       movsx    eax, cl
       movsx    edx, dl
       cmp      eax, edx
       jle      SHORT G_M1654_IG04
						;; bbWeight=1    PerfScore 1.75
G_M1654_IG03:
       jmp      SHORT G_M1654_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M1654_IG04:
       mov      edx, eax
						;; bbWeight=0.50 PerfScore 0.12
G_M1654_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M1654_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 21, prolog size 3, PerfScore 7.98, (MethodHash=9c4bf989) for method Silk.NET.Maths.Scalar:Min(byte,byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Max(byte,byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;
; Lcl frame size = 0

G_M51473_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M51473_IG02:
       movsx    ecx, cl
       movsx    edx, dl
       call     Silk.NET.Maths.Scalar:Max(byte,byte):byte
						;; bbWeight=1    PerfScore 1.50
G_M51473_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.85, (MethodHash=578236ee) for method JITTest.ScalarSByte:Max(byte,byte):byte
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Max(byte,byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T04] (  3,  2   )    byte  ->  edx         "Inline return value spill temp"
;  V03 cse0         [V03,T02] (  3,  2.50)     int  ->  edx         "CSE - aggressive"
;  V04 cse1         [V04,T03] (  3,  2.50)     int  ->  eax         "CSE - aggressive"
;
; Lcl frame size = 0

G_M4456_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M4456_IG02:
       movsx    eax, cl
       movsx    edx, dl
       cmp      eax, edx
       jge      SHORT G_M4456_IG04
						;; bbWeight=1    PerfScore 1.75
G_M4456_IG03:
       jmp      SHORT G_M4456_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M4456_IG04:
       mov      edx, eax
						;; bbWeight=0.50 PerfScore 0.12
G_M4456_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M4456_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 21, prolog size 3, PerfScore 7.98, (MethodHash=bb37ee97) for method Silk.NET.Maths.Scalar:Max(byte,byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Larger(byte,byte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M2414_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M2414_IG02:
       movsx    eax, cl
       movsx    edx, dl
       cmp      eax, edx
       setg     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M2414_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=01def691) for method JITTest.ScalarSByte:Larger(byte,byte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Smaller(byte,byte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M38985_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M38985_IG02:
       movsx    eax, cl
       movsx    edx, dl
       cmp      eax, edx
       setl     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M38985_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=67c967b6) for method JITTest.ScalarSByte:Smaller(byte,byte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:LargerEquals(byte,byte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M26129_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M26129_IG02:
       movsx    eax, cl
       movsx    edx, dl
       cmp      eax, edx
       setge    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M26129_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=9e3499ee) for method JITTest.ScalarSByte:LargerEquals(byte,byte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:SmallerEquals(byte,byte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M13942_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M13942_IG02:
       movsx    eax, cl
       movsx    edx, dl
       cmp      eax, edx
       setle    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M13942_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=4231c989) for method JITTest.ScalarSByte:SmallerEquals(byte,byte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Clamp(byte,byte,byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 arg2         [V02,T03] (  1,  1   )    byte  ->  [ebp+0x08]  
;  V03 tmp0         [V03,T02] (  2,  4   )     int  ->  ecx         "argument with side effect"
;
; Lcl frame size = 0

G_M54704_IG01:
       push     ebp
       mov      ebp, esp
       push     ebx
						;; bbWeight=1    PerfScore 2.25
G_M54704_IG02:
       movsx    ecx, cl
       movsx    edx, dl
       call     Silk.NET.Maths.Scalar:Max(byte,byte):byte
       mov      ecx, eax
       mov      ebx, dword ptr [ebp+08H]
       movsx    edx, bl
       call     Silk.NET.Maths.Scalar:Min(byte,byte):byte
       movsx    eax, al
						;; bbWeight=1    PerfScore 4.25
G_M54704_IG03:
       pop      ebx
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 3.00

; Total bytes of code 36, prolog size 4, PerfScore 13.10, (MethodHash=f0792a4f) for method JITTest.ScalarSByte:Clamp(byte,byte,byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Negate(byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;
; Lcl frame size = 0

G_M19743_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M19743_IG02:
       movsx    ecx, cl
       call     Silk.NET.Maths.Scalar:Negate(byte):byte
						;; bbWeight=1    PerfScore 1.25
G_M19743_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.30, (MethodHash=3bb5b2e0) for method JITTest.ScalarSByte:Negate(byte):byte
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Negate(byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;* V01 loc0         [V01    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op
;
; Lcl frame size = 0

G_M23654_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M23654_IG02:
       movsx    eax, cl
       neg      eax
       movsx    eax, al
						;; bbWeight=1    PerfScore 0.75
G_M23654_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 4.80, (MethodHash=749da399) for method Silk.NET.Maths.Scalar:Negate(byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Equal(byte,byte):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )    byte  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M8141_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M8141_IG02:
       movsx    eax, cl
       movsx    edx, dl
       cmp      eax, edx
       sete     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M8141_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=fa45e032) for method JITTest.ScalarSByte:Equal(byte,byte):bool
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Acos(byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    byte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M8061_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M8061_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=ac6ce082) for method JITTest.ScalarSByte:Acos(byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Abs(byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )    byte  ->  ecx        
;  V01 tmp0         [V01,T01] (  2,  2   )    byte  ->  eax         "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   float  ->  zero-ref    "Inlining Arg"
;
; Lcl frame size = 0

G_M9523_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M9523_IG02:
       movsx    eax, cl
       vxorps   xmm0, xmm0
       vcvtsi2ss  xmm0, eax
       vmovss   xmm1, dword ptr [@RWD00]
       vandps   xmm0, xmm1
       vcvttss2si  eax, xmm0
       movsx    eax, al
						;; bbWeight=1    PerfScore 13.17
G_M9523_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50
RWD00  dd	7FFFFFFFh


; Total bytes of code 38, prolog size 6, PerfScore 21.22, (MethodHash=b1a7dacc) for method JITTest.ScalarSByte:Abs(byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Sin(byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    byte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M10583_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M10583_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=174bd6a8) for method JITTest.ScalarSByte:Sin(byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Sinh(byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    byte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M7647_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M7647_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=a85fe220) for method JITTest.ScalarSByte:Sinh(byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarSByte:Asin(byte):byte
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    byte  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    byte  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    byte  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M42774_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M42774_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=2d1e58e9) for method JITTest.ScalarSByte:Asin(byte):byte
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:EntryPoint()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V01 tmp1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V02 tmp2         [V02    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V03 tmp3         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V04 tmp4         [V04    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V05 tmp5         [V05    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V06 tmp6         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V07 tmp7         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V08 tmp8         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V09 tmp9         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V10 tmp10        [V10    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V11 tmp11        [V11    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V12 tmp12        [V12    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V13 tmp13        [V13    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V14 tmp14        [V14    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V15 tmp15        [V15    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V16 tmp16        [V16    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V17 tmp17        [V17    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V18 tmp18        [V18    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V19 tmp19        [V19    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V20 tmp20        [V20    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V21 tmp21        [V21    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V22 tmp22        [V22    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V23 tmp23        [V23    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V24 tmp24        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V25 tmp25        [V25    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V26 tmp26        [V26    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V27 tmp27        [V27    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V28 tmp28        [V28    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V29 tmp29        [V29    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V30 tmp30        [V30    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V31 tmp31        [V31    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V32 tmp32        [V32    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;  V33 EHSlots      [V33    ] (  1,  1   )     blk (16) [ebp-0x14]   do-not-enreg[X] must-init addr-exposed "lvaShadowSPslotsVar"
;
; Lcl frame size = 20

G_M26591_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 20
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-14H], eax
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], eax
       mov      dword ptr [ebp-08H], eax
						;; bbWeight=1    PerfScore 6.75
G_M26591_IG02:
       xor      ecx, ecx
       call     JITTest.ScalarUShort:Atan(ushort):ushort
       jmp      SHORT G_M26591_IG04
						;; bbWeight=1    PerfScore 3.25
G_M26591_IG03:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG04:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Atan2(ushort,ushort):ushort
       jmp      SHORT G_M26591_IG06
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG05:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG06:
       xor      ecx, ecx
       call     JITTest.ScalarUShort:Cos(ushort):ushort
       jmp      SHORT G_M26591_IG08
						;; bbWeight=1    PerfScore 3.25
G_M26591_IG07:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG08:
       xor      ecx, ecx
       call     JITTest.ScalarUShort:Cosh(ushort):ushort
       jmp      SHORT G_M26591_IG10
						;; bbWeight=1    PerfScore 3.25
G_M26591_IG09:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG10:
       call     JITTest.ScalarUShort:One():ushort
       jmp      SHORT G_M26591_IG12
						;; bbWeight=1    PerfScore 3.00
G_M26591_IG11:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG12:
       call     JITTest.ScalarUShort:Two():ushort
       jmp      SHORT G_M26591_IG14
						;; bbWeight=1    PerfScore 3.00
G_M26591_IG13:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG14:
       xor      ecx, ecx
       call     JITTest.ScalarUShort:IsNormal(ushort):bool
       jmp      SHORT G_M26591_IG16
						;; bbWeight=1    PerfScore 3.25
G_M26591_IG15:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG16:
       call     JITTest.ScalarUShort:Pi():ushort
       jmp      SHORT G_M26591_IG18
						;; bbWeight=1    PerfScore 3.00
G_M26591_IG17:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG18:
       call     JITTest.ScalarUShort:Tau():ushort
       jmp      SHORT G_M26591_IG20
						;; bbWeight=1    PerfScore 3.00
G_M26591_IG19:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG20:
       call     JITTest.ScalarUShort:HalfPi():ushort
       jmp      SHORT G_M26591_IG22
						;; bbWeight=1    PerfScore 3.00
G_M26591_IG21:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG22:
       call     JITTest.ScalarUShort:PositiveInfinity():ushort
       jmp      SHORT G_M26591_IG24
						;; bbWeight=1    PerfScore 3.00
G_M26591_IG23:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG24:
       call     JITTest.ScalarUShort:NegativeInfinity():ushort
       jmp      SHORT G_M26591_IG26
						;; bbWeight=1    PerfScore 3.00
G_M26591_IG25:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG26:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarUShort:As(double):ushort
       jmp      SHORT G_M26591_IG28
						;; bbWeight=1    PerfScore 4.08
G_M26591_IG27:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG28:
       xor      ecx, ecx
       call     JITTest.ScalarUShort:SquareRoot(ushort):ushort
       jmp      SHORT G_M26591_IG30
						;; bbWeight=1    PerfScore 3.25
G_M26591_IG29:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG30:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Add(ushort,ushort):ushort
       jmp      SHORT G_M26591_IG32
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG31:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG32:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Mod(ushort,ushort):ushort
       jmp      SHORT G_M26591_IG34
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG33:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG34:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Subtract(ushort,ushort):ushort
       jmp      SHORT G_M26591_IG36
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG35:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG36:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Multiply(ushort,ushort):ushort
       jmp      SHORT G_M26591_IG38
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG37:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG38:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Divide(ushort,ushort):ushort
       jmp      SHORT G_M26591_IG40
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG39:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG40:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Min(ushort,ushort):ushort
       jmp      SHORT G_M26591_IG42
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG41:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG42:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Max(ushort,ushort):ushort
       jmp      SHORT G_M26591_IG44
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG43:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG44:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Larger(ushort,ushort):bool
       jmp      SHORT G_M26591_IG46
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG45:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG46:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Smaller(ushort,ushort):bool
       jmp      SHORT G_M26591_IG48
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG47:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG48:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:LargerEquals(ushort,ushort):bool
       jmp      SHORT G_M26591_IG50
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG49:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG50:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:SmallerEquals(ushort,ushort):bool
       jmp      SHORT G_M26591_IG52
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG51:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG52:
       push     0
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Clamp(ushort,ushort,ushort):ushort
       jmp      SHORT G_M26591_IG54
						;; bbWeight=1    PerfScore 4.50
G_M26591_IG53:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG54:
       xor      ecx, ecx
       call     JITTest.ScalarUShort:Negate(ushort):ushort
       jmp      SHORT G_M26591_IG56
						;; bbWeight=1    PerfScore 3.25
G_M26591_IG55:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG56:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUShort:Equal(ushort,ushort):bool
       jmp      SHORT G_M26591_IG58
						;; bbWeight=1    PerfScore 3.50
G_M26591_IG57:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG58:
       xor      ecx, ecx
       call     JITTest.ScalarUShort:Acos(ushort):ushort
       jmp      SHORT G_M26591_IG60
						;; bbWeight=1    PerfScore 3.25
G_M26591_IG59:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG60:
       xor      ecx, ecx
       call     JITTest.ScalarUShort:Abs(ushort):ushort
       jmp      SHORT G_M26591_IG62
						;; bbWeight=1    PerfScore 3.25
G_M26591_IG61:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG62:
       xor      ecx, ecx
       call     JITTest.ScalarUShort:Sin(ushort):ushort
       jmp      SHORT G_M26591_IG64
						;; bbWeight=1    PerfScore 3.25
G_M26591_IG63:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG64:
       xor      ecx, ecx
       call     JITTest.ScalarUShort:Sinh(ushort):ushort
       jmp      SHORT G_M26591_IG66
						;; bbWeight=1    PerfScore 3.25
G_M26591_IG65:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG66:
       xor      ecx, ecx
       call     JITTest.ScalarUShort:Asin(ushort):ushort
       jmp      SHORT G_M26591_IG68
						;; bbWeight=1    PerfScore 3.25
G_M26591_IG67:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M26591_IG68:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75

; Total bytes of code 515, prolog size 23, PerfScore 171.03, (MethodHash=3ebd9820) for method JITTest.ScalarUShort:EntryPoint()
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Atan(ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  ushort  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M30887_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M30887_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=d7d58758) for method JITTest.ScalarUShort:Atan(ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Atan2(ushort,ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  ushort  ->  zero-ref   
;* V01 arg1         [V01    ] (  0,  0   )  ushort  ->  zero-ref   
;* V02 tmp0         [V02    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M37886_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M37886_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=5c7c6c01) for method JITTest.ScalarUShort:Atan2(ushort,ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Cos(ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  ushort  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M11874_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M11874_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=b794d19d) for method JITTest.ScalarUShort:Cos(ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Cosh(ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  ushort  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M59018_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M59018_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=3f331975) for method JITTest.ScalarUShort:Cosh(ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:One():ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00,T00] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M13342_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M13342_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M13342_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=dda4cbe1) for method JITTest.ScalarUShort:One():ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Two():ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00,T00] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M52406_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M52406_IG02:
       mov      eax, 2
						;; bbWeight=1    PerfScore 0.25
G_M52406_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=a4e93349) for method JITTest.ScalarUShort:Two():ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:IsNormal(ushort):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  ushort  ->  zero-ref   
;* V01 tmp0         [V01,T00] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M41021_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M41021_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M41021_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=afa55fc2) for method JITTest.ScalarUShort:IsNormal(ushort):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Pi():ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M41763_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M41763_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=00025cdc) for method JITTest.ScalarUShort:Pi():ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Tau():ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M18810_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M18810_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=9a9eb685) for method JITTest.ScalarUShort:Tau():ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:HalfPi():ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M63456_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M63456_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=bc23081f) for method JITTest.ScalarUShort:HalfPi():ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:PositiveInfinity():ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M43795_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M43795_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=509054ec) for method JITTest.ScalarUShort:PositiveInfinity():ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:NegativeInfinity():ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M44891_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M44891_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=59af50a4) for method JITTest.ScalarUShort:NegativeInfinity():ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:As(double):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )  ushort  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M62941_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M62941_IG02:
       vcvttsd2si eax, dword ptr [ebp+08H]
       movzx    eax, ax
						;; bbWeight=1    PerfScore 7.25
G_M62941_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 18, prolog size 6, PerfScore 13.90, (MethodHash=ff570a22) for method JITTest.ScalarUShort:As(double):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:SquareRoot(ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 tmp0         [V01,T01] (  2,  2   )  ushort  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M21914_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M21914_IG02:
       movzx    eax, cx
       vxorps   xmm0, xmm0
       vcvtsi2ss  xmm0, eax
       vsqrtss  xmm0, xmm0
       vcvttss2si  eax, xmm0
       movzx    eax, ax
						;; bbWeight=1    PerfScore 21.83
G_M21914_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 30, prolog size 6, PerfScore 28.98, (MethodHash=377eaa65) for method JITTest.ScalarUShort:SquareRoot(ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Add(ushort,ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )  ushort  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M27063_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M27063_IG02:
       movzx    eax, cx
       movzx    edx, dx
       add      eax, edx
       movzx    eax, ax
						;; bbWeight=1    PerfScore 1.00
G_M27063_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.35, (MethodHash=02439648) for method JITTest.ScalarUShort:Add(ushort,ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Mod(ushort,ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )  ushort  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M20432_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M20432_IG02:
       movzx    eax, cx
       movzx    ecx, dx
       cdq      
       idiv     edx:eax, ecx
       movzx    eax, dx
						;; bbWeight=1    PerfScore 27.75
G_M20432_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 32.20, (MethodHash=6090b02f) for method JITTest.ScalarUShort:Mod(ushort,ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Subtract(ushort,ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )  ushort  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M5474_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M5474_IG02:
       movzx    eax, cx
       movzx    edx, dx
       sub      eax, edx
       movzx    eax, ax
						;; bbWeight=1    PerfScore 1.00
G_M5474_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.35, (MethodHash=eeebea9d) for method JITTest.ScalarUShort:Subtract(ushort,ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Multiply(ushort,ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )  ushort  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M54458_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M54458_IG02:
       movzx    eax, cx
       movzx    edx, dx
       imul     eax, edx
       movzx    eax, ax
						;; bbWeight=1    PerfScore 2.75
G_M54458_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 7.20, (MethodHash=46b92b45) for method JITTest.ScalarUShort:Multiply(ushort,ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Divide(ushort,ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )  ushort  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M18149_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M18149_IG02:
       movzx    eax, cx
       movzx    ecx, dx
       cdq      
       idiv     edx:eax, ecx
       movzx    eax, ax
						;; bbWeight=1    PerfScore 27.75
G_M18149_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 32.20, (MethodHash=f10db91a) for method JITTest.ScalarUShort:Divide(ushort,ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Min(ushort,ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;
; Lcl frame size = 0

G_M41244_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M41244_IG02:
       movzx    ecx, cx
       movzx    edx, dx
       call     Silk.NET.Maths.Scalar:Min(ushort,ushort):ushort
						;; bbWeight=1    PerfScore 1.50
G_M41244_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.85, (MethodHash=779f5ee3) for method JITTest.ScalarUShort:Min(ushort,ushort):ushort
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Min(ushort,ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T04] (  3,  2   )  ushort  ->  edx         "Inline return value spill temp"
;  V03 cse0         [V03,T02] (  3,  2.50)     int  ->  edx         "CSE - aggressive"
;  V04 cse1         [V04,T03] (  3,  2.50)     int  ->  eax         "CSE - aggressive"
;
; Lcl frame size = 0

G_M4923_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M4923_IG02:
       movzx    eax, cx
       movzx    edx, dx
       cmp      eax, edx
       jle      SHORT G_M4923_IG04
						;; bbWeight=1    PerfScore 1.75
G_M4923_IG03:
       jmp      SHORT G_M4923_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M4923_IG04:
       mov      edx, eax
						;; bbWeight=0.50 PerfScore 0.12
G_M4923_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M4923_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 21, prolog size 3, PerfScore 7.98, (MethodHash=35e3ecc4) for method Silk.NET.Maths.Scalar:Min(ushort,ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Max(ushort,ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;
; Lcl frame size = 0

G_M41986_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M41986_IG02:
       movzx    ecx, cx
       movzx    edx, dx
       call     Silk.NET.Maths.Scalar:Max(ushort,ushort):ushort
						;; bbWeight=1    PerfScore 1.50
G_M41986_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.85, (MethodHash=76385bfd) for method JITTest.ScalarUShort:Max(ushort,ushort):ushort
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Max(ushort,ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T04] (  3,  2   )  ushort  ->  edx         "Inline return value spill temp"
;  V03 cse0         [V03,T02] (  3,  2.50)     int  ->  edx         "CSE - aggressive"
;  V04 cse1         [V04,T03] (  3,  2.50)     int  ->  eax         "CSE - aggressive"
;
; Lcl frame size = 0

G_M805_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M805_IG02:
       movzx    eax, cx
       movzx    edx, dx
       cmp      eax, edx
       jge      SHORT G_M805_IG04
						;; bbWeight=1    PerfScore 1.75
G_M805_IG03:
       jmp      SHORT G_M805_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M805_IG04:
       mov      edx, eax
						;; bbWeight=0.50 PerfScore 0.12
G_M805_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M805_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 21, prolog size 3, PerfScore 7.98, (MethodHash=c73bfcda) for method Silk.NET.Maths.Scalar:Max(ushort,ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Larger(ushort,ushort):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M080_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M080_IG02:
       movzx    eax, cx
       movzx    edx, dx
       cmp      eax, edx
       setg     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M080_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=3ea2ffaf) for method JITTest.ScalarUShort:Larger(ushort,ushort):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Smaller(ushort,ushort):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M60855_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M60855_IG02:
       movzx    eax, cx
       movzx    edx, dx
       cmp      eax, edx
       setl     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M60855_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=c70c1248) for method JITTest.ScalarUShort:Smaller(ushort,ushort):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:LargerEquals(ushort,ushort):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M28335_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M28335_IG02:
       movzx    eax, cx
       movzx    edx, dx
       cmp      eax, edx
       setge    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M28335_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=d9fd9150) for method JITTest.ScalarUShort:LargerEquals(ushort,ushort):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:SmallerEquals(ushort,ushort):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M34056_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M34056_IG02:
       movzx    eax, cx
       movzx    edx, dx
       cmp      eax, edx
       setle    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M34056_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=19ad7af7) for method JITTest.ScalarUShort:SmallerEquals(ushort,ushort):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Clamp(ushort,ushort,ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 arg2         [V02,T03] (  1,  1   )  ushort  ->  [ebp+0x08]  
;  V03 tmp0         [V03,T02] (  2,  4   )     int  ->  ecx         "argument with side effect"
;
; Lcl frame size = 0

G_M59470_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
						;; bbWeight=1    PerfScore 2.25
G_M59470_IG02:
       movzx    ecx, cx
       movzx    edx, dx
       call     Silk.NET.Maths.Scalar:Max(ushort,ushort):ushort
       mov      ecx, eax
       mov      esi, dword ptr [ebp+08H]
       movzx    edx, si
       call     Silk.NET.Maths.Scalar:Min(ushort,ushort):ushort
       movzx    eax, ax
						;; bbWeight=1    PerfScore 4.25
G_M59470_IG03:
       pop      esi
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 3.00

; Total bytes of code 36, prolog size 4, PerfScore 13.10, (MethodHash=7db317b1) for method JITTest.ScalarUShort:Clamp(ushort,ushort,ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Negate(ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;
; Lcl frame size = 0

G_M52289_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M52289_IG02:
       movzx    ecx, cx
       call     Silk.NET.Maths.Scalar:Negate(ushort):ushort
						;; bbWeight=1    PerfScore 1.25
G_M52289_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.30, (MethodHash=358e33be) for method JITTest.ScalarUShort:Negate(ushort):ushort
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Negate(ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  ushort  ->  zero-ref   
;* V01 loc0         [V01    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op
;
; Lcl frame size = 0

G_M11110_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M11110_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=ec21d499) for method Silk.NET.Maths.Scalar:Negate(ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Equal(ushort,ushort):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )  ushort  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M3123_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M3123_IG02:
       movzx    eax, cx
       movzx    edx, dx
       cmp      eax, edx
       sete     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M3123_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=2dd3f3cc) for method JITTest.ScalarUShort:Equal(ushort,ushort):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Acos(ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  ushort  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M547_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M547_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=85d4fddc) for method JITTest.ScalarUShort:Acos(ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Abs(ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )  ushort  ->  ecx        
;  V01 tmp0         [V01,T01] (  2,  2   )  ushort  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M4781_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M4781_IG02:
       movzx    eax, cx
						;; bbWeight=1    PerfScore 0.25
G_M4781_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 8, prolog size 3, PerfScore 3.80, (MethodHash=431eed52) for method JITTest.ScalarUShort:Abs(ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Sin(ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  ushort  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M31945_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M31945_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=f3a08336) for method JITTest.ScalarUShort:Sin(ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Sinh(ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  ushort  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M64513_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M64513_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=b04203fe) for method JITTest.ScalarUShort:Sinh(ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarUShort:Asin(ushort):ushort
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  ushort  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )  ushort  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  ushort  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M42952_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M42952_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=ef5e5837) for method JITTest.ScalarUShort:Asin(ushort):ushort
; ============================================================

; Assembly listing for method JITTest.ScalarShort:EntryPoint()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V01 tmp1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V02 tmp2         [V02    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V03 tmp3         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V04 tmp4         [V04    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V05 tmp5         [V05    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V06 tmp6         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V07 tmp7         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V08 tmp8         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V09 tmp9         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V10 tmp10        [V10    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V11 tmp11        [V11    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V12 tmp12        [V12    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V13 tmp13        [V13    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V14 tmp14        [V14    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V15 tmp15        [V15    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V16 tmp16        [V16    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V17 tmp17        [V17    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V18 tmp18        [V18    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V19 tmp19        [V19    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V20 tmp20        [V20    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V21 tmp21        [V21    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V22 tmp22        [V22    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V23 tmp23        [V23    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V24 tmp24        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V25 tmp25        [V25    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V26 tmp26        [V26    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V27 tmp27        [V27    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V28 tmp28        [V28    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V29 tmp29        [V29    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V30 tmp30        [V30    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V31 tmp31        [V31    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V32 tmp32        [V32    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;  V33 EHSlots      [V33    ] (  1,  1   )     blk (16) [ebp-0x14]   do-not-enreg[X] must-init addr-exposed "lvaShadowSPslotsVar"
;
; Lcl frame size = 20

G_M5194_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 20
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-14H], eax
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], eax
       mov      dword ptr [ebp-08H], eax
						;; bbWeight=1    PerfScore 6.75
G_M5194_IG02:
       xor      ecx, ecx
       call     JITTest.ScalarShort:Atan(short):short
       jmp      SHORT G_M5194_IG04
						;; bbWeight=1    PerfScore 3.25
G_M5194_IG03:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG04:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Atan2(short,short):short
       jmp      SHORT G_M5194_IG06
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG05:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG06:
       xor      ecx, ecx
       call     JITTest.ScalarShort:Cos(short):short
       jmp      SHORT G_M5194_IG08
						;; bbWeight=1    PerfScore 3.25
G_M5194_IG07:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG08:
       xor      ecx, ecx
       call     JITTest.ScalarShort:Cosh(short):short
       jmp      SHORT G_M5194_IG10
						;; bbWeight=1    PerfScore 3.25
G_M5194_IG09:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG10:
       call     JITTest.ScalarShort:One():short
       jmp      SHORT G_M5194_IG12
						;; bbWeight=1    PerfScore 3.00
G_M5194_IG11:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG12:
       call     JITTest.ScalarShort:Two():short
       jmp      SHORT G_M5194_IG14
						;; bbWeight=1    PerfScore 3.00
G_M5194_IG13:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG14:
       xor      ecx, ecx
       call     JITTest.ScalarShort:IsNormal(short):bool
       jmp      SHORT G_M5194_IG16
						;; bbWeight=1    PerfScore 3.25
G_M5194_IG15:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG16:
       call     JITTest.ScalarShort:Pi():short
       jmp      SHORT G_M5194_IG18
						;; bbWeight=1    PerfScore 3.00
G_M5194_IG17:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG18:
       call     JITTest.ScalarShort:Tau():short
       jmp      SHORT G_M5194_IG20
						;; bbWeight=1    PerfScore 3.00
G_M5194_IG19:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG20:
       call     JITTest.ScalarShort:HalfPi():short
       jmp      SHORT G_M5194_IG22
						;; bbWeight=1    PerfScore 3.00
G_M5194_IG21:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG22:
       call     JITTest.ScalarShort:PositiveInfinity():short
       jmp      SHORT G_M5194_IG24
						;; bbWeight=1    PerfScore 3.00
G_M5194_IG23:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG24:
       call     JITTest.ScalarShort:NegativeInfinity():short
       jmp      SHORT G_M5194_IG26
						;; bbWeight=1    PerfScore 3.00
G_M5194_IG25:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG26:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarShort:As(double):short
       jmp      SHORT G_M5194_IG28
						;; bbWeight=1    PerfScore 4.08
G_M5194_IG27:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG28:
       xor      ecx, ecx
       call     JITTest.ScalarShort:SquareRoot(short):short
       jmp      SHORT G_M5194_IG30
						;; bbWeight=1    PerfScore 3.25
G_M5194_IG29:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG30:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Add(short,short):short
       jmp      SHORT G_M5194_IG32
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG31:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG32:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Mod(short,short):short
       jmp      SHORT G_M5194_IG34
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG33:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG34:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Subtract(short,short):short
       jmp      SHORT G_M5194_IG36
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG35:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG36:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Multiply(short,short):short
       jmp      SHORT G_M5194_IG38
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG37:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG38:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Divide(short,short):short
       jmp      SHORT G_M5194_IG40
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG39:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG40:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Min(short,short):short
       jmp      SHORT G_M5194_IG42
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG41:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG42:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Max(short,short):short
       jmp      SHORT G_M5194_IG44
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG43:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG44:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Larger(short,short):bool
       jmp      SHORT G_M5194_IG46
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG45:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG46:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Smaller(short,short):bool
       jmp      SHORT G_M5194_IG48
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG47:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG48:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:LargerEquals(short,short):bool
       jmp      SHORT G_M5194_IG50
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG49:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG50:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:SmallerEquals(short,short):bool
       jmp      SHORT G_M5194_IG52
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG51:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG52:
       push     0
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Clamp(short,short,short):short
       jmp      SHORT G_M5194_IG54
						;; bbWeight=1    PerfScore 4.50
G_M5194_IG53:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG54:
       xor      ecx, ecx
       call     JITTest.ScalarShort:Negate(short):short
       jmp      SHORT G_M5194_IG56
						;; bbWeight=1    PerfScore 3.25
G_M5194_IG55:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG56:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarShort:Equal(short,short):bool
       jmp      SHORT G_M5194_IG58
						;; bbWeight=1    PerfScore 3.50
G_M5194_IG57:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG58:
       xor      ecx, ecx
       call     JITTest.ScalarShort:Acos(short):short
       jmp      SHORT G_M5194_IG60
						;; bbWeight=1    PerfScore 3.25
G_M5194_IG59:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG60:
       xor      ecx, ecx
       call     JITTest.ScalarShort:Abs(short):short
       jmp      SHORT G_M5194_IG62
						;; bbWeight=1    PerfScore 3.25
G_M5194_IG61:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG62:
       xor      ecx, ecx
       call     JITTest.ScalarShort:Sin(short):short
       jmp      SHORT G_M5194_IG64
						;; bbWeight=1    PerfScore 3.25
G_M5194_IG63:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG64:
       xor      ecx, ecx
       call     JITTest.ScalarShort:Sinh(short):short
       jmp      SHORT G_M5194_IG66
						;; bbWeight=1    PerfScore 3.25
G_M5194_IG65:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG66:
       xor      ecx, ecx
       call     JITTest.ScalarShort:Asin(short):short
       jmp      SHORT G_M5194_IG68
						;; bbWeight=1    PerfScore 3.25
G_M5194_IG67:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M5194_IG68:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75

; Total bytes of code 515, prolog size 23, PerfScore 171.03, (MethodHash=3211ebb5) for method JITTest.ScalarShort:EntryPoint()
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Atan(short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   short  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M22898_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M22898_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=c340a68d) for method JITTest.ScalarShort:Atan(short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Atan2(short,short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   short  ->  zero-ref   
;* V01 arg1         [V01    ] (  0,  0   )   short  ->  zero-ref   
;* V02 tmp0         [V02    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M20254_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M20254_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=c76db0e1) for method JITTest.ScalarShort:Atan2(short,short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Cos(short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   short  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M43159_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M43159_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=ab4e5768) for method JITTest.ScalarShort:Cos(short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Cosh(short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   short  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M63071_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M63071_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=419d09a0) for method JITTest.ScalarShort:Cosh(short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:One():short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00,T00] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M34686_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M34686_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M34686_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=b55f7881) for method JITTest.ScalarShort:One():short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Two():short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00,T00] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M42262_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M42262_IG02:
       mov      eax, 2
						;; bbWeight=1    PerfScore 0.25
G_M42262_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=8de95ae9) for method JITTest.ScalarShort:Two():short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:IsNormal(short):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   short  ->  zero-ref   
;* V01 tmp0         [V01,T00] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M47613_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M47613_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M47613_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=da6c4602) for method JITTest.ScalarShort:IsNormal(short):bool
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Pi():short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M51139_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M51139_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=4f35383c) for method JITTest.ScalarShort:Pi():short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Tau():short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M9178_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M9178_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=cc88dc25) for method JITTest.ScalarShort:Tau():short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:HalfPi():short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M16416_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M16416_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=0ad8bfdf) for method JITTest.ScalarShort:HalfPi():short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:PositiveInfinity():short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M3891_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M3891_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=2d5ff0cc) for method JITTest.ScalarShort:PositiveInfinity():short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:NegativeInfinity():short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M17659_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M17659_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=1cd7bb04) for method JITTest.ScalarShort:NegativeInfinity():short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:As(double):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M32957_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M32957_IG02:
       vcvttsd2si eax, dword ptr [ebp+08H]
       movsx    eax, ax
						;; bbWeight=1    PerfScore 7.25
G_M32957_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 18, prolog size 6, PerfScore 13.90, (MethodHash=f8007f42) for method JITTest.ScalarShort:As(double):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:SquareRoot(short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 tmp0         [V01,T01] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M20559_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M20559_IG02:
       movsx    eax, cx
       vxorps   xmm0, xmm0
       vcvtsi2ss  xmm0, eax
       vsqrtss  xmm0, xmm0
       vcvttss2si  eax, xmm0
       movsx    eax, ax
						;; bbWeight=1    PerfScore 21.83
G_M20559_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 30, prolog size 6, PerfScore 28.98, (MethodHash=5c77afb0) for method JITTest.ScalarShort:SquareRoot(short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Add(short,short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M30135_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M30135_IG02:
       movsx    eax, cx
       movsx    edx, dx
       add      eax, edx
       movsx    eax, ax
						;; bbWeight=1    PerfScore 1.00
G_M30135_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.35, (MethodHash=05638a48) for method JITTest.ScalarShort:Add(short,short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Mod(short,short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M52400_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M52400_IG02:
       movsx    eax, cx
       movsx    ecx, dx
       cdq      
       idiv     edx:eax, ecx
       movsx    eax, dx
						;; bbWeight=1    PerfScore 27.75
G_M52400_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 32.20, (MethodHash=a234334f) for method JITTest.ScalarShort:Mod(short,short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Subtract(short,short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M64354_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M64354_IG02:
       movsx    eax, cx
       movsx    edx, dx
       sub      eax, edx
       movsx    eax, ax
						;; bbWeight=1    PerfScore 1.00
G_M64354_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.35, (MethodHash=6ac0049d) for method JITTest.ScalarShort:Subtract(short,short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Multiply(short,short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M27834_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M27834_IG02:
       movsx    eax, cx
       movsx    edx, dx
       imul     eax, edx
       movsx    eax, ax
						;; bbWeight=1    PerfScore 2.75
G_M27834_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 7.20, (MethodHash=15779345) for method JITTest.ScalarShort:Multiply(short,short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Divide(short,short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M17157_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M17157_IG02:
       movsx    eax, cx
       movsx    ecx, dx
       cdq      
       idiv     edx:eax, ecx
       movsx    eax, ax
						;; bbWeight=1    PerfScore 27.75
G_M17157_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 3, PerfScore 32.20, (MethodHash=7e96bcfa) for method JITTest.ScalarShort:Divide(short,short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Min(short,short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;
; Lcl frame size = 0

G_M55292_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M55292_IG02:
       movsx    ecx, cx
       movsx    edx, dx
       call     Silk.NET.Maths.Scalar:Min(short,short):short
						;; bbWeight=1    PerfScore 1.50
G_M55292_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.85, (MethodHash=7a272803) for method JITTest.ScalarShort:Min(short,short):short
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Min(short,short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T04] (  3,  2   )   short  ->  edx         "Inline return value spill temp"
;  V03 cse0         [V03,T02] (  3,  2.50)     int  ->  edx         "CSE - aggressive"
;  V04 cse1         [V04,T03] (  3,  2.50)     int  ->  eax         "CSE - aggressive"
;
; Lcl frame size = 0

G_M12462_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M12462_IG02:
       movsx    eax, cx
       movsx    edx, dx
       cmp      eax, edx
       jle      SHORT G_M12462_IG04
						;; bbWeight=1    PerfScore 1.75
G_M12462_IG03:
       jmp      SHORT G_M12462_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M12462_IG04:
       mov      edx, eax
						;; bbWeight=0.50 PerfScore 0.12
G_M12462_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M12462_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 21, prolog size 3, PerfScore 7.98, (MethodHash=d86dcf51) for method Silk.NET.Maths.Scalar:Min(short,short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Max(short,short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;
; Lcl frame size = 0

G_M6306_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M6306_IG02:
       movsx    ecx, cx
       movsx    edx, dx
       call     Silk.NET.Maths.Scalar:Max(short,short):short
						;; bbWeight=1    PerfScore 1.50
G_M6306_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 16, prolog size 3, PerfScore 5.85, (MethodHash=fcfbe75d) for method JITTest.ScalarShort:Max(short,short):short
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Max(short,short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T04] (  3,  2   )   short  ->  edx         "Inline return value spill temp"
;  V03 cse0         [V03,T02] (  3,  2.50)     int  ->  edx         "CSE - aggressive"
;  V04 cse1         [V04,T03] (  3,  2.50)     int  ->  eax         "CSE - aggressive"
;
; Lcl frame size = 0

G_M2800_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M2800_IG02:
       movsx    eax, cx
       movsx    edx, dx
       cmp      eax, edx
       jge      SHORT G_M2800_IG04
						;; bbWeight=1    PerfScore 1.75
G_M2800_IG03:
       jmp      SHORT G_M2800_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M2800_IG04:
       mov      edx, eax
						;; bbWeight=0.50 PerfScore 0.12
G_M2800_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M2800_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 21, prolog size 3, PerfScore 7.98, (MethodHash=175cf50f) for method Silk.NET.Maths.Scalar:Max(short,short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Larger(short,short):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M50469_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M50469_IG02:
       movsx    eax, cx
       movsx    edx, dx
       cmp      eax, edx
       setg     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M50469_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=28253ada) for method JITTest.ScalarShort:Larger(short,short):bool
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Smaller(short,short):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M7522_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M7522_IG02:
       movsx    eax, cx
       movsx    edx, dx
       cmp      eax, edx
       setl     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M7522_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=d12ee29d) for method JITTest.ScalarShort:Smaller(short,short):bool
; ============================================================

; Assembly listing for method JITTest.ScalarShort:LargerEquals(short,short):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M2714_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M2714_IG02:
       movsx    eax, cx
       movsx    edx, dx
       cmp      eax, edx
       setge    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M2714_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=2629f565) for method JITTest.ScalarShort:LargerEquals(short,short):bool
; ============================================================

; Assembly listing for method JITTest.ScalarShort:SmallerEquals(short,short):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M48029_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M48029_IG02:
       movsx    eax, cx
       movsx    edx, dx
       cmp      eax, edx
       setle    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M48029_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=dbbb4462) for method JITTest.ScalarShort:SmallerEquals(short,short):bool
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Clamp(short,short,short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 arg2         [V02,T03] (  1,  1   )   short  ->  [ebp+0x08]  
;  V03 tmp0         [V03,T02] (  2,  4   )     int  ->  ecx         "argument with side effect"
;
; Lcl frame size = 0

G_M23835_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
						;; bbWeight=1    PerfScore 2.25
G_M23835_IG02:
       movsx    ecx, cx
       movsx    edx, dx
       call     Silk.NET.Maths.Scalar:Max(short,short):short
       mov      ecx, eax
       mov      esi, dword ptr [ebp+08H]
       movsx    edx, si
       call     Silk.NET.Maths.Scalar:Min(short,short):short
       movsx    eax, ax
						;; bbWeight=1    PerfScore 4.25
G_M23835_IG03:
       pop      esi
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 3.00

; Total bytes of code 36, prolog size 4, PerfScore 13.10, (MethodHash=0856a2e4) for method JITTest.ScalarShort:Clamp(short,short,short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Negate(short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;
; Lcl frame size = 0

G_M59732_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M59732_IG02:
       movsx    ecx, cx
       call     Silk.NET.Maths.Scalar:Negate(short):short
						;; bbWeight=1    PerfScore 1.25
G_M59732_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.30, (MethodHash=8d9016ab) for method JITTest.ScalarShort:Negate(short):short
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Negate(short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;* V01 loc0         [V01    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op
;
; Lcl frame size = 0

G_M38726_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M38726_IG02:
       movsx    eax, cx
       neg      eax
       movsx    eax, ax
						;; bbWeight=1    PerfScore 0.75
G_M38726_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 4.80, (MethodHash=517c68b9) for method Silk.NET.Maths.Scalar:Negate(short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Equal(short,short):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )   short  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M18150_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M18150_IG02:
       movsx    eax, cx
       movsx    edx, dx
       cmp      eax, edx
       sete     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 2.00
G_M18150_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 19, prolog size 3, PerfScore 6.65, (MethodHash=c01fb919) for method JITTest.ScalarShort:Equal(short,short):bool
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Acos(short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   short  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M33654_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M33654_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=2f3b7c89) for method JITTest.ScalarShort:Acos(short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Abs(short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )   short  ->  ecx        
;  V01 tmp0         [V01,T01] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   float  ->  zero-ref    "Inlining Arg"
;
; Lcl frame size = 0

G_M62872_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M62872_IG02:
       movsx    eax, cx
       vxorps   xmm0, xmm0
       vcvtsi2ss  xmm0, eax
       vmovss   xmm1, dword ptr [@RWD00]
       vandps   xmm0, xmm1
       vcvttss2si  eax, xmm0
       movsx    eax, ax
						;; bbWeight=1    PerfScore 13.17
G_M62872_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50
RWD00  dd	7FFFFFFFh


; Total bytes of code 38, prolog size 6, PerfScore 21.22, (MethodHash=ed150a67) for method JITTest.ScalarShort:Abs(short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Sin(short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   short  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M53628_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M53628_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=84a92e83) for method JITTest.ScalarShort:Sin(short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Sinh(short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   short  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M57748_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M57748_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=1bbc1e6b) for method JITTest.ScalarShort:Sinh(short):short
; ============================================================

; Assembly listing for method JITTest.ScalarShort:Asin(short):short
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )   short  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   short  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M10397_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M10397_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=246bd762) for method JITTest.ScalarShort:Asin(short):short
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:EntryPoint()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V01 tmp1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V02 tmp2         [V02    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V03 tmp3         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V04 tmp4         [V04    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V05 tmp5         [V05    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V06 tmp6         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V07 tmp7         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V08 tmp8         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V09 tmp9         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V10 tmp10        [V10    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V11 tmp11        [V11    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V12 tmp12        [V12    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V13 tmp13        [V13    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V14 tmp14        [V14    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V15 tmp15        [V15    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V16 tmp16        [V16    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V17 tmp17        [V17    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V18 tmp18        [V18    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V19 tmp19        [V19    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V20 tmp20        [V20    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V21 tmp21        [V21    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V22 tmp22        [V22    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V23 tmp23        [V23    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V24 tmp24        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V25 tmp25        [V25    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V26 tmp26        [V26    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V27 tmp27        [V27    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V28 tmp28        [V28    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V29 tmp29        [V29    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V30 tmp30        [V30    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V31 tmp31        [V31    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V32 tmp32        [V32    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;  V33 EHSlots      [V33    ] (  1,  1   )     blk (16) [ebp-0x14]   do-not-enreg[X] must-init addr-exposed "lvaShadowSPslotsVar"
;
; Lcl frame size = 20

G_M56447_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 20
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-14H], eax
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], eax
       mov      dword ptr [ebp-08H], eax
						;; bbWeight=1    PerfScore 6.75
G_M56447_IG02:
       xor      ecx, ecx
       call     JITTest.ScalarUInt32:Atan(int):int
       jmp      SHORT G_M56447_IG04
						;; bbWeight=1    PerfScore 3.25
G_M56447_IG03:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG04:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Atan2(int,int):int
       jmp      SHORT G_M56447_IG06
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG05:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG06:
       xor      ecx, ecx
       call     JITTest.ScalarUInt32:Cos(int):int
       jmp      SHORT G_M56447_IG08
						;; bbWeight=1    PerfScore 3.25
G_M56447_IG07:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG08:
       xor      ecx, ecx
       call     JITTest.ScalarUInt32:Cosh(int):int
       jmp      SHORT G_M56447_IG10
						;; bbWeight=1    PerfScore 3.25
G_M56447_IG09:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG10:
       call     JITTest.ScalarUInt32:One():int
       jmp      SHORT G_M56447_IG12
						;; bbWeight=1    PerfScore 3.00
G_M56447_IG11:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG12:
       call     JITTest.ScalarUInt32:Two():int
       jmp      SHORT G_M56447_IG14
						;; bbWeight=1    PerfScore 3.00
G_M56447_IG13:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG14:
       xor      ecx, ecx
       call     JITTest.ScalarUInt32:IsNormal(int):bool
       jmp      SHORT G_M56447_IG16
						;; bbWeight=1    PerfScore 3.25
G_M56447_IG15:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG16:
       call     JITTest.ScalarUInt32:Pi():int
       jmp      SHORT G_M56447_IG18
						;; bbWeight=1    PerfScore 3.00
G_M56447_IG17:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG18:
       call     JITTest.ScalarUInt32:Tau():int
       jmp      SHORT G_M56447_IG20
						;; bbWeight=1    PerfScore 3.00
G_M56447_IG19:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG20:
       call     JITTest.ScalarUInt32:HalfPi():int
       jmp      SHORT G_M56447_IG22
						;; bbWeight=1    PerfScore 3.00
G_M56447_IG21:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG22:
       call     JITTest.ScalarUInt32:PositiveInfinity():int
       jmp      SHORT G_M56447_IG24
						;; bbWeight=1    PerfScore 3.00
G_M56447_IG23:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG24:
       call     JITTest.ScalarUInt32:NegativeInfinity():int
       jmp      SHORT G_M56447_IG26
						;; bbWeight=1    PerfScore 3.00
G_M56447_IG25:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG26:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarUInt32:As(double):int
       jmp      SHORT G_M56447_IG28
						;; bbWeight=1    PerfScore 4.08
G_M56447_IG27:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG28:
       xor      ecx, ecx
       call     JITTest.ScalarUInt32:SquareRoot(int):int
       jmp      SHORT G_M56447_IG30
						;; bbWeight=1    PerfScore 3.25
G_M56447_IG29:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG30:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Add(int,int):int
       jmp      SHORT G_M56447_IG32
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG31:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG32:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Mod(int,int):int
       jmp      SHORT G_M56447_IG34
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG33:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG34:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Subtract(int,int):int
       jmp      SHORT G_M56447_IG36
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG35:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG36:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Multiply(int,int):int
       jmp      SHORT G_M56447_IG38
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG37:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG38:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Divide(int,int):int
       jmp      SHORT G_M56447_IG40
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG39:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG40:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Min(int,int):int
       jmp      SHORT G_M56447_IG42
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG41:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG42:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Max(int,int):int
       jmp      SHORT G_M56447_IG44
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG43:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG44:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Larger(int,int):bool
       jmp      SHORT G_M56447_IG46
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG45:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG46:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Smaller(int,int):bool
       jmp      SHORT G_M56447_IG48
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG47:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG48:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:LargerEquals(int,int):bool
       jmp      SHORT G_M56447_IG50
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG49:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG50:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:SmallerEquals(int,int):bool
       jmp      SHORT G_M56447_IG52
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG51:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG52:
       push     0
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Clamp(int,int,int):int
       jmp      SHORT G_M56447_IG54
						;; bbWeight=1    PerfScore 4.50
G_M56447_IG53:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG54:
       xor      ecx, ecx
       call     JITTest.ScalarUInt32:Negate(int):int
       jmp      SHORT G_M56447_IG56
						;; bbWeight=1    PerfScore 3.25
G_M56447_IG55:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG56:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarUInt32:Equal(int,int):bool
       jmp      SHORT G_M56447_IG58
						;; bbWeight=1    PerfScore 3.50
G_M56447_IG57:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG58:
       xor      ecx, ecx
       call     JITTest.ScalarUInt32:Acos(int):int
       jmp      SHORT G_M56447_IG60
						;; bbWeight=1    PerfScore 3.25
G_M56447_IG59:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG60:
       xor      ecx, ecx
       call     JITTest.ScalarUInt32:Abs(int):int
       jmp      SHORT G_M56447_IG62
						;; bbWeight=1    PerfScore 3.25
G_M56447_IG61:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG62:
       xor      ecx, ecx
       call     JITTest.ScalarUInt32:Sin(int):int
       jmp      SHORT G_M56447_IG64
						;; bbWeight=1    PerfScore 3.25
G_M56447_IG63:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG64:
       xor      ecx, ecx
       call     JITTest.ScalarUInt32:Sinh(int):int
       jmp      SHORT G_M56447_IG66
						;; bbWeight=1    PerfScore 3.25
G_M56447_IG65:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG66:
       xor      ecx, ecx
       call     JITTest.ScalarUInt32:Asin(int):int
       jmp      SHORT G_M56447_IG68
						;; bbWeight=1    PerfScore 3.25
G_M56447_IG67:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M56447_IG68:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75

; Total bytes of code 515, prolog size 23, PerfScore 171.03, (MethodHash=bff62380) for method JITTest.ScalarUInt32:EntryPoint()
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Atan(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M54983_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M54983_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=e48a2938) for method JITTest.ScalarUInt32:Atan(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Atan2(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 arg1         [V01    ] (  0,  0   )     int  ->  zero-ref   
;* V02 tmp0         [V02    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M49066_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M49066_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=bf4f4055) for method JITTest.ScalarUInt32:Atan2(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Cos(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M4290_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M4290_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=7cccef3d) for method JITTest.ScalarUInt32:Cos(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Cosh(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M49706_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M49706_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=25933dd5) for method JITTest.ScalarUInt32:Cosh(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:One():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M4842_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M4842_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M4842_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=dad1ed15) for method JITTest.ScalarUInt32:One():int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Two():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M7874_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M7874_IG02:
       mov      eax, 2
						;; bbWeight=1    PerfScore 0.25
G_M7874_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=f46be13d) for method JITTest.ScalarUInt32:Two():int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:IsNormal(int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01,T00] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M1545_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M1545_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M1545_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=1d12f9f6) for method JITTest.ScalarUInt32:IsNormal(int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Pi():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M47479_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M47479_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=1d3c4688) for method JITTest.ScalarUInt32:Pi():int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Tau():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M29326_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M29326_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=d1108d71) for method JITTest.ScalarUInt32:Tau():int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:HalfPi():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M15444_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M15444_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=9b5ec3ab) for method JITTest.ScalarUInt32:HalfPi():int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:PositiveInfinity():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M12999_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M12999_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=2f85cd38) for method JITTest.ScalarUInt32:PositiveInfinity():int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:NegativeInfinity():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M57999_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M57999_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=e6801d70) for method JITTest.ScalarUInt32:NegativeInfinity():int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:As(double):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M32265_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M32265_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     CORINFO_HELP_DBL2UINT
						;; bbWeight=1    PerfScore 3.75
G_M32265_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 28, prolog size 6, PerfScore 11.50, (MethodHash=fa2f81f6) for method JITTest.ScalarUInt32:As(double):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:SquareRoot(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 tmp0         [V01,T01] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M31482_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M31482_IG02:
       push     0
       push     ecx
       call     CORINFO_HELP_LNG2DBL
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vcvtsd2ss xmm0, xmm0
       vsqrtss  xmm0, xmm0
       vcvtss2sd xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     CORINFO_HELP_DBL2UINT
						;; bbWeight=1    PerfScore 26.25
G_M31482_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75

; Total bytes of code 54, prolog size 9, PerfScore 36.40, (MethodHash=b9888505) for method JITTest.ScalarUInt32:SquareRoot(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Add(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M26115_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M26115_IG02:
       lea      eax, [ecx+edx]
						;; bbWeight=1    PerfScore 0.50
G_M26115_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 8, prolog size 3, PerfScore 4.05, (MethodHash=9ab799fc) for method JITTest.ScalarUInt32:Add(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Mod(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  esi        
;  V02 tmp0         [V02,T02] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M16644_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       mov      esi, edx
						;; bbWeight=1    PerfScore 2.50
G_M16644_IG02:
       mov      eax, ecx
       xor      edx, edx
       div      edx:eax, esi
       mov      eax, edx
						;; bbWeight=1    PerfScore 26.75
G_M16644_IG03:
       pop      esi
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 17, prolog size 4, PerfScore 32.95, (MethodHash=ccdcbefb) for method JITTest.ScalarUInt32:Mod(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Subtract(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M61174_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M61174_IG02:
       mov      eax, ecx
       sub      eax, edx
						;; bbWeight=1    PerfScore 0.50
G_M61174_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 9, prolog size 3, PerfScore 4.15, (MethodHash=2d751109) for method JITTest.ScalarUInt32:Subtract(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Multiply(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M21166_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M21166_IG02:
       mov      eax, ecx
       imul     eax, edx
						;; bbWeight=1    PerfScore 2.25
G_M21166_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 6.00, (MethodHash=9c2ead51) for method JITTest.ScalarUInt32:Multiply(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Divide(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  esi        
;  V02 tmp0         [V02,T02] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M53713_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       mov      esi, edx
						;; bbWeight=1    PerfScore 2.50
G_M53713_IG02:
       mov      eax, ecx
       xor      edx, edx
       div      edx:eax, esi
						;; bbWeight=1    PerfScore 26.50
G_M53713_IG03:
       pop      esi
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 15, prolog size 4, PerfScore 32.50, (MethodHash=eb722e2e) for method JITTest.ScalarUInt32:Divide(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Min(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;
; Lcl frame size = 0

G_M14664_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M14664_IG02:
       call     Silk.NET.Maths.Scalar:Min(int,int):int
						;; bbWeight=1    PerfScore 1.00
G_M14664_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.75, (MethodHash=236fc6b7) for method JITTest.ScalarUInt32:Min(int,int):int
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Min(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  3.50)     int  ->  ecx        
;  V01 arg1         [V01,T01] (  4,  3.50)     int  ->  edx        
;  V02 tmp0         [V02,T02] (  3,  2   )     int  ->  edx         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M22191_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M22191_IG02:
       cmp      ecx, edx
       jbe      SHORT G_M22191_IG04
						;; bbWeight=1    PerfScore 1.25
G_M22191_IG03:
       jmp      SHORT G_M22191_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M22191_IG04:
       mov      edx, ecx
						;; bbWeight=0.50 PerfScore 0.12
G_M22191_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M22191_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 15, prolog size 3, PerfScore 6.88, (MethodHash=1a40a950) for method Silk.NET.Maths.Scalar:Min(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Max(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;
; Lcl frame size = 0

G_M14102_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M14102_IG02:
       call     Silk.NET.Maths.Scalar:Max(int,int):int
						;; bbWeight=1    PerfScore 1.00
G_M14102_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.75, (MethodHash=7fd8c8e9) for method JITTest.ScalarUInt32:Max(int,int):int
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Max(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  3.50)     int  ->  ecx        
;  V01 arg1         [V01,T01] (  4,  3.50)     int  ->  edx        
;  V02 tmp0         [V02,T02] (  3,  2   )     int  ->  edx         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M5361_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M5361_IG02:
       cmp      ecx, edx
       jae      SHORT G_M5361_IG04
						;; bbWeight=1    PerfScore 1.25
G_M5361_IG03:
       jmp      SHORT G_M5361_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M5361_IG04:
       mov      edx, ecx
						;; bbWeight=0.50 PerfScore 0.12
G_M5361_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M5361_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 15, prolog size 3, PerfScore 6.88, (MethodHash=223aeb0e) for method Silk.NET.Maths.Scalar:Max(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Larger(int,int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M25232_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M25232_IG02:
       cmp      ecx, edx
       seta     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.50
G_M25232_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.55, (MethodHash=36789d6f) for method JITTest.ScalarUInt32:Larger(int,int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Smaller(int,int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M26359_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M26359_IG02:
       cmp      ecx, edx
       setb     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.50
G_M26359_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.55, (MethodHash=99fb9908) for method JITTest.ScalarUInt32:Smaller(int,int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:LargerEquals(int,int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M18927_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M18927_IG02:
       cmp      ecx, edx
       setae    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.50
G_M18927_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.55, (MethodHash=2d91b610) for method JITTest.ScalarUInt32:LargerEquals(int,int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:SmallerEquals(int,int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M43720_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M43720_IG02:
       cmp      ecx, edx
       setbe    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.50
G_M43720_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.55, (MethodHash=f0505537) for method JITTest.ScalarUInt32:SmallerEquals(int,int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Clamp(int,int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 arg2         [V02,T03] (  1,  1   )     int  ->  [ebp+0x08]  
;  V03 tmp0         [V03,T02] (  2,  4   )     int  ->  ecx         "argument with side effect"
;
; Lcl frame size = 0

G_M59214_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M59214_IG02:
       call     Silk.NET.Maths.Scalar:Max(int,int):int
       mov      ecx, eax
       mov      edx, dword ptr [ebp+08H]
       call     Silk.NET.Maths.Scalar:Min(int,int):int
						;; bbWeight=1    PerfScore 3.25
G_M59214_IG03:
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 22, prolog size 3, PerfScore 9.20, (MethodHash=af4b18b1) for method JITTest.ScalarUInt32:Clamp(int,int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Negate(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;
; Lcl frame size = 0

G_M16865_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M16865_IG02:
       call     Silk.NET.Maths.Scalar:Negate(int):int
						;; bbWeight=1    PerfScore 1.00
G_M16865_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.75, (MethodHash=9890be1e) for method JITTest.ScalarUInt32:Negate(int):int
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Negate(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 loc0         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op
;
; Lcl frame size = 0

G_M7398_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M7398_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=4620e319) for method Silk.NET.Maths.Scalar:Negate(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Equal(int,int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M5747_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M5747_IG02:
       cmp      ecx, edx
       sete     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.50
G_M5747_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.55, (MethodHash=58cae98c) for method JITTest.ScalarUInt32:Equal(int,int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Acos(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M3395_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M3395_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=8dcbf2bc) for method JITTest.ScalarUInt32:Acos(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Abs(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M55053_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M55053_IG02:
       mov      eax, ecx
						;; bbWeight=1    PerfScore 0.25
G_M55053_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 7, prolog size 3, PerfScore 3.70, (MethodHash=a8fe28f2) for method JITTest.ScalarUInt32:Abs(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Sin(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M52649_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M52649_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=394d3256) for method JITTest.ScalarUInt32:Sin(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Sinh(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M61089_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M61089_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=a66a115e) for method JITTest.ScalarUInt32:Sinh(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt32:Asin(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M11368_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M11368_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=57f4d397) for method JITTest.ScalarUInt32:Asin(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:EntryPoint()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V01 tmp1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V02 tmp2         [V02    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V03 tmp3         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V04 tmp4         [V04    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V05 tmp5         [V05    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V06 tmp6         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V07 tmp7         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V08 tmp8         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V09 tmp9         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V10 tmp10        [V10    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V11 tmp11        [V11    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V12 tmp12        [V12    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V13 tmp13        [V13    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V14 tmp14        [V14    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V15 tmp15        [V15    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V16 tmp16        [V16    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V17 tmp17        [V17    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V18 tmp18        [V18    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V19 tmp19        [V19    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V20 tmp20        [V20    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V21 tmp21        [V21    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V22 tmp22        [V22    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V23 tmp23        [V23    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V24 tmp24        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V25 tmp25        [V25    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V26 tmp26        [V26    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V27 tmp27        [V27    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V28 tmp28        [V28    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V29 tmp29        [V29    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V30 tmp30        [V30    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V31 tmp31        [V31    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V32 tmp32        [V32    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;  V33 EHSlots      [V33    ] (  1,  1   )     blk (16) [ebp-0x14]   do-not-enreg[X] must-init addr-exposed "lvaShadowSPslotsVar"
;
; Lcl frame size = 20

G_M042_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 20
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-14H], eax
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], eax
       mov      dword ptr [ebp-08H], eax
						;; bbWeight=1    PerfScore 6.75
G_M042_IG02:
       xor      ecx, ecx
       call     JITTest.ScalarInt32:Atan(int):int
       jmp      SHORT G_M042_IG04
						;; bbWeight=1    PerfScore 3.25
G_M042_IG03:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG04:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Atan2(int,int):int
       jmp      SHORT G_M042_IG06
						;; bbWeight=1    PerfScore 3.50
G_M042_IG05:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG06:
       xor      ecx, ecx
       call     JITTest.ScalarInt32:Cos(int):int
       jmp      SHORT G_M042_IG08
						;; bbWeight=1    PerfScore 3.25
G_M042_IG07:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG08:
       xor      ecx, ecx
       call     JITTest.ScalarInt32:Cosh(int):int
       jmp      SHORT G_M042_IG10
						;; bbWeight=1    PerfScore 3.25
G_M042_IG09:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG10:
       call     JITTest.ScalarInt32:One():int
       jmp      SHORT G_M042_IG12
						;; bbWeight=1    PerfScore 3.00
G_M042_IG11:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG12:
       call     JITTest.ScalarInt32:Two():int
       jmp      SHORT G_M042_IG14
						;; bbWeight=1    PerfScore 3.00
G_M042_IG13:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG14:
       xor      ecx, ecx
       call     JITTest.ScalarInt32:IsNormal(int):bool
       jmp      SHORT G_M042_IG16
						;; bbWeight=1    PerfScore 3.25
G_M042_IG15:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG16:
       call     JITTest.ScalarInt32:Pi():int
       jmp      SHORT G_M042_IG18
						;; bbWeight=1    PerfScore 3.00
G_M042_IG17:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG18:
       call     JITTest.ScalarInt32:Tau():int
       jmp      SHORT G_M042_IG20
						;; bbWeight=1    PerfScore 3.00
G_M042_IG19:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG20:
       call     JITTest.ScalarInt32:HalfPi():int
       jmp      SHORT G_M042_IG22
						;; bbWeight=1    PerfScore 3.00
G_M042_IG21:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG22:
       call     JITTest.ScalarInt32:PositiveInfinity():int
       jmp      SHORT G_M042_IG24
						;; bbWeight=1    PerfScore 3.00
G_M042_IG23:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG24:
       call     JITTest.ScalarInt32:NegativeInfinity():int
       jmp      SHORT G_M042_IG26
						;; bbWeight=1    PerfScore 3.00
G_M042_IG25:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG26:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarInt32:As(double):int
       jmp      SHORT G_M042_IG28
						;; bbWeight=1    PerfScore 4.08
G_M042_IG27:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG28:
       xor      ecx, ecx
       call     JITTest.ScalarInt32:SquareRoot(int):int
       jmp      SHORT G_M042_IG30
						;; bbWeight=1    PerfScore 3.25
G_M042_IG29:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG30:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Add(int,int):int
       jmp      SHORT G_M042_IG32
						;; bbWeight=1    PerfScore 3.50
G_M042_IG31:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG32:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Mod(int,int):int
       jmp      SHORT G_M042_IG34
						;; bbWeight=1    PerfScore 3.50
G_M042_IG33:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG34:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Subtract(int,int):int
       jmp      SHORT G_M042_IG36
						;; bbWeight=1    PerfScore 3.50
G_M042_IG35:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG36:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Multiply(int,int):int
       jmp      SHORT G_M042_IG38
						;; bbWeight=1    PerfScore 3.50
G_M042_IG37:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG38:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Divide(int,int):int
       jmp      SHORT G_M042_IG40
						;; bbWeight=1    PerfScore 3.50
G_M042_IG39:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG40:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Min(int,int):int
       jmp      SHORT G_M042_IG42
						;; bbWeight=1    PerfScore 3.50
G_M042_IG41:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG42:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Max(int,int):int
       jmp      SHORT G_M042_IG44
						;; bbWeight=1    PerfScore 3.50
G_M042_IG43:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG44:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Larger(int,int):bool
       jmp      SHORT G_M042_IG46
						;; bbWeight=1    PerfScore 3.50
G_M042_IG45:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG46:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Smaller(int,int):bool
       jmp      SHORT G_M042_IG48
						;; bbWeight=1    PerfScore 3.50
G_M042_IG47:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG48:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:LargerEquals(int,int):bool
       jmp      SHORT G_M042_IG50
						;; bbWeight=1    PerfScore 3.50
G_M042_IG49:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG50:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:SmallerEquals(int,int):bool
       jmp      SHORT G_M042_IG52
						;; bbWeight=1    PerfScore 3.50
G_M042_IG51:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG52:
       push     0
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Clamp(int,int,int):int
       jmp      SHORT G_M042_IG54
						;; bbWeight=1    PerfScore 4.50
G_M042_IG53:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG54:
       xor      ecx, ecx
       call     JITTest.ScalarInt32:Negate(int):int
       jmp      SHORT G_M042_IG56
						;; bbWeight=1    PerfScore 3.25
G_M042_IG55:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG56:
       xor      ecx, ecx
       xor      edx, edx
       call     JITTest.ScalarInt32:Equal(int,int):bool
       jmp      SHORT G_M042_IG58
						;; bbWeight=1    PerfScore 3.50
G_M042_IG57:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG58:
       xor      ecx, ecx
       call     JITTest.ScalarInt32:Acos(int):int
       jmp      SHORT G_M042_IG60
						;; bbWeight=1    PerfScore 3.25
G_M042_IG59:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG60:
       xor      ecx, ecx
       call     JITTest.ScalarInt32:Abs(int):int
       jmp      SHORT G_M042_IG62
						;; bbWeight=1    PerfScore 3.25
G_M042_IG61:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG62:
       xor      ecx, ecx
       call     JITTest.ScalarInt32:Sin(int):int
       jmp      SHORT G_M042_IG64
						;; bbWeight=1    PerfScore 3.25
G_M042_IG63:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG64:
       xor      ecx, ecx
       call     JITTest.ScalarInt32:Sinh(int):int
       jmp      SHORT G_M042_IG66
						;; bbWeight=1    PerfScore 3.25
G_M042_IG65:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG66:
       xor      ecx, ecx
       call     JITTest.ScalarInt32:Asin(int):int
       jmp      SHORT G_M042_IG68
						;; bbWeight=1    PerfScore 3.25
G_M042_IG67:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M042_IG68:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75

; Total bytes of code 515, prolog size 23, PerfScore 171.03, (MethodHash=5de9ffd5) for method JITTest.ScalarInt32:EntryPoint()
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Atan(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M40306_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M40306_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=abbe628d) for method JITTest.ScalarInt32:Atan(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Atan2(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 arg1         [V01    ] (  0,  0   )     int  ->  zero-ref   
;* V02 tmp0         [V02    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M22719_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M22719_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=0454a740) for method JITTest.ScalarInt32:Atan2(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Cos(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M6423_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M6423_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=2a24e6e8) for method JITTest.ScalarInt32:Cos(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Cosh(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M47135_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M47135_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=93b347e0) for method JITTest.ScalarInt32:Cosh(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:One():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M52063_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M52063_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M52063_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=6a7934a0) for method JITTest.ScalarInt32:One():int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Two():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M44407_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M44407_IG02:
       mov      eax, 2
						;; bbWeight=1    PerfScore 0.25
G_M44407_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=d3da5288) for method JITTest.ScalarInt32:Two():int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:IsNormal(int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01,T00] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M16604_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M16604_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M16604_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=e119bf23) for method JITTest.ScalarInt32:IsNormal(int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Pi():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M26850_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M26850_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=b5e0971d) for method JITTest.ScalarInt32:Pi():int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Tau():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M64315_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M64315_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=070704c4) for method JITTest.ScalarInt32:Tau():int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:HalfPi():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M52097_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M52097_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=4551347e) for method JITTest.ScalarInt32:HalfPi():int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:PositiveInfinity():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M52242_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M52242_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=65a533ed) for method JITTest.ScalarInt32:PositiveInfinity():int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:NegativeInfinity():int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M24794_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M24794_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=4c109f25) for method JITTest.ScalarInt32:NegativeInfinity():int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:As(double):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M60636_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M60636_IG02:
       vcvttsd2si eax, dword ptr [ebp+08H]
						;; bbWeight=1    PerfScore 7.00
G_M60636_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 15, prolog size 6, PerfScore 13.35, (MethodHash=23d61323) for method JITTest.ScalarInt32:As(double):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:SquareRoot(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 tmp0         [V01,T01] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M12367_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M12367_IG02:
       vxorps   xmm0, xmm0
       vcvtsi2ss  xmm0, ecx
       vsqrtss  xmm0, xmm0
       vcvttss2si  eax, xmm0
						;; bbWeight=1    PerfScore 21.33
G_M12367_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 24, prolog size 6, PerfScore 27.88, (MethodHash=c1d2cfb0) for method JITTest.ScalarInt32:SquareRoot(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Add(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M7126_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M7126_IG02:
       lea      eax, [ecx+edx]
						;; bbWeight=1    PerfScore 0.50
G_M7126_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 8, prolog size 3, PerfScore 4.05, (MethodHash=6f83e429) for method JITTest.ScalarInt32:Add(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Mod(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  esi        
;  V02 tmp0         [V02,T02] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M61649_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       mov      esi, edx
						;; bbWeight=1    PerfScore 2.50
G_M61649_IG02:
       mov      eax, ecx
       cdq      
       idiv     edx:eax, esi
       mov      eax, edx
						;; bbWeight=1    PerfScore 27.50
G_M61649_IG03:
       pop      esi
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 16, prolog size 4, PerfScore 33.60, (MethodHash=d53e0f2e) for method JITTest.ScalarInt32:Mod(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Subtract(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M49219_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M49219_IG02:
       mov      eax, ecx
       sub      eax, edx
						;; bbWeight=1    PerfScore 0.50
G_M49219_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 9, prolog size 3, PerfScore 4.15, (MethodHash=a4283fbc) for method JITTest.ScalarInt32:Subtract(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Multiply(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M43675_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M43675_IG02:
       mov      eax, ecx
       imul     eax, edx
						;; bbWeight=1    PerfScore 2.25
G_M43675_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 6.00, (MethodHash=5fb35564) for method JITTest.ScalarInt32:Multiply(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Divide(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  esi        
;  V02 tmp0         [V02,T02] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M45924_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       mov      esi, edx
						;; bbWeight=1    PerfScore 2.50
G_M45924_IG02:
       mov      eax, ecx
       cdq      
       idiv     edx:eax, esi
						;; bbWeight=1    PerfScore 27.25
G_M45924_IG03:
       pop      esi
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 14, prolog size 4, PerfScore 33.15, (MethodHash=479c4c9b) for method JITTest.ScalarInt32:Divide(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Min(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;
; Lcl frame size = 0

G_M18973_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M18973_IG02:
       call     Silk.NET.Maths.Scalar:Min(int,int):int
						;; bbWeight=1    PerfScore 1.00
G_M18973_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.75, (MethodHash=0d39b5e2) for method JITTest.ScalarInt32:Min(int,int):int
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Min(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  3.50)     int  ->  ecx        
;  V01 arg1         [V01,T01] (  4,  3.50)     int  ->  edx        
;  V02 tmp0         [V02,T02] (  3,  2   )     int  ->  edx         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M22191_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M22191_IG02:
       cmp      ecx, edx
       jle      SHORT G_M22191_IG04
						;; bbWeight=1    PerfScore 1.25
G_M22191_IG03:
       jmp      SHORT G_M22191_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M22191_IG04:
       mov      edx, ecx
						;; bbWeight=0.50 PerfScore 0.12
G_M22191_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M22191_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 15, prolog size 3, PerfScore 6.88, (MethodHash=1a40a950) for method Silk.NET.Maths.Scalar:Min(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Max(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;
; Lcl frame size = 0

G_M35779_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M35779_IG02:
       call     Silk.NET.Maths.Scalar:Max(int,int):int
						;; bbWeight=1    PerfScore 1.00
G_M35779_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.75, (MethodHash=428a743c) for method JITTest.ScalarInt32:Max(int,int):int
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Max(int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  3.50)     int  ->  ecx        
;  V01 arg1         [V01,T01] (  4,  3.50)     int  ->  edx        
;  V02 tmp0         [V02,T02] (  3,  2   )     int  ->  edx         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M5361_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M5361_IG02:
       cmp      ecx, edx
       jge      SHORT G_M5361_IG04
						;; bbWeight=1    PerfScore 1.25
G_M5361_IG03:
       jmp      SHORT G_M5361_IG05
						;; bbWeight=0.50 PerfScore 1.00
G_M5361_IG04:
       mov      edx, ecx
						;; bbWeight=0.50 PerfScore 0.12
G_M5361_IG05:
       mov      eax, edx
						;; bbWeight=1    PerfScore 0.25
G_M5361_IG06:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 15, prolog size 3, PerfScore 6.88, (MethodHash=223aeb0e) for method Silk.NET.Maths.Scalar:Max(int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Larger(int,int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M4293_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M4293_IG02:
       cmp      ecx, edx
       setg     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.50
G_M4293_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.55, (MethodHash=fdd0ef3a) for method JITTest.ScalarInt32:Larger(int,int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Smaller(int,int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M13122_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M13122_IG02:
       cmp      ecx, edx
       setl     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.50
G_M13122_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.55, (MethodHash=6dd6ccbd) for method JITTest.ScalarInt32:Smaller(int,int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:LargerEquals(int,int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M25850_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M25850_IG02:
       cmp      ecx, edx
       setge    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.50
G_M25850_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.55, (MethodHash=b37a9b05) for method JITTest.ScalarInt32:LargerEquals(int,int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:SmallerEquals(int,int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M49853_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M49853_IG02:
       cmp      ecx, edx
       setle    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.50
G_M49853_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.55, (MethodHash=6d853d42) for method JITTest.ScalarInt32:SmallerEquals(int,int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Clamp(int,int,int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 arg2         [V02,T03] (  1,  1   )     int  ->  [ebp+0x08]  
;  V03 tmp0         [V03,T02] (  2,  4   )     int  ->  ecx         "argument with side effect"
;
; Lcl frame size = 0

G_M27291_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M27291_IG02:
       call     Silk.NET.Maths.Scalar:Max(int,int):int
       mov      ecx, eax
       mov      edx, dword ptr [ebp+08H]
       call     Silk.NET.Maths.Scalar:Min(int,int):int
						;; bbWeight=1    PerfScore 3.25
G_M27291_IG03:
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 22, prolog size 3, PerfScore 9.20, (MethodHash=1ffd9564) for method JITTest.ScalarInt32:Clamp(int,int,int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Negate(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;
; Lcl frame size = 0

G_M44628_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M44628_IG02:
       call     Silk.NET.Maths.Scalar:Negate(int):int
						;; bbWeight=1    PerfScore 1.00
G_M44628_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.75, (MethodHash=605651ab) for method JITTest.ScalarInt32:Negate(int):int
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Negate(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;* V01 loc0         [V01    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op
;
; Lcl frame size = 0

G_M7398_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M7398_IG02:
       mov      eax, ecx
       neg      eax
						;; bbWeight=1    PerfScore 0.50
G_M7398_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 9, prolog size 3, PerfScore 4.15, (MethodHash=4620e319) for method Silk.NET.Maths.Scalar:Negate(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Equal(int,int):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  edx        
;  V02 tmp0         [V02,T02] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M48582_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M48582_IG02:
       cmp      ecx, edx
       sete     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 1.50
G_M48582_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 13, prolog size 3, PerfScore 5.55, (MethodHash=4d124239) for method JITTest.ScalarInt32:Equal(int,int):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Acos(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M2166_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M2166_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=9bb4f789) for method JITTest.ScalarInt32:Acos(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Abs(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  ecx        
;  V01 tmp0         [V01,T01] (  2,  2   )     int  ->  eax         "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )   float  ->  zero-ref    "Inlining Arg"
;
; Lcl frame size = 0

G_M57688_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M57688_IG02:
       vxorps   xmm0, xmm0
       vcvtsi2ss  xmm0, ecx
       vmovss   xmm1, dword ptr [@RWD00]
       vandps   xmm0, xmm1
       vcvttss2si  eax, xmm0
						;; bbWeight=1    PerfScore 12.67
G_M57688_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50
RWD00  dd	7FFFFFFFh


; Total bytes of code 32, prolog size 6, PerfScore 20.12, (MethodHash=7bcc1ea7) for method JITTest.ScalarInt32:Abs(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Sin(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M36156_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M36156_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=b9dd72c3) for method JITTest.ScalarInt32:Sin(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Sinh(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M1172_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M1172_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=489cfb6b) for method JITTest.ScalarInt32:Sinh(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarInt32:Asin(int):int
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     int  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )     int  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;
; Lcl frame size = 0

G_M7517_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M7517_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=acd2e2a2) for method JITTest.ScalarInt32:Asin(int):int
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:EntryPoint()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V01 tmp1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V02 tmp2         [V02    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V03 tmp3         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V04 tmp4         [V04    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V05 tmp5         [V05    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V06 tmp6         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V07 tmp7         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V08 tmp8         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V09 tmp9         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V10 tmp10        [V10    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V11 tmp11        [V11    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V12 tmp12        [V12    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V13 tmp13        [V13    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V14 tmp14        [V14    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V15 tmp15        [V15    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V16 tmp16        [V16    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V17 tmp17        [V17    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V18 tmp18        [V18    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V19 tmp19        [V19    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V20 tmp20        [V20    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V21 tmp21        [V21    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V22 tmp22        [V22    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V23 tmp23        [V23    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V24 tmp24        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V25 tmp25        [V25    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V26 tmp26        [V26    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V27 tmp27        [V27    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V28 tmp28        [V28    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V29 tmp29        [V29    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V30 tmp30        [V30    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V31 tmp31        [V31    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V32 tmp32        [V32    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;  V33 EHSlots      [V33    ] (  1,  1   )     blk (16) [ebp-0x14]   do-not-enreg[X] must-init addr-exposed "lvaShadowSPslotsVar"
;
; Lcl frame size = 20

G_M47036_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 20
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-14H], eax
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], eax
       mov      dword ptr [ebp-08H], eax
						;; bbWeight=1    PerfScore 6.75
G_M47036_IG02:
       push     0
       push     0
       call     JITTest.ScalarUInt64:Atan(long):long
       jmp      SHORT G_M47036_IG04
						;; bbWeight=1    PerfScore 5.00
G_M47036_IG03:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG04:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Atan2(long,long):long
       jmp      SHORT G_M47036_IG06
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG05:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG06:
       push     0
       push     0
       call     JITTest.ScalarUInt64:Cos(long):long
       jmp      SHORT G_M47036_IG08
						;; bbWeight=1    PerfScore 5.00
G_M47036_IG07:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG08:
       push     0
       push     0
       call     JITTest.ScalarUInt64:Cosh(long):long
       jmp      SHORT G_M47036_IG10
						;; bbWeight=1    PerfScore 5.00
G_M47036_IG09:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG10:
       call     JITTest.ScalarUInt64:One():long
       jmp      SHORT G_M47036_IG12
						;; bbWeight=1    PerfScore 3.00
G_M47036_IG11:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG12:
       call     JITTest.ScalarUInt64:Two():long
       jmp      SHORT G_M47036_IG14
						;; bbWeight=1    PerfScore 3.00
G_M47036_IG13:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG14:
       push     0
       push     0
       call     JITTest.ScalarUInt64:IsNormal(long):bool
       jmp      SHORT G_M47036_IG16
						;; bbWeight=1    PerfScore 5.00
G_M47036_IG15:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG16:
       call     JITTest.ScalarUInt64:Pi():long
       jmp      SHORT G_M47036_IG18
						;; bbWeight=1    PerfScore 3.00
G_M47036_IG17:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG18:
       call     JITTest.ScalarUInt64:Tau():long
       jmp      SHORT G_M47036_IG20
						;; bbWeight=1    PerfScore 3.00
G_M47036_IG19:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG20:
       call     JITTest.ScalarUInt64:HalfPi():long
       jmp      SHORT G_M47036_IG22
						;; bbWeight=1    PerfScore 3.00
G_M47036_IG21:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG22:
       call     JITTest.ScalarUInt64:PositiveInfinity():long
       jmp      SHORT G_M47036_IG24
						;; bbWeight=1    PerfScore 3.00
G_M47036_IG23:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG24:
       call     JITTest.ScalarUInt64:NegativeInfinity():long
       jmp      SHORT G_M47036_IG26
						;; bbWeight=1    PerfScore 3.00
G_M47036_IG25:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG26:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarUInt64:As(double):long
       jmp      SHORT G_M47036_IG28
						;; bbWeight=1    PerfScore 4.08
G_M47036_IG27:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG28:
       push     0
       push     0
       call     JITTest.ScalarUInt64:SquareRoot(long):long
       jmp      SHORT G_M47036_IG30
						;; bbWeight=1    PerfScore 5.00
G_M47036_IG29:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG30:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Add(long,long):long
       jmp      SHORT G_M47036_IG32
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG31:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG32:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Mod(long,long):long
       jmp      SHORT G_M47036_IG34
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG33:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG34:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Subtract(long,long):long
       jmp      SHORT G_M47036_IG36
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG35:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG36:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Multiply(long,long):long
       jmp      SHORT G_M47036_IG38
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG37:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG38:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Divide(long,long):long
       jmp      SHORT G_M47036_IG40
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG39:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG40:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Min(long,long):long
       jmp      SHORT G_M47036_IG42
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG41:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG42:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Max(long,long):long
       jmp      SHORT G_M47036_IG44
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG43:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG44:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Larger(long,long):bool
       jmp      SHORT G_M47036_IG46
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG45:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG46:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Smaller(long,long):bool
       jmp      SHORT G_M47036_IG48
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG47:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG48:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:LargerEquals(long,long):bool
       jmp      SHORT G_M47036_IG50
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG49:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG50:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:SmallerEquals(long,long):bool
       jmp      SHORT G_M47036_IG52
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG51:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG52:
       push     0
       push     0
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Clamp(long,long,long):long
       jmp      SHORT G_M47036_IG54
						;; bbWeight=1    PerfScore 9.00
G_M47036_IG53:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG54:
       push     0
       push     0
       call     JITTest.ScalarUInt64:Negate(long):long
       jmp      SHORT G_M47036_IG56
						;; bbWeight=1    PerfScore 5.00
G_M47036_IG55:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG56:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarUInt64:Equal(long,long):bool
       jmp      SHORT G_M47036_IG58
						;; bbWeight=1    PerfScore 7.00
G_M47036_IG57:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG58:
       push     0
       push     0
       call     JITTest.ScalarUInt64:Acos(long):long
       jmp      SHORT G_M47036_IG60
						;; bbWeight=1    PerfScore 5.00
G_M47036_IG59:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG60:
       push     0
       push     0
       call     JITTest.ScalarUInt64:Abs(long):long
       jmp      SHORT G_M47036_IG62
						;; bbWeight=1    PerfScore 5.00
G_M47036_IG61:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG62:
       push     0
       push     0
       call     JITTest.ScalarUInt64:Sin(long):long
       jmp      SHORT G_M47036_IG64
						;; bbWeight=1    PerfScore 5.00
G_M47036_IG63:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG64:
       push     0
       push     0
       call     JITTest.ScalarUInt64:Sinh(long):long
       jmp      SHORT G_M47036_IG66
						;; bbWeight=1    PerfScore 5.00
G_M47036_IG65:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG66:
       push     0
       push     0
       call     JITTest.ScalarUInt64:Asin(long):long
       jmp      SHORT G_M47036_IG68
						;; bbWeight=1    PerfScore 5.00
G_M47036_IG67:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M47036_IG68:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75

; Total bytes of code 595, prolog size 23, PerfScore 248.28, (MethodHash=12744843) for method JITTest.ScalarUInt64:EntryPoint()
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Atan(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M292_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M292_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=8c3ffedb) for method JITTest.ScalarUInt64:Atan(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Atan2(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 arg1         [V01    ] (  0,  0   )    long  ->  zero-ref   
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V04 rat0         [V04    ] (  0,  0   )     int  ->  zero-ref    V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;* V05 rat1         [V05    ] (  0,  0   )     int  ->  zero-ref    V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M48176_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M48176_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=62d043cf) for method JITTest.ScalarUInt64:Atan2(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Cos(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M26497_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M26497_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=5799987e) for method JITTest.ScalarUInt64:Cos(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Cosh(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M5961_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M5961_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=f4cae8b6) for method JITTest.ScalarUInt64:Cosh(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:One():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;* V04 rat2         [V04    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V05 rat3         [V05    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M55440_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M55440_IG02:
       mov      eax, 1
       xor      edx, edx
						;; bbWeight=1    PerfScore 0.50
G_M55440_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 12, prolog size 3, PerfScore 4.45, (MethodHash=93fe276f) for method JITTest.ScalarUInt64:One():long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Two():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;* V04 rat2         [V04    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V05 rat3         [V05    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M54136_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M54136_IG02:
       mov      eax, 2
       xor      edx, edx
						;; bbWeight=1    PerfScore 0.50
G_M54136_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 12, prolog size 3, PerfScore 4.45, (MethodHash=550d2c87) for method JITTest.ScalarUInt64:Two():long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:IsNormal(long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01,T00] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M30995_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M30995_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M30995_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 12, prolog size 3, PerfScore 5.20, (MethodHash=35b886ec) for method JITTest.ScalarUInt64:IsNormal(long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Pi():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M2317_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M2317_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=c830f6f2) for method JITTest.ScalarUInt64:Pi():long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Tau():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M11444_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M11444_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=2992d34b) for method JITTest.ScalarUInt64:Tau():long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:HalfPi():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M43726_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M43726_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=5ebc5531) for method JITTest.ScalarUInt64:HalfPi():long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:PositiveInfinity():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M65533_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M65533_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=4b810002) for method JITTest.ScalarUInt64:PositiveInfinity():long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:NegativeInfinity():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M4789_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M4789_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=7166ed4a) for method JITTest.ScalarUInt64:NegativeInfinity():long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:As(double):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T03] (  1,  1   )  double  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;  V05 rat2         [V05,T01] (  2,  2   )     int  ->  eax         V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;  V06 rat3         [V06,T02] (  2,  2   )     int  ->  edx         V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V07 rat4         [V07,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M17395_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M17395_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     CORINFO_HELP_DBL2ULNG
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.75
G_M17395_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 45, prolog size 9, PerfScore 17.70, (MethodHash=1079bc0c) for method JITTest.ScalarUInt64:As(double):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:SquareRoot(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V03 rat0         [V03    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V04 rat1         [V04    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;* V05 rat2         [V05    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V06 rat3         [V06    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;  V07 rat4         [V07,T01] (  2,  2   )     int  ->  eax         V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;  V08 rat5         [V08,T02] (  2,  2   )     int  ->  edx         V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V09 rat6         [V09,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;  TEMP_01                                  double  ->  [ebp-0x10]
;
; Lcl frame size = 16

G_M21145_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 16
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M21145_IG02:
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     CORINFO_HELP_ULNG2DBL
       fstp     qword ptr [ebp-10H]
       vmovsd   xmm0, qword ptr [ebp-10H]
       vsqrtsd  xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     CORINFO_HELP_DBL2ULNG
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 14.25
G_M21145_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 63, prolog size 9, PerfScore 26.10, (MethodHash=f38aad66) for method JITTest.ScalarUInt64:SquareRoot(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Add(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T00] (  2,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T01] (  2,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M21625_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M21625_IG02:
       mov      eax, dword ptr [ebp+10H]
       mov      edx, dword ptr [ebp+14H]
       add      eax, dword ptr [ebp+08H]
       adc      edx, dword ptr [ebp+0CH]
						;; bbWeight=1    PerfScore 4.00
G_M21625_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 19, prolog size 3, PerfScore 9.65, (MethodHash=3897ab86) for method JITTest.ScalarUInt64:Add(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Mod(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T01] (  2,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T02] (  2,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;  V12 rat8         [V12,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M65374_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M65374_IG02:
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     CORINFO_HELP_ULMOD
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 9.00
G_M65374_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 41, prolog size 6, PerfScore 17.35, (MethodHash=5f3200a1) for method JITTest.ScalarUInt64:Mod(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Subtract(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T00] (  2,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T01] (  2,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M40140_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M40140_IG02:
       mov      eax, dword ptr [ebp+10H]
       mov      edx, dword ptr [ebp+14H]
       sub      eax, dword ptr [ebp+08H]
       sbb      edx, dword ptr [ebp+0CH]
						;; bbWeight=1    PerfScore 4.00
G_M40140_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 19, prolog size 3, PerfScore 9.65, (MethodHash=2c306333) for method JITTest.ScalarUInt64:Subtract(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Multiply(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T01] (  2,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T02] (  2,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;  V12 rat8         [V12,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M22420_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M22420_IG02:
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     CORINFO_HELP_LMUL
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 9.00
G_M22420_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 41, prolog size 6, PerfScore 17.35, (MethodHash=5c85a86b) for method JITTest.ScalarUInt64:Multiply(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Divide(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T01] (  2,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T02] (  2,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;  V12 rat8         [V12,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M39755_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M39755_IG02:
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     CORINFO_HELP_ULDIV
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 9.00
G_M39755_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 41, prolog size 6, PerfScore 17.35, (MethodHash=251b64b4) for method JITTest.ScalarUInt64:Divide(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Min(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;  V02 rat0         [V02    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V03 rat1         [V03    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V04 rat2         [V04    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V05 rat3         [V05    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;  V06 rat4         [V06,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M65298_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M65298_IG02:
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     Silk.NET.Maths.Scalar:Min(long,long):long
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 9.00
G_M65298_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 41, prolog size 6, PerfScore 17.35, (MethodHash=accc00ed) for method JITTest.ScalarUInt64:Min(long,long):long
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Min(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  4,  3   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  4,  3   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  2,  1.50)     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  2,  1.50)     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  2,  1.50)     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  2,  1.50)     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T00] (  3,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T01] (  3,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M34166_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M34166_IG02:
       mov      eax, dword ptr [ebp+08H]
       cmp      eax, dword ptr [ebp+10H]
       mov      eax, dword ptr [ebp+0CH]
       sbb      eax, dword ptr [ebp+14H]
       jae      SHORT G_M34166_IG04
						;; bbWeight=1    PerfScore 5.00
G_M34166_IG03:
       mov      eax, dword ptr [ebp+08H]
       mov      edx, dword ptr [ebp+0CH]
       jmp      SHORT G_M34166_IG05
						;; bbWeight=0.50 PerfScore 2.00
G_M34166_IG04:
       mov      eax, dword ptr [ebp+10H]
       mov      edx, dword ptr [ebp+14H]
						;; bbWeight=0.50 PerfScore 1.00
G_M34166_IG05:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 35, prolog size 3, PerfScore 15.25, (MethodHash=02627a89) for method Silk.NET.Maths.Scalar:Min(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Max(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;  V02 rat0         [V02    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V03 rat1         [V03    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V04 rat2         [V04    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V05 rat3         [V05    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;  V06 rat4         [V06,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M36620_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M36620_IG02:
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     Silk.NET.Maths.Scalar:Max(long,long):long
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 9.00
G_M36620_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 41, prolog size 6, PerfScore 17.35, (MethodHash=a97970f3) for method JITTest.ScalarUInt64:Max(long,long):long
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Max(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  4,  3   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  4,  3   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  2,  1.50)     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  2,  1.50)     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  2,  1.50)     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  2,  1.50)     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T00] (  3,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T01] (  3,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M54120_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M54120_IG02:
       mov      eax, dword ptr [ebp+10H]
       cmp      eax, dword ptr [ebp+08H]
       mov      eax, dword ptr [ebp+14H]
       sbb      eax, dword ptr [ebp+0CH]
       jae      SHORT G_M54120_IG04
						;; bbWeight=1    PerfScore 5.00
G_M54120_IG03:
       mov      eax, dword ptr [ebp+08H]
       mov      edx, dword ptr [ebp+0CH]
       jmp      SHORT G_M54120_IG05
						;; bbWeight=0.50 PerfScore 2.00
G_M54120_IG04:
       mov      eax, dword ptr [ebp+10H]
       mov      edx, dword ptr [ebp+14H]
						;; bbWeight=0.50 PerfScore 1.00
G_M54120_IG05:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 35, prolog size 3, PerfScore 15.25, (MethodHash=79ab2c97) for method Silk.NET.Maths.Scalar:Max(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Larger(long,long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M61715_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M61715_IG02:
       mov      eax, dword ptr [ebp+08H]
       cmp      eax, dword ptr [ebp+10H]
       mov      eax, dword ptr [ebp+0CH]
       sbb      eax, dword ptr [ebp+14H]
       setb     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M61715_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=8fa80eec) for method JITTest.ScalarUInt64:Larger(long,long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Smaller(long,long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M25428_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M25428_IG02:
       mov      eax, dword ptr [ebp+10H]
       cmp      eax, dword ptr [ebp+08H]
       mov      eax, dword ptr [ebp+14H]
       sbb      eax, dword ptr [ebp+0CH]
       setb     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M25428_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=515a9cab) for method JITTest.ScalarUInt64:Smaller(long,long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:LargerEquals(long,long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M49708_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M49708_IG02:
       mov      eax, dword ptr [ebp+10H]
       cmp      eax, dword ptr [ebp+08H]
       mov      eax, dword ptr [ebp+14H]
       sbb      eax, dword ptr [ebp+0CH]
       setae    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M49708_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=fb0e3dd3) for method JITTest.ScalarUInt64:LargerEquals(long,long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:SmallerEquals(long,long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M55851_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M55851_IG02:
       mov      eax, dword ptr [ebp+08H]
       cmp      eax, dword ptr [ebp+10H]
       mov      eax, dword ptr [ebp+0CH]
       sbb      eax, dword ptr [ebp+14H]
       setae    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M55851_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=8e7825d4) for method JITTest.ScalarUInt64:SmallerEquals(long,long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Clamp(long,long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x18]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V02 arg2         [V02    ] (  2,  2   )    long  ->  [ebp+0x08]  
;  V03 rat0         [V03    ] (  1,  1   )     int  ->  [ebp+0x18]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V04 rat1         [V04    ] (  1,  1   )     int  ->  [ebp+0x1C]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V05 rat2         [V05    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V06 rat3         [V06    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;  V07 rat4         [V07    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;  V08 rat5         [V08    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V09 rat6         [V09,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;  V10 rat7         [V10,T01] (  3,  6   )    long  ->  [ebp-0x10]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 16

G_M21965_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 16
						;; bbWeight=1    PerfScore 1.50
G_M21965_IG02:
       push     dword ptr [ebp+1CH]
       push     dword ptr [ebp+18H]
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       call     Silk.NET.Maths.Scalar:Max(long,long):long
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
       push     edx
       push     eax
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     Silk.NET.Maths.Scalar:Min(long,long):long
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], edx
       mov      eax, dword ptr [ebp-10H]
       mov      edx, dword ptr [ebp-0CH]
						;; bbWeight=1    PerfScore 18.00
G_M21965_IG03:
       mov      esp, ebp
       pop      ebp
       ret      24
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 66, prolog size 6, PerfScore 28.85, (MethodHash=8145aa32) for method JITTest.ScalarUInt64:Clamp(long,long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Negate(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x08]  
;  V01 rat0         [V01    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V02 rat1         [V02    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V03 rat2         [V03,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M34306_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M34306_IG02:
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     Silk.NET.Maths.Scalar:Negate(long):long
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.00
G_M34306_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 35, prolog size 6, PerfScore 14.75, (MethodHash=120179fd) for method JITTest.ScalarUInt64:Negate(long):long
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Negate(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 loc0         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op
;
; Lcl frame size = 0

G_M39782_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M39782_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=f3226499) for method Silk.NET.Maths.Scalar:Negate(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Equal(long,long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M58576_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M58576_IG02:
       mov      eax, dword ptr [ebp+10H]
       mov      edx, dword ptr [ebp+14H]
       xor      eax, dword ptr [ebp+08H]
       xor      edx, dword ptr [ebp+0CH]
       or       eax, edx
       sete     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.50
G_M58576_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 27, prolog size 3, PerfScore 11.95, (MethodHash=00e51b2f) for method JITTest.ScalarUInt64:Equal(long,long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Acos(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M12704_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M12704_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=5e4cce5f) for method JITTest.ScalarUInt64:Acos(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Abs(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V02 rat0         [V02    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V03 rat1         [V03    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;* V04 rat2         [V04    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V05 rat3         [V05    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M59470_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M59470_IG02:
       mov      eax, dword ptr [ebp+08H]
       mov      edx, dword ptr [ebp+0CH]
						;; bbWeight=1    PerfScore 2.00
G_M59470_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 13, prolog size 3, PerfScore 7.05, (MethodHash=b78a17b1) for method JITTest.ScalarUInt64:Abs(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Sin(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M38698_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M38698_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=329768d5) for method JITTest.ScalarUInt64:Sin(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Sinh(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M54082_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M54082_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=7c512cbd) for method JITTest.ScalarUInt64:Sinh(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarUInt64:Asin(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M10507_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M10507_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=9330d6f4) for method JITTest.ScalarUInt64:Asin(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:EntryPoint()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V01 tmp1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V02 tmp2         [V02    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V03 tmp3         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V04 tmp4         [V04    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V05 tmp5         [V05    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V06 tmp6         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V07 tmp7         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V08 tmp8         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V09 tmp9         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V10 tmp10        [V10    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V11 tmp11        [V11    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V12 tmp12        [V12    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V13 tmp13        [V13    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V14 tmp14        [V14    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V15 tmp15        [V15    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V16 tmp16        [V16    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V17 tmp17        [V17    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V18 tmp18        [V18    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V19 tmp19        [V19    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V20 tmp20        [V20    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V21 tmp21        [V21    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V22 tmp22        [V22    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V23 tmp23        [V23    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V24 tmp24        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V25 tmp25        [V25    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V26 tmp26        [V26    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V27 tmp27        [V27    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V28 tmp28        [V28    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V29 tmp29        [V29    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V30 tmp30        [V30    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V31 tmp31        [V31    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V32 tmp32        [V32    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;  V33 EHSlots      [V33    ] (  1,  1   )     blk (16) [ebp-0x14]   do-not-enreg[X] must-init addr-exposed "lvaShadowSPslotsVar"
;
; Lcl frame size = 20

G_M41577_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 20
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-14H], eax
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], eax
       mov      dword ptr [ebp-08H], eax
						;; bbWeight=1    PerfScore 6.75
G_M41577_IG02:
       push     0
       push     0
       call     JITTest.ScalarInt64:Atan(long):long
       jmp      SHORT G_M41577_IG04
						;; bbWeight=1    PerfScore 5.00
G_M41577_IG03:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG04:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Atan2(long,long):long
       jmp      SHORT G_M41577_IG06
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG05:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG06:
       push     0
       push     0
       call     JITTest.ScalarInt64:Cos(long):long
       jmp      SHORT G_M41577_IG08
						;; bbWeight=1    PerfScore 5.00
G_M41577_IG07:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG08:
       push     0
       push     0
       call     JITTest.ScalarInt64:Cosh(long):long
       jmp      SHORT G_M41577_IG10
						;; bbWeight=1    PerfScore 5.00
G_M41577_IG09:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG10:
       call     JITTest.ScalarInt64:One():long
       jmp      SHORT G_M41577_IG12
						;; bbWeight=1    PerfScore 3.00
G_M41577_IG11:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG12:
       call     JITTest.ScalarInt64:Two():long
       jmp      SHORT G_M41577_IG14
						;; bbWeight=1    PerfScore 3.00
G_M41577_IG13:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG14:
       push     0
       push     0
       call     JITTest.ScalarInt64:IsNormal(long):bool
       jmp      SHORT G_M41577_IG16
						;; bbWeight=1    PerfScore 5.00
G_M41577_IG15:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG16:
       call     JITTest.ScalarInt64:Pi():long
       jmp      SHORT G_M41577_IG18
						;; bbWeight=1    PerfScore 3.00
G_M41577_IG17:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG18:
       call     JITTest.ScalarInt64:Tau():long
       jmp      SHORT G_M41577_IG20
						;; bbWeight=1    PerfScore 3.00
G_M41577_IG19:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG20:
       call     JITTest.ScalarInt64:HalfPi():long
       jmp      SHORT G_M41577_IG22
						;; bbWeight=1    PerfScore 3.00
G_M41577_IG21:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG22:
       call     JITTest.ScalarInt64:PositiveInfinity():long
       jmp      SHORT G_M41577_IG24
						;; bbWeight=1    PerfScore 3.00
G_M41577_IG23:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG24:
       call     JITTest.ScalarInt64:NegativeInfinity():long
       jmp      SHORT G_M41577_IG26
						;; bbWeight=1    PerfScore 3.00
G_M41577_IG25:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG26:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarInt64:As(double):long
       jmp      SHORT G_M41577_IG28
						;; bbWeight=1    PerfScore 4.08
G_M41577_IG27:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG28:
       push     0
       push     0
       call     JITTest.ScalarInt64:SquareRoot(long):long
       jmp      SHORT G_M41577_IG30
						;; bbWeight=1    PerfScore 5.00
G_M41577_IG29:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG30:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Add(long,long):long
       jmp      SHORT G_M41577_IG32
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG31:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG32:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Mod(long,long):long
       jmp      SHORT G_M41577_IG34
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG33:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG34:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Subtract(long,long):long
       jmp      SHORT G_M41577_IG36
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG35:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG36:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Multiply(long,long):long
       jmp      SHORT G_M41577_IG38
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG37:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG38:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Divide(long,long):long
       jmp      SHORT G_M41577_IG40
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG39:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG40:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Min(long,long):long
       jmp      SHORT G_M41577_IG42
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG41:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG42:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Max(long,long):long
       jmp      SHORT G_M41577_IG44
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG43:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG44:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Larger(long,long):bool
       jmp      SHORT G_M41577_IG46
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG45:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG46:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Smaller(long,long):bool
       jmp      SHORT G_M41577_IG48
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG47:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG48:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:LargerEquals(long,long):bool
       jmp      SHORT G_M41577_IG50
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG49:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG50:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:SmallerEquals(long,long):bool
       jmp      SHORT G_M41577_IG52
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG51:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG52:
       push     0
       push     0
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Clamp(long,long,long):long
       jmp      SHORT G_M41577_IG54
						;; bbWeight=1    PerfScore 9.00
G_M41577_IG53:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG54:
       push     0
       push     0
       call     JITTest.ScalarInt64:Negate(long):long
       jmp      SHORT G_M41577_IG56
						;; bbWeight=1    PerfScore 5.00
G_M41577_IG55:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG56:
       push     0
       push     0
       push     0
       push     0
       call     JITTest.ScalarInt64:Equal(long,long):bool
       jmp      SHORT G_M41577_IG58
						;; bbWeight=1    PerfScore 7.00
G_M41577_IG57:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG58:
       push     0
       push     0
       call     JITTest.ScalarInt64:Acos(long):long
       jmp      SHORT G_M41577_IG60
						;; bbWeight=1    PerfScore 5.00
G_M41577_IG59:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG60:
       push     0
       push     0
       call     JITTest.ScalarInt64:Abs(long):long
       jmp      SHORT G_M41577_IG62
						;; bbWeight=1    PerfScore 5.00
G_M41577_IG61:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG62:
       push     0
       push     0
       call     JITTest.ScalarInt64:Sin(long):long
       jmp      SHORT G_M41577_IG64
						;; bbWeight=1    PerfScore 5.00
G_M41577_IG63:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG64:
       push     0
       push     0
       call     JITTest.ScalarInt64:Sinh(long):long
       jmp      SHORT G_M41577_IG66
						;; bbWeight=1    PerfScore 5.00
G_M41577_IG65:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG66:
       push     0
       push     0
       call     JITTest.ScalarInt64:Asin(long):long
       jmp      SHORT G_M41577_IG68
						;; bbWeight=1    PerfScore 5.00
G_M41577_IG67:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M41577_IG68:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75

; Total bytes of code 595, prolog size 23, PerfScore 248.28, (MethodHash=2a5d5d96) for method JITTest.ScalarInt64:EntryPoint()
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Atan(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M46737_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M46737_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=61db496e) for method JITTest.ScalarInt64:Atan(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Atan2(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 arg1         [V01    ] (  0,  0   )    long  ->  zero-ref   
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V04 rat0         [V04    ] (  0,  0   )     int  ->  zero-ref    V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;* V05 rat1         [V05    ] (  0,  0   )     int  ->  zero-ref    V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M55941_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M55941_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=ce8c257a) for method JITTest.ScalarInt64:Atan2(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Cos(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M9940_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M9940_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=6fc3d92b) for method JITTest.ScalarInt64:Cos(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Cosh(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M50300_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M50300_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=64593b83) for method JITTest.ScalarInt64:Cosh(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:One():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;* V04 rat2         [V04    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V05 rat3         [V05    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M23749_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M23749_IG02:
       mov      eax, 1
       xor      edx, edx
						;; bbWeight=1    PerfScore 0.50
G_M23749_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 12, prolog size 3, PerfScore 4.45, (MethodHash=0cf7a33a) for method JITTest.ScalarInt64:One():long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Two():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;* V04 rat2         [V04    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V05 rat3         [V05    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M53741_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M53741_IG02:
       mov      eax, 2
       xor      edx, edx
						;; bbWeight=1    PerfScore 0.50
G_M53741_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 12, prolog size 3, PerfScore 4.45, (MethodHash=68e22e12) for method JITTest.ScalarInt64:Two():long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:IsNormal(long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01,T00] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;
; Lcl frame size = 0

G_M24102_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M24102_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M24102_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 12, prolog size 3, PerfScore 5.20, (MethodHash=f9c4a1d9) for method JITTest.ScalarInt64:IsNormal(long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Pi():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M29624_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M29624_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=f5458c47) for method JITTest.ScalarInt64:Pi():long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Tau():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M25889_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M25889_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=64ec9ade) for method JITTest.ScalarInt64:Tau():long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:HalfPi():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M35579_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M35579_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=04607504) for method JITTest.ScalarInt64:HalfPi():long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:PositiveInfinity():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M31304_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M31304_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=8d5a85b7) for method JITTest.ScalarInt64:PositiveInfinity():long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:NegativeInfinity():long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V02 rat0         [V02    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V03 rat1         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M30976_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M30976_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=8ce286ff) for method JITTest.ScalarInt64:NegativeInfinity():long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:As(double):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T03] (  1,  1   )  double  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;  V05 rat2         [V05,T01] (  2,  2   )     int  ->  eax         V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;  V06 rat3         [V06,T02] (  2,  2   )     int  ->  edx         V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V07 rat4         [V07,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M18118_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M18118_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     CORINFO_HELP_DBL2LNG
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.75
G_M18118_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 45, prolog size 9, PerfScore 17.70, (MethodHash=061bb939) for method JITTest.ScalarInt64:As(double):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:SquareRoot(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V03 rat0         [V03    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V04 rat1         [V04    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;* V05 rat2         [V05    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V06 rat3         [V06    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;  V07 rat4         [V07,T01] (  2,  2   )     int  ->  eax         V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;  V08 rat5         [V08,T02] (  2,  2   )     int  ->  edx         V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V09 rat6         [V09,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;  TEMP_01                                  double  ->  [ebp-0x10]
;
; Lcl frame size = 16

G_M61484_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 16
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M61484_IG02:
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     CORINFO_HELP_LNG2DBL
       fstp     qword ptr [ebp-10H]
       vmovsd   xmm0, qword ptr [ebp-10H]
       vsqrtsd  xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     CORINFO_HELP_DBL2LNG
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 14.25
G_M61484_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 63, prolog size 9, PerfScore 26.10, (MethodHash=234b0fd3) for method JITTest.ScalarInt64:SquareRoot(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Add(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T00] (  2,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T01] (  2,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M14412_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M14412_IG02:
       mov      eax, dword ptr [ebp+10H]
       mov      edx, dword ptr [ebp+14H]
       add      eax, dword ptr [ebp+08H]
       adc      edx, dword ptr [ebp+0CH]
						;; bbWeight=1    PerfScore 4.00
G_M14412_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 19, prolog size 3, PerfScore 9.65, (MethodHash=f701c7b3) for method JITTest.ScalarInt64:Add(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Mod(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T01] (  2,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T02] (  2,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;  V12 rat8         [V12,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M4587_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M4587_IG02:
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     CORINFO_HELP_LMOD
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 9.00
G_M4587_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 41, prolog size 6, PerfScore 17.35, (MethodHash=e783ee14) for method JITTest.ScalarInt64:Mod(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Subtract(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T00] (  2,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T01] (  2,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M52505_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M52505_IG02:
       mov      eax, dword ptr [ebp+10H]
       mov      edx, dword ptr [ebp+14H]
       sub      eax, dword ptr [ebp+08H]
       sbb      edx, dword ptr [ebp+0CH]
						;; bbWeight=1    PerfScore 4.00
G_M52505_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 19, prolog size 3, PerfScore 9.65, (MethodHash=533732e6) for method JITTest.ScalarInt64:Subtract(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Multiply(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T01] (  2,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T02] (  2,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;  V12 rat8         [V12,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M41025_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M41025_IG02:
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     CORINFO_HELP_LMUL
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 9.00
G_M41025_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 41, prolog size 6, PerfScore 17.35, (MethodHash=5d5c5fbe) for method JITTest.ScalarInt64:Multiply(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Divide(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T01] (  2,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T02] (  2,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;  V12 rat8         [V12,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M49182_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M49182_IG02:
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     CORINFO_HELP_LDIV
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 9.00
G_M49182_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 41, prolog size 6, PerfScore 17.35, (MethodHash=26d03fe1) for method JITTest.ScalarInt64:Divide(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Min(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;  V02 rat0         [V02    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V03 rat1         [V03    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V04 rat2         [V04    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V05 rat3         [V05    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;  V06 rat4         [V06,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M21159_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M21159_IG02:
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     Silk.NET.Maths.Scalar:Min(long,long):long
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 9.00
G_M21159_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 41, prolog size 6, PerfScore 17.35, (MethodHash=7956ad58) for method JITTest.ScalarInt64:Min(long,long):long
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Min(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  4,  3   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  4,  3   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  2,  1.50)     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  2,  1.50)     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  2,  1.50)     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  2,  1.50)     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T00] (  3,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T01] (  3,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M34166_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M34166_IG02:
       mov      eax, dword ptr [ebp+08H]
       cmp      eax, dword ptr [ebp+10H]
       mov      eax, dword ptr [ebp+0CH]
       sbb      eax, dword ptr [ebp+14H]
       jge      SHORT G_M34166_IG04
						;; bbWeight=1    PerfScore 5.00
G_M34166_IG03:
       mov      eax, dword ptr [ebp+08H]
       mov      edx, dword ptr [ebp+0CH]
       jmp      SHORT G_M34166_IG05
						;; bbWeight=0.50 PerfScore 2.00
G_M34166_IG04:
       mov      eax, dword ptr [ebp+10H]
       mov      edx, dword ptr [ebp+14H]
						;; bbWeight=0.50 PerfScore 1.00
G_M34166_IG05:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 35, prolog size 3, PerfScore 15.25, (MethodHash=02627a89) for method Silk.NET.Maths.Scalar:Min(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Max(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;  V02 rat0         [V02    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V03 rat1         [V03    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V04 rat2         [V04    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V05 rat3         [V05    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;  V06 rat4         [V06,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M33465_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M33465_IG02:
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     Silk.NET.Maths.Scalar:Max(long,long):long
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 9.00
G_M33465_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 41, prolog size 6, PerfScore 17.35, (MethodHash=ae9f7d46) for method JITTest.ScalarInt64:Max(long,long):long
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Max(long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  4,  3   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  4,  3   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V04 rat0         [V04    ] (  2,  1.50)     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  2,  1.50)     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  2,  1.50)     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  2,  1.50)     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T00] (  3,  2   )     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T01] (  3,  2   )     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M54120_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M54120_IG02:
       mov      eax, dword ptr [ebp+10H]
       cmp      eax, dword ptr [ebp+08H]
       mov      eax, dword ptr [ebp+14H]
       sbb      eax, dword ptr [ebp+0CH]
       jge      SHORT G_M54120_IG04
						;; bbWeight=1    PerfScore 5.00
G_M54120_IG03:
       mov      eax, dword ptr [ebp+08H]
       mov      edx, dword ptr [ebp+0CH]
       jmp      SHORT G_M54120_IG05
						;; bbWeight=0.50 PerfScore 2.00
G_M54120_IG04:
       mov      eax, dword ptr [ebp+10H]
       mov      edx, dword ptr [ebp+14H]
						;; bbWeight=0.50 PerfScore 1.00
G_M54120_IG05:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 35, prolog size 3, PerfScore 15.25, (MethodHash=79ab2c97) for method Silk.NET.Maths.Scalar:Max(long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Larger(long,long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M30918_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M30918_IG02:
       mov      eax, dword ptr [ebp+08H]
       cmp      eax, dword ptr [ebp+10H]
       mov      eax, dword ptr [ebp+0CH]
       sbb      eax, dword ptr [ebp+14H]
       setl     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M30918_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=65248739) for method JITTest.ScalarInt64:Larger(long,long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Smaller(long,long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M41441_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M41441_IG02:
       mov      eax, dword ptr [ebp+10H]
       cmp      eax, dword ptr [ebp+08H]
       mov      eax, dword ptr [ebp+14H]
       sbb      eax, dword ptr [ebp+0CH]
       setl     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M41441_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=d79e5e1e) for method JITTest.ScalarInt64:Smaller(long,long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:LargerEquals(long,long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M7865_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M7865_IG02:
       mov      eax, dword ptr [ebp+10H]
       cmp      eax, dword ptr [ebp+08H]
       mov      eax, dword ptr [ebp+14H]
       sbb      eax, dword ptr [ebp+0CH]
       setge    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M7865_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=17bee146) for method JITTest.ScalarInt64:LargerEquals(long,long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:SmallerEquals(long,long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M43870_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M43870_IG02:
       mov      eax, dword ptr [ebp+08H]
       cmp      eax, dword ptr [ebp+10H]
       mov      eax, dword ptr [ebp+0CH]
       sbb      eax, dword ptr [ebp+14H]
       setge    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M43870_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=241854a1) for method JITTest.ScalarInt64:SmallerEquals(long,long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Clamp(long,long,long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x18]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V02 arg2         [V02    ] (  2,  2   )    long  ->  [ebp+0x08]  
;  V03 rat0         [V03    ] (  1,  1   )     int  ->  [ebp+0x18]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V04 rat1         [V04    ] (  1,  1   )     int  ->  [ebp+0x1C]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V05 rat2         [V05    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V06 rat3         [V06    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;  V07 rat4         [V07    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;  V08 rat5         [V08    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V09 rat6         [V09,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;  V10 rat7         [V10,T01] (  3,  6   )    long  ->  [ebp-0x10]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 16

G_M29080_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 16
						;; bbWeight=1    PerfScore 1.50
G_M29080_IG02:
       push     dword ptr [ebp+1CH]
       push     dword ptr [ebp+18H]
       push     dword ptr [ebp+14H]
       push     dword ptr [ebp+10H]
       call     Silk.NET.Maths.Scalar:Max(long,long):long
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
       push     edx
       push     eax
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     Silk.NET.Maths.Scalar:Min(long,long):long
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], edx
       mov      eax, dword ptr [ebp-10H]
       mov      edx, dword ptr [ebp-0CH]
						;; bbWeight=1    PerfScore 18.00
G_M29080_IG03:
       mov      esp, ebp
       pop      ebp
       ret      24
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 66, prolog size 6, PerfScore 28.85, (MethodHash=1b498e67) for method JITTest.ScalarInt64:Clamp(long,long,long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Negate(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x08]  
;  V01 rat0         [V01    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V02 rat1         [V02    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V03 rat2         [V03,T00] (  3,  6   )    long  ->  [ebp-0x08]   multireg-ret "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 8

G_M60599_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
						;; bbWeight=1    PerfScore 1.50
G_M60599_IG02:
       push     dword ptr [ebp+0CH]
       push     dword ptr [ebp+08H]
       call     Silk.NET.Maths.Scalar:Negate(long):long
       mov      dword ptr [ebp-08H], eax
       mov      dword ptr [ebp-04H], edx
       mov      eax, dword ptr [ebp-08H]
       mov      edx, dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.00
G_M60599_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 35, prolog size 6, PerfScore 14.75, (MethodHash=3ce51348) for method JITTest.ScalarInt64:Negate(long):long
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Negate(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V01 loc0         [V01    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op
;  V02 rat0         [V02    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V03 rat1         [V03    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M39782_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M39782_IG02:
       mov      eax, dword ptr [ebp+08H]
       mov      edx, dword ptr [ebp+0CH]
       neg      eax
       adc      edx, 0
       neg      edx
						;; bbWeight=1    PerfScore 2.75
G_M39782_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 20, prolog size 3, PerfScore 8.50, (MethodHash=f3226499) for method Silk.NET.Maths.Scalar:Negate(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Equal(long,long):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x10]  
;  V01 arg1         [V01    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x10]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x14]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;  V06 rat2         [V06    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;  V07 rat3         [V07    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M17509_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M17509_IG02:
       mov      eax, dword ptr [ebp+10H]
       mov      edx, dword ptr [ebp+14H]
       xor      eax, dword ptr [ebp+08H]
       xor      edx, dword ptr [ebp+0CH]
       or       eax, edx
       sete     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.50
G_M17509_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 27, prolog size 3, PerfScore 11.95, (MethodHash=b0bdbb9a) for method JITTest.ScalarInt64:Equal(long,long):bool
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Acos(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M2197_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M2197_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=f98ef76a) for method JITTest.ScalarInt64:Acos(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Abs(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  2,  2   )    long  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp2         [V03    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V04 rat0         [V04    ] (  1,  1   )     int  ->  [ebp+0x08]   do-not-enreg[] V00.lo(offs=0x00) "field V00.lo (fldOffset=0x0)"
;  V05 rat1         [V05    ] (  1,  1   )     int  ->  [ebp+0x0C]   do-not-enreg[] V00.hi(offs=0x04) "field V00.hi (fldOffset=0x4)"
;* V06 rat2         [V06    ] (  0,  0   )     int  ->  zero-ref    V01.lo(offs=0x00) "field V01.lo (fldOffset=0x0)"
;* V07 rat3         [V07    ] (  0,  0   )     int  ->  zero-ref    V01.hi(offs=0x04) "field V01.hi (fldOffset=0x4)"
;* V08 rat4         [V08    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V09 rat5         [V09    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;  V10 rat6         [V10,T01] (  4,  2.50)     int  ->  eax         V03.lo(offs=0x00) "field V03.lo (fldOffset=0x0)"
;  V11 rat7         [V11,T00] (  6,  3.75)     int  ->  edx         V03.hi(offs=0x04) "field V03.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M25499_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M25499_IG02:
       mov      eax, dword ptr [ebp+08H]
       mov      edx, dword ptr [ebp+0CH]
       test     edx, edx
       jge      SHORT G_M25499_IG04
						;; bbWeight=1    PerfScore 3.25
G_M25499_IG03:
       neg      eax
       adc      edx, 0
       neg      edx
       test     edx, edx
       jl       SHORT G_M25499_IG05
						;; bbWeight=0.25 PerfScore 0.50
G_M25499_IG04:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50
G_M25499_IG05:
       call     System.Math:ThrowAbsOverflow()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 34, prolog size 3, PerfScore 10.90, (MethodHash=b1189c64) for method JITTest.ScalarInt64:Abs(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Sin(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M21823_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M21823_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=8127aac0) for method JITTest.ScalarInt64:Sin(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Sinh(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M63351_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M63351_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=13180888) for method JITTest.ScalarInt64:Sinh(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarInt64:Asin(long):long
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )    long  ->  zero-ref   
;* V01 tmp0         [V01    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )    long  ->  zero-ref    ld-addr-op "Inline ldloca(s) first use temp"
;* V03 rat0         [V03    ] (  0,  0   )     int  ->  zero-ref    V02.lo(offs=0x00) "field V02.lo (fldOffset=0x0)"
;* V04 rat1         [V04    ] (  0,  0   )     int  ->  zero-ref    V02.hi(offs=0x04) "field V02.hi (fldOffset=0x4)"
;
; Lcl frame size = 0

G_M20286_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M20286_IG02:
       call     Silk.NET.Maths.Scalar:ThrowInvalidType()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 9, prolog size 3, PerfScore 2.15, (MethodHash=1185b0c1) for method JITTest.ScalarInt64:Asin(long):long
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:EntryPoint()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 loc0         [V00    ] (  0,  0   )  struct ( 4) zero-ref    ld-addr-op
;* V01 tmp0         [V01    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V03 tmp2         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V04 tmp3         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V05 tmp4         [V05    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V06 tmp5         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V07 tmp6         [V07    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V08 tmp7         [V08    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V09 tmp8         [V09    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V10 tmp9         [V10    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V11 tmp10        [V11    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V12 tmp11        [V12    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V13 tmp12        [V13    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V14 tmp13        [V14    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V15 tmp14        [V15    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V16 tmp15        [V16    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V17 tmp16        [V17    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V18 tmp17        [V18    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V19 tmp18        [V19    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V20 tmp19        [V20    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V21 tmp20        [V21    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V22 tmp21        [V22    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V23 tmp22        [V23    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V24 tmp23        [V24    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V25 tmp24        [V25    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V26 tmp25        [V26    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V27 tmp26        [V27    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V28 tmp27        [V28    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V29 tmp28        [V29    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V30 tmp29        [V30    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V31 tmp30        [V31    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V32 tmp31        [V32    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V33 tmp32        [V33    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V34 tmp33        [V34    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V35 tmp34        [V35    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V36 tmp35        [V36    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V37 tmp36        [V37    ] (  0,  0   )  struct ( 4) zero-ref    "impSpillLclRefs"
;* V38 tmp37        [V38    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V39 tmp38        [V39    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V40 tmp39        [V40    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V41 tmp40        [V41    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V42 tmp41        [V42    ] (  0,  0   )  struct ( 4) zero-ref    "struct address for call/obj"
;* V43 tmp42        [V43    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V44 tmp43        [V44    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V45 tmp44        [V45    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V46 tmp45        [V46    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V47 tmp46        [V47    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V48 tmp47        [V48    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V49 tmp48        [V49    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V50 tmp49        [V50    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V51 tmp50        [V51    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V52 tmp51        [V52    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V53 tmp52        [V53    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V54 tmp53        [V54    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V55 tmp54        [V55    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V56 tmp55        [V56    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V57 tmp56        [V57    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V58 tmp57        [V58    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V59 tmp58        [V59    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V60 tmp59        [V60    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V61 tmp60        [V61    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V62 tmp61        [V62    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V63 tmp62        [V63    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V64 tmp63        [V64    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V65 tmp64        [V65    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V66 tmp65        [V66    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V67 tmp66        [V67    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V68 tmp67        [V68    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V69 tmp68        [V69    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V70 tmp69        [V70    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V71 tmp70        [V71    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V72 tmp71        [V72    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V73 tmp72        [V73    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V74 tmp73        [V74    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V75 tmp74        [V75    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;  V76 tmp75        [V76,T00] ( 66, 66   )  ushort  ->  registers   V00._value(offs=0x00) P-INDEP "field V00._value (fldOffset=0x0)"
;* V77 tmp76        [V77    ] (  0,  0   )  ushort  ->  zero-ref    V01._value(offs=0x00) P-INDEP "field V01._value (fldOffset=0x0)"
;* V78 tmp77        [V78,T03] (  0,  0   )  ushort  ->  zero-ref    V02._value(offs=0x00) P-INDEP "field V02._value (fldOffset=0x0)"
;* V79 tmp78        [V79    ] (  0,  0   )  ushort  ->  zero-ref    V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;* V80 tmp79        [V80    ] (  0,  0   )  ushort  ->  zero-ref    V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;* V81 tmp80        [V81    ] (  0,  0   )  ushort  ->  zero-ref    V05._value(offs=0x00) P-INDEP "field V05._value (fldOffset=0x0)"
;* V82 tmp81        [V82    ] (  0,  0   )  ushort  ->  zero-ref    V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;* V83 tmp82        [V83    ] (  0,  0   )  ushort  ->  zero-ref    V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;* V84 tmp83        [V84    ] (  0,  0   )  ushort  ->  zero-ref    V08._value(offs=0x00) P-INDEP "field V08._value (fldOffset=0x0)"
;* V85 tmp84        [V85    ] (  0,  0   )  ushort  ->  zero-ref    V09._value(offs=0x00) P-INDEP "field V09._value (fldOffset=0x0)"
;* V86 tmp85        [V86    ] (  0,  0   )  ushort  ->  zero-ref    V10._value(offs=0x00) P-INDEP "field V10._value (fldOffset=0x0)"
;* V87 tmp86        [V87    ] (  0,  0   )  ushort  ->  zero-ref    V11._value(offs=0x00) P-INDEP "field V11._value (fldOffset=0x0)"
;* V88 tmp87        [V88    ] (  0,  0   )  ushort  ->  zero-ref    V12._value(offs=0x00) P-INDEP "field V12._value (fldOffset=0x0)"
;* V89 tmp88        [V89    ] (  0,  0   )  ushort  ->  zero-ref    V13._value(offs=0x00) P-INDEP "field V13._value (fldOffset=0x0)"
;* V90 tmp89        [V90    ] (  0,  0   )  ushort  ->  zero-ref    V14._value(offs=0x00) P-INDEP "field V14._value (fldOffset=0x0)"
;* V91 tmp90        [V91,T04] (  0,  0   )  ushort  ->  zero-ref    V15._value(offs=0x00) P-INDEP "field V15._value (fldOffset=0x0)"
;* V92 tmp91        [V92    ] (  0,  0   )  ushort  ->  zero-ref    V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V93 tmp92        [V93,T05] (  0,  0   )  ushort  ->  zero-ref    V17._value(offs=0x00) P-INDEP "field V17._value (fldOffset=0x0)"
;* V94 tmp93        [V94    ] (  0,  0   )  ushort  ->  zero-ref    V18._value(offs=0x00) P-INDEP "field V18._value (fldOffset=0x0)"
;* V95 tmp94        [V95,T06] (  0,  0   )  ushort  ->  zero-ref    V19._value(offs=0x00) P-INDEP "field V19._value (fldOffset=0x0)"
;* V96 tmp95        [V96    ] (  0,  0   )  ushort  ->  zero-ref    V20._value(offs=0x00) P-INDEP "field V20._value (fldOffset=0x0)"
;* V97 tmp96        [V97,T07] (  0,  0   )  ushort  ->  zero-ref    V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V98 tmp97        [V98    ] (  0,  0   )  ushort  ->  zero-ref    V22._value(offs=0x00) P-INDEP "field V22._value (fldOffset=0x0)"
;* V99 tmp98        [V99,T08] (  0,  0   )  ushort  ->  zero-ref    V23._value(offs=0x00) P-INDEP "field V23._value (fldOffset=0x0)"
;* V100 tmp99       [V100    ] (  0,  0   )  ushort  ->  zero-ref    V24._value(offs=0x00) P-INDEP "field V24._value (fldOffset=0x0)"
;* V101 tmp100      [V101,T09] (  0,  0   )  ushort  ->  zero-ref    V25._value(offs=0x00) P-INDEP "field V25._value (fldOffset=0x0)"
;* V102 tmp101      [V102    ] (  0,  0   )  ushort  ->  zero-ref    V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;* V103 tmp102      [V103,T10] (  0,  0   )  ushort  ->  zero-ref    V27._value(offs=0x00) P-INDEP "field V27._value (fldOffset=0x0)"
;* V104 tmp103      [V104    ] (  0,  0   )  ushort  ->  zero-ref    V28._value(offs=0x00) P-INDEP "field V28._value (fldOffset=0x0)"
;* V105 tmp104      [V105,T11] (  0,  0   )  ushort  ->  zero-ref    V29._value(offs=0x00) P-INDEP "field V29._value (fldOffset=0x0)"
;* V106 tmp105      [V106,T12] (  0,  0   )  ushort  ->  zero-ref    V30._value(offs=0x00) P-INDEP "field V30._value (fldOffset=0x0)"
;* V107 tmp106      [V107,T13] (  0,  0   )  ushort  ->  zero-ref    V31._value(offs=0x00) P-INDEP "field V31._value (fldOffset=0x0)"
;* V108 tmp107      [V108,T14] (  0,  0   )  ushort  ->  zero-ref    V32._value(offs=0x00) P-INDEP "field V32._value (fldOffset=0x0)"
;  V109 tmp108      [V109,T01] (  2,  2   )  ushort  ->  esi         V33._value(offs=0x00) P-INDEP "field V33._value (fldOffset=0x0)"
;  V110 tmp109      [V110,T02] (  2,  2   )  ushort  ->  esi         V34._value(offs=0x00) P-INDEP "field V34._value (fldOffset=0x0)"
;* V111 tmp110      [V111    ] (  0,  0   )  ushort  ->  zero-ref    V35._value(offs=0x00) P-INDEP "field V35._value (fldOffset=0x0)"
;* V112 tmp111      [V112    ] (  0,  0   )  ushort  ->  zero-ref    V36._value(offs=0x00) P-INDEP "field V36._value (fldOffset=0x0)"
;* V113 tmp112      [V113,T15] (  0,  0   )  ushort  ->  zero-ref    V37._value(offs=0x00) P-INDEP "field V37._value (fldOffset=0x0)"
;* V114 tmp113      [V114    ] (  0,  0   )  ushort  ->  zero-ref    V38._value(offs=0x00) P-INDEP "field V38._value (fldOffset=0x0)"
;* V115 tmp114      [V115    ] (  0,  0   )  ushort  ->  zero-ref    V39._value(offs=0x00) P-INDEP "field V39._value (fldOffset=0x0)"
;* V116 tmp115      [V116    ] (  0,  0   )  ushort  ->  zero-ref    V40._value(offs=0x00) P-INDEP "field V40._value (fldOffset=0x0)"
;* V117 tmp116      [V117    ] (  0,  0   )  ushort  ->  zero-ref    V41._value(offs=0x00) P-INDEP "field V41._value (fldOffset=0x0)"
;* V118 tmp117      [V118    ] (  0,  0   )  ushort  ->  zero-ref    V42._value(offs=0x00) P-INDEP "field V42._value (fldOffset=0x0)"
;  V119 EHSlots     [V119    ] (  1,  1   )     blk (16) [ebp-0x18]   do-not-enreg[X] must-init addr-exposed "lvaShadowSPslotsVar"
;
; Lcl frame size = 20

G_M49115_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       sub      esp, 20
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-18H], eax
       mov      dword ptr [ebp-14H], eax
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], eax
						;; bbWeight=1    PerfScore 7.75
G_M49115_IG02:
       xor      esi, esi
       push     esi
       call     JITTest.ScalarHalf:Atan(System.Half):System.Half
       jmp      SHORT G_M49115_IG04
						;; bbWeight=1    PerfScore 4.25
G_M49115_IG03:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG04:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:Atan2(System.Half,System.Half):System.Half
       jmp      SHORT G_M49115_IG06
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG05:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG06:
       xor      esi, esi
       push     esi
       call     JITTest.ScalarHalf:Cos(System.Half):System.Half
       jmp      SHORT G_M49115_IG08
						;; bbWeight=1    PerfScore 4.25
G_M49115_IG07:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG08:
       xor      esi, esi
       push     esi
       call     JITTest.ScalarHalf:Cosh(System.Half):System.Half
       jmp      SHORT G_M49115_IG10
						;; bbWeight=1    PerfScore 4.25
G_M49115_IG09:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG10:
       call     JITTest.ScalarHalf:One():System.Half
       jmp      SHORT G_M49115_IG12
						;; bbWeight=1    PerfScore 3.00
G_M49115_IG11:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG12:
       call     JITTest.ScalarHalf:Two():System.Half
       jmp      SHORT G_M49115_IG14
						;; bbWeight=1    PerfScore 3.00
G_M49115_IG13:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG14:
       xor      esi, esi
       push     esi
       call     JITTest.ScalarHalf:IsNormal(System.Half):bool
       jmp      SHORT G_M49115_IG16
						;; bbWeight=1    PerfScore 4.25
G_M49115_IG15:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG16:
       call     JITTest.ScalarHalf:Pi():System.Half
       jmp      SHORT G_M49115_IG18
						;; bbWeight=1    PerfScore 3.00
G_M49115_IG17:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG18:
       call     JITTest.ScalarHalf:Tau():System.Half
       jmp      SHORT G_M49115_IG20
						;; bbWeight=1    PerfScore 3.00
G_M49115_IG19:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG20:
       call     JITTest.ScalarHalf:HalfPi():System.Half
       jmp      SHORT G_M49115_IG22
						;; bbWeight=1    PerfScore 3.00
G_M49115_IG21:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG22:
       call     JITTest.ScalarHalf:PositiveInfinity():System.Half
       jmp      SHORT G_M49115_IG24
						;; bbWeight=1    PerfScore 3.00
G_M49115_IG23:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG24:
       call     JITTest.ScalarHalf:NegativeInfinity():System.Half
       jmp      SHORT G_M49115_IG26
						;; bbWeight=1    PerfScore 3.00
G_M49115_IG25:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG26:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarHalf:As(double):System.Half
       jmp      SHORT G_M49115_IG28
						;; bbWeight=1    PerfScore 4.08
G_M49115_IG27:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG28:
       xor      esi, esi
       push     esi
       call     JITTest.ScalarHalf:SquareRoot(System.Half):System.Half
       jmp      SHORT G_M49115_IG30
						;; bbWeight=1    PerfScore 4.25
G_M49115_IG29:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG30:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:Add(System.Half,System.Half):System.Half
       jmp      SHORT G_M49115_IG32
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG31:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG32:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:Mod(System.Half,System.Half):System.Half
       jmp      SHORT G_M49115_IG34
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG33:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG34:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:Subtract(System.Half,System.Half):System.Half
       jmp      SHORT G_M49115_IG36
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG35:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG36:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:Multiply(System.Half,System.Half):System.Half
       jmp      SHORT G_M49115_IG38
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG37:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG38:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:Divide(System.Half,System.Half):System.Half
       jmp      SHORT G_M49115_IG40
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG39:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG40:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:Min(System.Half,System.Half):System.Half
       jmp      SHORT G_M49115_IG42
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG41:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG42:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:Max(System.Half,System.Half):System.Half
       jmp      SHORT G_M49115_IG44
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG43:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG44:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:Larger(System.Half,System.Half):bool
       jmp      SHORT G_M49115_IG46
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG45:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG46:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:Smaller(System.Half,System.Half):bool
       jmp      SHORT G_M49115_IG48
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG47:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG48:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:LargerEquals(System.Half,System.Half):bool
       jmp      SHORT G_M49115_IG50
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG49:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG50:
       xor      esi, esi
       push     esi
       push     esi
       call     JITTest.ScalarHalf:SmallerEquals(System.Half,System.Half):bool
       jmp      SHORT G_M49115_IG52
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG51:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG52:
       xor      esi, esi
       xor      eax, eax
       push     esi
       push     eax
       push     eax
       call     JITTest.ScalarHalf:Clamp(System.Half,System.Half,System.Half):System.Half
       jmp      SHORT G_M49115_IG54
						;; bbWeight=1    PerfScore 6.50
G_M49115_IG53:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG54:
       xor      eax, eax
       push     eax
       call     JITTest.ScalarHalf:Negate(System.Half):System.Half
       jmp      SHORT G_M49115_IG56
						;; bbWeight=1    PerfScore 4.25
G_M49115_IG55:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG56:
       xor      eax, eax
       push     eax
       push     eax
       call     JITTest.ScalarHalf:Equal(System.Half,System.Half):bool
       jmp      SHORT G_M49115_IG58
						;; bbWeight=1    PerfScore 5.25
G_M49115_IG57:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG58:
       xor      eax, eax
       push     eax
       call     JITTest.ScalarHalf:Acos(System.Half):System.Half
       jmp      SHORT G_M49115_IG60
						;; bbWeight=1    PerfScore 4.25
G_M49115_IG59:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG60:
       xor      eax, eax
       push     eax
       call     JITTest.ScalarHalf:Abs(System.Half):System.Half
       jmp      SHORT G_M49115_IG62
						;; bbWeight=1    PerfScore 4.25
G_M49115_IG61:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG62:
       xor      eax, eax
       push     eax
       call     JITTest.ScalarHalf:Sin(System.Half):System.Half
       jmp      SHORT G_M49115_IG64
						;; bbWeight=1    PerfScore 4.25
G_M49115_IG63:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG64:
       xor      eax, eax
       push     eax
       call     JITTest.ScalarHalf:Sinh(System.Half):System.Half
       jmp      SHORT G_M49115_IG66
						;; bbWeight=1    PerfScore 4.25
G_M49115_IG65:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG66:
       xor      eax, eax
       push     eax
       call     JITTest.ScalarHalf:Asin(System.Half):System.Half
       jmp      SHORT G_M49115_IG68
						;; bbWeight=1    PerfScore 4.25
G_M49115_IG67:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M49115_IG68:
       lea      esp, [ebp-04H]
       pop      esi
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 530, prolog size 24, PerfScore 210.03, (MethodHash=e2584024) for method JITTest.ScalarHalf:EntryPoint()
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Atan(System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T02] (  1,  1   )  ushort  ->  [ebp+0x08]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V04 tmp3         [V04,T01] (  2,  2   )  ushort  ->  eax         V02._value(offs=0x00) P-INDEP "field V02._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M27459_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M27459_IG02:
       movzx    eax, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Atan(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 11.50
G_M27459_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 65, prolog size 7, PerfScore 24.40, (MethodHash=98b094bc) for method JITTest.ScalarHalf:Atan(System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Atan2(System.Half,System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V02 tmp0         [V02,T02] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T07] (  2,  4   )   float  ->  [ebp-0x0C]   "non-inline candidate call"
;  V06 tmp4         [V06,T01] (  3,  6   )     ref  ->  edi         class-hnd exact "Single-def Box Helper"
;  V07 tmp5         [V07,T00] (  4,  6.50)     ref  ->  edi         "inline UNBOX clone1"
;  V08 tmp6         [V08,T05] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V09 tmp7         [V09,T06] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V10 tmp8         [V10,T03] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V11 tmp9         [V11,T04] (  2,  2   )  ushort  ->  esi         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x10]
;
; Lcl frame size = 8

G_M56341_IG01:
       push     ebp
       mov      ebp, esp
       push     edi
       push     esi
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 4.50
G_M56341_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    esi, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-10H]
       vmovss   xmm0, dword ptr [ebp-10H]
       vmovss   dword ptr [ebp-0CH], xmm0
       mov      ecx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      edi, eax
       vmovss   xmm0, dword ptr [ebp-0CH]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       push     esi
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-10H]
       vmovss   xmm0, dword ptr [ebp-10H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Atan2(float,float):float
       fstp     dword ptr [ebp-10H]
       vmovss   xmm0, dword ptr [ebp-10H]
       vmovss   dword ptr [edi+4], xmm0
       cmp      dword ptr [edi], 0xD1FFAB1E
       je       SHORT G_M56341_IG04
						;; bbWeight=1    PerfScore 23.50
G_M56341_IG03:
       mov      edx, edi
       mov      ecx, 0xD1FFAB1E
       call     CORINFO_HELP_UNBOX
						;; bbWeight=0.25 PerfScore 0.38
G_M56341_IG04:
       movsx    eax, word  ptr [edi+4]
						;; bbWeight=1    PerfScore 2.00
G_M56341_IG05:
       lea      esp, [ebp-08H]
       pop      esi
       pop      edi
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 4.00

; Total bytes of code 136, prolog size 11, PerfScore 48.78, (MethodHash=2ef123ea) for method JITTest.ScalarHalf:Atan2(System.Half,System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Cos(System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T02] (  1,  1   )  ushort  ->  [ebp+0x08]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V04 tmp3         [V04,T01] (  2,  2   )  ushort  ->  eax         V02._value(offs=0x00) P-INDEP "field V02._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M22342_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M22342_IG02:
       movzx    eax, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Cos(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 11.50
G_M22342_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 65, prolog size 7, PerfScore 24.40, (MethodHash=5deaa8b9) for method JITTest.ScalarHalf:Cos(System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Cosh(System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T02] (  1,  1   )  ushort  ->  [ebp+0x08]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V04 tmp3         [V04,T01] (  2,  2   )  ushort  ->  eax         V02._value(offs=0x00) P-INDEP "field V02._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M23790_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M23790_IG02:
       movzx    eax, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Cosh(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 11.50
G_M23790_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 65, prolog size 7, PerfScore 24.40, (MethodHash=d883a311) for method JITTest.ScalarHalf:Cosh(System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:One():System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;  V01 tmp1         [V01,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M39701_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M39701_IG02:
       vmovss   xmm0, dword ptr [@RWD00]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 3.75
G_M39701_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50
RWD00  dd	3F800000h


; Total bytes of code 29, prolog size 6, PerfScore 10.60, (MethodHash=e75164ea) for method JITTest.ScalarHalf:One():System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Two():System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;  V01 tmp1         [V01,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M21373_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M21373_IG02:
       vmovss   xmm0, dword ptr [@RWD00]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 3.75
G_M21373_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50
RWD00  dd	40000000h


; Total bytes of code 29, prolog size 6, PerfScore 10.60, (MethodHash=619eac82) for method JITTest.ScalarHalf:Two():System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:IsNormal(System.Half):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T01] (  3,  2   )    bool  ->  eax         "Inline return value spill temp"
;* V04 tmp3         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp4         [V05,T00] (  4,  2.75)     int  ->  eax         "Inline stloc first use temp"
;* V06 tmp5         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V07 tmp6         [V07,T02] (  1,  1   )  ushort  ->  [ebp+0x08]   do-not-enreg[] V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;* V08 tmp7         [V08    ] (  0,  0   )  ushort  ->  zero-ref    V02._value(offs=0x00) P-INDEP "field V02._value (fldOffset=0x0)"
;* V09 tmp8         [V09    ] (  0,  0   )  ushort  ->  zero-ref    V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;* V10 tmp9         [V10    ] (  0,  0   )  ushort  ->  zero-ref    V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;
; Lcl frame size = 0

G_M63798_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M63798_IG02:
       mov      eax, dword ptr [ebp+08H]
       movzx    eax, ax
       and      eax, -0x8001
       movzx    eax, ax
       cmp      eax, 0x7C00
       jae      SHORT G_M63798_IG05
						;; bbWeight=1    PerfScore 3.00
G_M63798_IG03:
       test     eax, eax
       je       SHORT G_M63798_IG05
						;; bbWeight=0.25 PerfScore 0.31
G_M63798_IG04:
       test     eax, 0x7C00
       setne    al
       movzx    eax, al
       jmp      SHORT G_M63798_IG06
						;; bbWeight=0.50 PerfScore 1.75
G_M63798_IG05:
       xor      eax, eax
						;; bbWeight=0.50 PerfScore 0.12
G_M63798_IG06:
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 47, prolog size 3, PerfScore 13.64, (MethodHash=defa06c9) for method JITTest.ScalarHalf:IsNormal(System.Half):bool
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Pi():System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 tmp0         [V00,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M10504_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M10504_IG02:
       vmovsd   xmm0, qword ptr [@RWD08]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Half:op_Explicit(double):System.Half
						;; bbWeight=1    PerfScore 3.75
G_M10504_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50
RWD00  dq	0000000000000000h
RWD08  dq	400921FB54442D18h


; Total bytes of code 29, prolog size 6, PerfScore 10.60, (MethodHash=fb8bd6f7) for method JITTest.ScalarHalf:Pi():System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Tau():System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 tmp0         [V00,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M32945_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M32945_IG02:
       vmovsd   xmm0, qword ptr [@RWD08]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Half:op_Explicit(double):System.Half
						;; bbWeight=1    PerfScore 3.75
G_M32945_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50
RWD00  dq	0000000000000000h
RWD08  dq	401921FB54442D18h


; Total bytes of code 29, prolog size 6, PerfScore 10.60, (MethodHash=979b7f4e) for method JITTest.ScalarHalf:Tau():System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:HalfPi():System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 tmp0         [V00,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M30571_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M30571_IG02:
       vmovsd   xmm0, qword ptr [@RWD08]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Half:op_Explicit(double):System.Half
						;; bbWeight=1    PerfScore 3.75
G_M30571_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50
RWD00  dq	0000000000000000h
RWD08  dq	3FF921FB54442D18h


; Total bytes of code 29, prolog size 6, PerfScore 10.60, (MethodHash=483e8894) for method JITTest.ScalarHalf:HalfPi():System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:PositiveInfinity():System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )  struct ( 4) zero-ref    "NewObj constructor temp"
;* V02 tmp2         [V02    ] (  0,  0   )  ushort  ->  zero-ref    V01._value(offs=0x00) P-INDEP "field V01._value (fldOffset=0x0)"
;
; Lcl frame size = 0

G_M41528_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M41528_IG02:
       mov      eax, 0x7C00
						;; bbWeight=1    PerfScore 0.25
G_M41528_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=b6575dc7) for method JITTest.ScalarHalf:PositiveInfinity():System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:NegativeInfinity():System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )  struct ( 4) zero-ref    "NewObj constructor temp"
;* V02 tmp2         [V02    ] (  0,  0   )  ushort  ->  zero-ref    V01._value(offs=0x00) P-INDEP "field V01._value (fldOffset=0x0)"
;
; Lcl frame size = 0

G_M35184_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M35184_IG02:
       mov      eax, -0x400
						;; bbWeight=1    PerfScore 0.25
G_M35184_IG03:
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 10, prolog size 3, PerfScore 4.00, (MethodHash=b1f5768f) for method JITTest.ScalarHalf:NegativeInfinity():System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:As(double):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;  V02 tmp1         [V02,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M25398_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M25398_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Half:op_Explicit(double):System.Half
						;; bbWeight=1    PerfScore 3.75
G_M25398_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 28, prolog size 6, PerfScore 11.50, (MethodHash=f8a69cc9) for method JITTest.ScalarHalf:As(double):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:SquareRoot(System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V04 tmp3         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp4         [V05,T03] (  1,  1   )  ushort  ->  [ebp+0x08]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V06 tmp5         [V06,T01] (  2,  2   )  ushort  ->  eax         V02._value(offs=0x00) P-INDEP "field V02._value (fldOffset=0x0)"
;  V07 tmp6         [V07,T02] (  2,  2   )  ushort  ->  eax         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M39678_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M39678_IG02:
       movzx    eax, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vsqrtss  xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 18.25
G_M39678_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 48, prolog size 7, PerfScore 29.35, (MethodHash=0db06501) for method JITTest.ScalarHalf:SquareRoot(System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Add(System.Half,System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V06 tmp4         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V08 tmp6         [V08,T07] (  2,  4   )   float  ->  [ebp-0x08]   "non-inline candidate call"
;  V09 tmp7         [V09,T05] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V10 tmp8         [V10,T06] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V11 tmp9         [V11,T01] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T02] (  2,  2   )  ushort  ->  esi         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T03] (  2,  2   )  ushort  ->  eax         V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;  V14 tmp12        [V14,T04] (  2,  2   )  ushort  ->  esi         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x0C]
;
; Lcl frame size = 8

G_M42172_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 3.50
G_M42172_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    esi, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vmovss   dword ptr [ebp-08H], xmm0
       push     esi
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vaddss   xmm0, xmm0, dword ptr [ebp-08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 18.25
G_M42172_IG03:
       lea      esp, [ebp-04H]
       pop      esi
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 3.50

; Total bytes of code 77, prolog size 10, PerfScore 33.45, (MethodHash=20ad5b43) for method JITTest.ScalarHalf:Add(System.Half,System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Mod(System.Half,System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V06 tmp4         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V08 tmp6         [V08,T07] (  2,  4   )   float  ->  mm0         "non-inline candidate call"
;  V09 tmp7         [V09,T05] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V10 tmp8         [V10,T06] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V11 tmp9         [V11,T01] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T02] (  2,  2   )  ushort  ->  esi         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T03] (  2,  2   )  ushort  ->  eax         V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;  V14 tmp12        [V14,T04] (  2,  2   )  ushort  ->  esi         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x08]
;
; Lcl frame size = 4

G_M18555_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 4.25
G_M18555_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    esi, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-08H]
       vmovss   xmm0, dword ptr [ebp-08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       push     esi
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-08H]
       vmovss   xmm0, dword ptr [ebp-08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     CORINFO_HELP_FLTREM
       fstp     dword ptr [ebp-08H]
       vmovss   xmm0, dword ptr [ebp-08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 17.75
G_M18555_IG03:
       pop      ecx
       pop      esi
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 3.50

; Total bytes of code 92, prolog size 8, PerfScore 35.30, (MethodHash=9397b784) for method JITTest.ScalarHalf:Mod(System.Half,System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Subtract(System.Half,System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V06 tmp4         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V08 tmp6         [V08,T07] (  2,  4   )   float  ->  [ebp-0x08]   "non-inline candidate call"
;  V09 tmp7         [V09,T05] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V10 tmp8         [V10,T06] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V11 tmp9         [V11,T01] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T02] (  2,  2   )  ushort  ->  esi         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T03] (  2,  2   )  ushort  ->  eax         V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;  V14 tmp12        [V14,T04] (  2,  2   )  ushort  ->  esi         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x0C]
;
; Lcl frame size = 8

G_M13193_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 3.50
G_M13193_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    esi, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vmovss   dword ptr [ebp-08H], xmm0
       push     esi
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm1, dword ptr [ebp-08H]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vsubss   xmm0, xmm1, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 18.25
G_M13193_IG03:
       lea      esp, [ebp-04H]
       pop      esi
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 3.50

; Total bytes of code 81, prolog size 10, PerfScore 33.95, (MethodHash=6103cc76) for method JITTest.ScalarHalf:Subtract(System.Half,System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Multiply(System.Half,System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V06 tmp4         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V08 tmp6         [V08,T07] (  2,  4   )   float  ->  [ebp-0x08]   "non-inline candidate call"
;  V09 tmp7         [V09,T05] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V10 tmp8         [V10,T06] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V11 tmp9         [V11,T01] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T02] (  2,  2   )  ushort  ->  esi         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T03] (  2,  2   )  ushort  ->  eax         V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;  V14 tmp12        [V14,T04] (  2,  2   )  ushort  ->  esi         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x0C]
;
; Lcl frame size = 8

G_M16593_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 3.50
G_M16593_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    esi, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vmovss   dword ptr [ebp-08H], xmm0
       push     esi
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vmulss   xmm0, xmm0, dword ptr [ebp-08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 18.25
G_M16593_IG03:
       lea      esp, [ebp-04H]
       pop      esi
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 3.50

; Total bytes of code 77, prolog size 10, PerfScore 33.45, (MethodHash=1557bf2e) for method JITTest.ScalarHalf:Multiply(System.Half,System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Divide(System.Half,System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V06 tmp4         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V08 tmp6         [V08,T07] (  2,  4   )   float  ->  [ebp-0x08]   "non-inline candidate call"
;  V09 tmp7         [V09,T05] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V10 tmp8         [V10,T06] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V11 tmp9         [V11,T01] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T02] (  2,  2   )  ushort  ->  esi         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T03] (  2,  2   )  ushort  ->  eax         V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;  V14 tmp12        [V14,T04] (  2,  2   )  ushort  ->  esi         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x0C]
;
; Lcl frame size = 8

G_M26926_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 3.50
G_M26926_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    esi, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vmovss   dword ptr [ebp-08H], xmm0
       push     esi
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm1, dword ptr [ebp-08H]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vdivss   xmm0, xmm1, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 25.25
G_M26926_IG03:
       lea      esp, [ebp-04H]
       pop      esi
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 3.50

; Total bytes of code 81, prolog size 10, PerfScore 40.95, (MethodHash=108396d1) for method JITTest.ScalarHalf:Divide(System.Half,System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Min(System.Half,System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V02 tmp0         [V02,T00] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V03 tmp1         [V03,T01] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;
; Lcl frame size = 0

G_M33079_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M33079_IG02:
       mov      eax, dword ptr [ebp+0CH]
       push     eax
       mov      eax, dword ptr [ebp+08H]
       push     eax
       call     Silk.NET.Maths.Scalar:Min(System.Half,System.Half):System.Half
						;; bbWeight=1    PerfScore 5.00
G_M33079_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 20, prolog size 3, PerfScore 10.75, (MethodHash=319e7ec8) for method JITTest.ScalarHalf:Min(System.Half,System.Half):System.Half
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Min(System.Half,System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V02 tmp0         [V02,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T06] (  8,  8   )   float  ->  [ebp-0x08]   "non-inline candidate call"
;  V06 tmp4         [V06,T08] (  5,  3   )   float  ->  mm0         "Inline return value spill temp"
;  V07 tmp5         [V07,T07] (  5,  6.50)   float  ->  mm0         "Inlining Arg"
;  V08 tmp6         [V08,T05] (  2,  0.50)     int  ->  eax         "Inline return value spill temp"
;* V09 tmp7         [V09    ] (  0,  0   )   float  ->  zero-ref    ld-addr-op "Inlining Arg"
;  V10 tmp8         [V10,T09] (  2,  0.50)  simd16  ->  mm2         "Inline stloc first use temp"
;  V11 tmp9         [V11,T03] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T04] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T01] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V14 tmp12        [V14,T02] (  2,  2   )  ushort  ->  esi         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x0C]
;
; Lcl frame size = 8

G_M54452_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 3.50
G_M54452_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    esi, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vmovss   dword ptr [ebp-08H], xmm0
       push     esi
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vmovss   xmm1, dword ptr [ebp-08H]
       vucomiss xmm1, xmm0
       jp       SHORT G_M54452_IG03
       je       SHORT G_M54452_IG06
						;; bbWeight=1    PerfScore 16.50
G_M54452_IG03:
       vucomiss xmm1, xmm1
       jp       SHORT G_M54452_IG06
       vucomiss xmm0, xmm1
       ja       SHORT G_M54452_IG05
						;; bbWeight=0.25 PerfScore 1.00
G_M54452_IG04:
       jmp      SHORT G_M54452_IG09
						;; bbWeight=0.50 PerfScore 1.00
G_M54452_IG05:
       vmovaps  xmm0, xmm1
       jmp      SHORT G_M54452_IG09
						;; bbWeight=0.50 PerfScore 1.12
G_M54452_IG06:
       vmovaps  xmm2, xmm1
       vmovd    eax, xmm2
       test     eax, eax
       jl       SHORT G_M54452_IG08
						;; bbWeight=0.25 PerfScore 0.62
G_M54452_IG07:
       jmp      SHORT G_M54452_IG09
						;; bbWeight=0.50 PerfScore 1.00
G_M54452_IG08:
       vmovaps  xmm0, xmm1
						;; bbWeight=0.50 PerfScore 0.12
G_M54452_IG09:
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 1.75
G_M54452_IG10:
       lea      esp, [ebp-04H]
       pop      esi
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 3.50

; Total bytes of code 123, prolog size 10, PerfScore 43.63, (MethodHash=80ea2b4b) for method Silk.NET.Maths.Scalar:Min(System.Half,System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Max(System.Half,System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V02 tmp0         [V02,T00] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V03 tmp1         [V03,T01] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;
; Lcl frame size = 0

G_M59113_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M59113_IG02:
       mov      eax, dword ptr [ebp+0CH]
       push     eax
       mov      eax, dword ptr [ebp+08H]
       push     eax
       call     Silk.NET.Maths.Scalar:Max(System.Half,System.Half):System.Half
						;; bbWeight=1    PerfScore 5.00
G_M59113_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 20, prolog size 3, PerfScore 10.75, (MethodHash=3fd21916) for method JITTest.ScalarHalf:Max(System.Half,System.Half):System.Half
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Max(System.Half,System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V02 tmp0         [V02,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T06] (  8,  8.50)   float  ->  [ebp-0x08]   "non-inline candidate call"
;  V06 tmp4         [V06,T08] (  6,  3.50)   float  ->  mm0         "Inline return value spill temp"
;  V07 tmp5         [V07,T07] (  6,  7   )   float  ->  mm0         "Inlining Arg"
;  V08 tmp6         [V08,T05] (  2,  0.50)     int  ->  eax         "Inline return value spill temp"
;* V09 tmp7         [V09    ] (  0,  0   )   float  ->  zero-ref    ld-addr-op "Inlining Arg"
;  V10 tmp8         [V10,T09] (  2,  0.50)  simd16  ->  mm2         "Inline stloc first use temp"
;  V11 tmp9         [V11,T03] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T04] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T01] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V14 tmp12        [V14,T02] (  2,  2   )  ushort  ->  esi         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x0C]
;
; Lcl frame size = 8

G_M21738_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 3.50
G_M21738_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    esi, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vmovss   dword ptr [ebp-08H], xmm0
       push     esi
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-0CH]
       vmovss   xmm0, dword ptr [ebp-0CH]
       vmovss   xmm1, dword ptr [ebp-08H]
       vucomiss xmm1, xmm0
       jp       SHORT G_M21738_IG03
       je       SHORT G_M21738_IG07
						;; bbWeight=1    PerfScore 16.50
G_M21738_IG03:
       vucomiss xmm1, xmm1
       jp       SHORT G_M21738_IG06
       vucomiss xmm1, xmm0
       ja       SHORT G_M21738_IG05
						;; bbWeight=0.25 PerfScore 1.00
G_M21738_IG04:
       jmp      SHORT G_M21738_IG10
						;; bbWeight=0.50 PerfScore 1.00
G_M21738_IG05:
       vmovaps  xmm0, xmm1
       jmp      SHORT G_M21738_IG10
						;; bbWeight=0.50 PerfScore 1.12
G_M21738_IG06:
       vmovaps  xmm0, xmm1
       jmp      SHORT G_M21738_IG10
						;; bbWeight=0.50 PerfScore 1.12
G_M21738_IG07:
       vmovaps  xmm2, xmm0
       vmovd    eax, xmm2
       test     eax, eax
       jl       SHORT G_M21738_IG09
						;; bbWeight=0.25 PerfScore 0.62
G_M21738_IG08:
       jmp      SHORT G_M21738_IG10
						;; bbWeight=0.50 PerfScore 1.00
G_M21738_IG09:
       vmovaps  xmm0, xmm1
						;; bbWeight=0.50 PerfScore 0.12
G_M21738_IG10:
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 1.75
G_M21738_IG11:
       lea      esp, [ebp-04H]
       pop      esi
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 3.50

; Total bytes of code 129, prolog size 10, PerfScore 45.45, (MethodHash=36e9ab15) for method Silk.NET.Maths.Scalar:Max(System.Half,System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Larger(System.Half,System.Half):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;* V06 tmp4         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V08 tmp6         [V08    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V09 tmp7         [V09    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V10 tmp8         [V10,T07] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V11 tmp9         [V11,T08] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T01] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T02] (  2,  2   )  ushort  ->  edx         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  V14 tmp12        [V14,T03] (  2,  2   )  ushort  ->  eax         V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;  V15 tmp13        [V15,T04] (  2,  2   )  ushort  ->  edx         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;  V16 tmp14        [V16,T05] (  2,  2   )  ushort  ->  edx         V08._value(offs=0x00) P-INDEP "field V08._value (fldOffset=0x0)"
;  V17 tmp15        [V17,T06] (  2,  2   )  ushort  ->  eax         V09._value(offs=0x00) P-INDEP "field V09._value (fldOffset=0x0)"
;
; Lcl frame size = 0

G_M61364_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M61364_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    edx, word  ptr [ebp+08H]
       push     edx
       push     eax
       call     System.Half:op_LessThan(System.Half,System.Half):bool
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M61364_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=945b104b) for method JITTest.ScalarHalf:Larger(System.Half,System.Half):bool
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Smaller(System.Half,System.Half):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;* V06 tmp4         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V08 tmp6         [V08,T05] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V09 tmp7         [V09,T06] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V10 tmp8         [V10,T01] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V11 tmp9         [V11,T02] (  2,  2   )  ushort  ->  edx         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T03] (  2,  2   )  ushort  ->  eax         V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T04] (  2,  2   )  ushort  ->  edx         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;
; Lcl frame size = 0

G_M14547_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M14547_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    edx, word  ptr [ebp+08H]
       push     eax
       push     edx
       call     System.Half:op_LessThan(System.Half,System.Half):bool
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M14547_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=d1b3c72c) for method JITTest.ScalarHalf:Smaller(System.Half,System.Half):bool
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:LargerEquals(System.Half,System.Half):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;* V06 tmp4         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V08 tmp6         [V08    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V09 tmp7         [V09    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V10 tmp8         [V10,T07] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V11 tmp9         [V11,T08] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T01] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T02] (  2,  2   )  ushort  ->  edx         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  V14 tmp12        [V14,T03] (  2,  2   )  ushort  ->  eax         V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;  V15 tmp13        [V15,T04] (  2,  2   )  ushort  ->  edx         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;  V16 tmp14        [V16,T05] (  2,  2   )  ushort  ->  edx         V08._value(offs=0x00) P-INDEP "field V08._value (fldOffset=0x0)"
;  V17 tmp15        [V17,T06] (  2,  2   )  ushort  ->  eax         V09._value(offs=0x00) P-INDEP "field V09._value (fldOffset=0x0)"
;
; Lcl frame size = 0

G_M39755_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M39755_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    edx, word  ptr [ebp+08H]
       push     edx
       push     eax
       call     System.Half:op_LessThanOrEqual(System.Half,System.Half):bool
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M39755_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=cff164b4) for method JITTest.ScalarHalf:LargerEquals(System.Half,System.Half):bool
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:SmallerEquals(System.Half,System.Half):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;* V06 tmp4         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V08 tmp6         [V08,T05] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V09 tmp7         [V09,T06] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V10 tmp8         [V10,T01] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V11 tmp9         [V11,T02] (  2,  2   )  ushort  ->  edx         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T03] (  2,  2   )  ushort  ->  eax         V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T04] (  2,  2   )  ushort  ->  edx         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;
; Lcl frame size = 0

G_M748_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M748_IG02:
       movzx    eax, word  ptr [ebp+0CH]
       movzx    edx, word  ptr [ebp+08H]
       push     eax
       push     edx
       call     System.Half:op_LessThanOrEqual(System.Half,System.Half):bool
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.25
G_M748_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 25, prolog size 3, PerfScore 11.50, (MethodHash=c272fd13) for method JITTest.ScalarHalf:SmallerEquals(System.Half,System.Half):bool
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Clamp(System.Half,System.Half,System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V02 arg2         [V02    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V03 tmp0         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp1         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V05 tmp2         [V05    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V06 tmp3         [V06    ] (  2,  4   )  struct ( 4) [ebp-0x08]   do-not-enreg[SF] "struct address for call/obj"
;  V07 tmp4         [V07,T03] (  1,  1   )  ushort  ->  [ebp+0x10]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V08 tmp5         [V08,T04] (  1,  1   )  ushort  ->  [ebp+0x0C]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V09 tmp6         [V09,T05] (  1,  1   )  ushort  ->  [ebp+0x08]   V02._value(offs=0x00) P-DEP "field V02._value (fldOffset=0x0)"
;  V10 tmp7         [V10,T00] (  2,  2   )  ushort  ->  eax         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V11 tmp8         [V11,T01] (  2,  2   )  ushort  ->  edx         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  V12 tmp9         [V12,T02] (  2,  2   )  ushort  ->  esi         V05._value(offs=0x00) P-INDEP "field V05._value (fldOffset=0x0)"
;  V13 tmp10        [V13    ] (  2,  4   )  ushort  ->  [ebp-0x08]   do-not-enreg[] V06._value(offs=0x00) P-DEP "field V06._value (fldOffset=0x0)"
;
; Lcl frame size = 4

G_M2250_IG01:
       push     ebp
       mov      ebp, esp
       push     esi
       push     eax
						;; bbWeight=1    PerfScore 3.25
G_M2250_IG02:
       movzx    eax, word  ptr [ebp+10H]
       movzx    edx, word  ptr [ebp+0CH]
       movzx    esi, word  ptr [ebp+08H]
       push     eax
       push     edx
       call     Silk.NET.Maths.Scalar:Max(System.Half,System.Half):System.Half
       mov      word  ptr [ebp-08H], ax
       mov      eax, dword ptr [ebp-08H]
       push     eax
       push     esi
       call     Silk.NET.Maths.Scalar:Min(System.Half,System.Half):System.Half
						;; bbWeight=1    PerfScore 11.00
G_M2250_IG03:
       pop      ecx
       pop      esi
       pop      ebp
       ret      12
						;; bbWeight=1    PerfScore 3.50

; Total bytes of code 44, prolog size 5, PerfScore 22.15, (MethodHash=a1d5f735) for method JITTest.ScalarHalf:Clamp(System.Half,System.Half,System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Negate(System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  1,  1   )  ushort  ->  [ebp+0x08]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;
; Lcl frame size = 0

G_M28005_IG01:
       push     ebp
       mov      ebp, esp
						;; bbWeight=1    PerfScore 1.25
G_M28005_IG02:
       mov      eax, dword ptr [ebp+08H]
       push     eax
       call     Silk.NET.Maths.Scalar:Negate(System.Half):System.Half
						;; bbWeight=1    PerfScore 3.00
G_M28005_IG03:
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 16, prolog size 3, PerfScore 8.35, (MethodHash=ccc8929a) for method JITTest.ScalarHalf:Negate(System.Half):System.Half
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Negate(System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V01 loc0         [V01    ] (  0,  0   )  struct ( 4) zero-ref    ld-addr-op
;  V02 tmp0         [V02,T00] (  1,  1   )  ushort  ->  [ebp+0x08]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;* V03 tmp1         [V03    ] (  0,  0   )  ushort  ->  zero-ref    V01._value(offs=0x00) P-INDEP "field V01._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M11590_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M11590_IG02:
       mov      eax, dword ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   xmm1, dword ptr [@RWD00]
       vxorps   xmm0, xmm1
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 9.58
G_M11590_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75
RWD00  dd	80000000h


; Total bytes of code 55, prolog size 7, PerfScore 21.48, (MethodHash=8889d2b9) for method Silk.NET.Maths.Scalar:Negate(System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Equal(System.Half,System.Half):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x0C]  
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;* V03 tmp1         [V03    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;* V06 tmp4         [V06    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V08 tmp6         [V08    ] (  2,  4   )  struct ( 4) [ebp-0x04]   do-not-enreg[XS] addr-exposed ld-addr-op "Inlining Arg"
;* V09 tmp7         [V09    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V10 tmp8         [V10,T06] (  1,  1   )  ushort  ->  [ebp+0x0C]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V11 tmp9         [V11,T07] (  1,  1   )  ushort  ->  [ebp+0x08]   V01._value(offs=0x00) P-DEP "field V01._value (fldOffset=0x0)"
;  V12 tmp10        [V12,T01] (  2,  2   )  ushort  ->  ecx         V03._value(offs=0x00) P-INDEP "field V03._value (fldOffset=0x0)"
;  V13 tmp11        [V13,T02] (  2,  2   )  ushort  ->  eax         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  V14 tmp12        [V14,T03] (  2,  2   )  ushort  ->  ecx         V06._value(offs=0x00) P-INDEP "field V06._value (fldOffset=0x0)"
;  V15 tmp13        [V15,T04] (  2,  2   )  ushort  ->  eax         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;  V16 tmp14        [V16    ] (  2,  3   )  ushort  ->  [ebp-0x04]   do-not-enreg[X] addr-exposed V08._value(offs=0x00) P-DEP "field V08._value (fldOffset=0x0)"
;  V17 tmp15        [V17,T05] (  2,  2   )  ushort  ->  eax         V09._value(offs=0x00) P-INDEP "field V09._value (fldOffset=0x0)"
;
; Lcl frame size = 4

G_M21591_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
						;; bbWeight=1    PerfScore 2.25
G_M21591_IG02:
       movzx    ecx, word  ptr [ebp+0CH]
       movzx    eax, word  ptr [ebp+08H]
       mov      word  ptr [ebp-04H], cx
       push     eax
       lea      ecx, bword ptr [ebp-04H]
       call     System.Half:Equals(System.Half):bool:this
       movzx    eax, al
						;; bbWeight=1    PerfScore 5.75
G_M21591_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 34, prolog size 4, PerfScore 14.15, (MethodHash=5104aba8) for method JITTest.ScalarHalf:Equal(System.Half,System.Half):bool
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Acos(System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T02] (  1,  1   )  ushort  ->  [ebp+0x08]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V04 tmp3         [V04,T01] (  2,  2   )  ushort  ->  eax         V02._value(offs=0x00) P-INDEP "field V02._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M27079_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M27079_IG02:
       movzx    eax, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Acos(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 11.50
G_M27079_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 65, prolog size 7, PerfScore 24.40, (MethodHash=7eca9638) for method JITTest.ScalarHalf:Acos(System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Abs(System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )   short  ->  zero-ref    "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V04 tmp3         [V04    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V05 tmp4         [V05,T04] (  2,  4   )   float  ->  mm0         "Inlining Arg"
;  V06 tmp5         [V06,T03] (  1,  1   )  ushort  ->  [ebp+0x08]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V07 tmp6         [V07,T01] (  2,  2   )  ushort  ->  eax         V02._value(offs=0x00) P-INDEP "field V02._value (fldOffset=0x0)"
;  V08 tmp7         [V08,T02] (  2,  2   )  ushort  ->  eax         V04._value(offs=0x00) P-INDEP "field V04._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M25289_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M25289_IG02:
       movzx    eax, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   xmm1, dword ptr [@RWD00]
       vandps   xmm0, xmm1
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 9.58
G_M25289_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75
RWD00  dd	7FFFFFFFh


; Total bytes of code 56, prolog size 7, PerfScore 21.58, (MethodHash=adc49d36) for method JITTest.ScalarHalf:Abs(System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Sin(System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T02] (  1,  1   )  ushort  ->  [ebp+0x08]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V04 tmp3         [V04,T01] (  2,  2   )  ushort  ->  eax         V02._value(offs=0x00) P-INDEP "field V02._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M17517_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M17517_IG02:
       movzx    eax, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Sin_Ported(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 11.50
G_M17517_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 65, prolog size 7, PerfScore 24.40, (MethodHash=5682bb92) for method JITTest.ScalarHalf:Sin(System.Half):System.Half
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Sin_Ported(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T16] (  9,  5   )   float  ->  mm0        
;  V01 loc0         [V01,T15] ( 14,  7   )  double  ->  mm0        
;  V02 loc1         [V02,T29] (  5,  2.50)  double  ->  mm1        
;  V03 loc2         [V03,T00] (  6,  3   )     int  ->  esi        
;  V04 loc3         [V04    ] ( 13,  6.50)     int  ->  [ebp-0x0C]   do-not-enreg[X] must-init addr-exposed ld-addr-op
;  V05 loc4         [V05,T08] (  2,  1   )     int  ->  esi        
;  V06 loc5         [V06,T30] (  5,  2.50)  double  ->  mm1        
;  V07 loc6         [V07,T21] (  6,  3   )  double  ->  mm0        
;  V08 loc7         [V08,T19] (  7,  3.50)  double  ->  mm2        
;  V09 loc8         [V09,T14] ( 19,  9.50)  double  ->  mm3        
;* V10 loc9         [V10    ] (  0,  0   )    long  ->  zero-ref   
;  V11 loc10        [V11,T20] (  7,  3.50)  double  ->  mm0        
;  V12 tmp0         [V12,T04] (  2,  2   )     int  ->  eax         "impSpillLclRefs"
;* V13 tmp1         [V13    ] (  0,  0   )    long  ->  zero-ref    "Local could be aliased or is pinned"
;* V14 tmp2         [V14    ] (  0,  0   )     int  ->  zero-ref    "Inline stloc first use temp"
;  V15 tmp3         [V15,T05] (  2,  2   )     int  ->  ecx         "Inline return value spill temp"
;* V16 tmp4         [V16    ] (  0,  0   )   float  ->  zero-ref    ld-addr-op "Inlining Arg"
;  V17 tmp5         [V17,T32] (  2,  2   )  simd16  ->  mm1         "Inline stloc first use temp"
;  V18 tmp6         [V18,T17] (  5,  5   )  double  ->  mm1         "Inlining Arg"
;  V19 tmp7         [V19,T22] (  6,  3   )  double  ->  mm0         "Inline stloc first use temp"
;  V20 tmp8         [V20,T35] (  2,  1   )  double  ->  mm2         "Inline stloc first use temp"
;  V21 tmp9         [V21,T36] (  2,  1   )  double  ->  mm3         "Inline stloc first use temp"
;  V22 tmp10        [V22,T18] (  5,  5   )  double  ->  mm0         "Inlining Arg"
;  V23 tmp11        [V23,T37] (  2,  1   )  double  ->  mm1         "Inline stloc first use temp"
;  V24 tmp12        [V24,T09] (  2,  1   )     int  ->  ecx         "Inline return value spill temp"
;* V25 tmp13        [V25    ] (  0,  0   )   float  ->  zero-ref    ld-addr-op "Inlining Arg"
;  V26 tmp14        [V26,T38] (  2,  1   )  simd16  ->  mm2         "Inline stloc first use temp"
;* V27 tmp15        [V27    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V28 tmp16        [V28,T27] (  2,  2   )  double  ->  [ebp-0x14]   do-not-enreg[F] ld-addr-op "Inlining Arg"
;* V29 tmp17        [V29    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V30 tmp18        [V30,T28] (  3,  3   )  double  ->  [ebp-0x1C]   do-not-enreg[F] ld-addr-op "Inlining Arg"
;  V31 tmp19        [V31,T23] (  6,  3   )  double  ->  mm0         "Inline stloc first use temp"
;  V32 tmp20        [V32,T39] (  2,  1   )  double  ->  mm1         "Inline stloc first use temp"
;  V33 tmp21        [V33,T40] (  2,  1   )  double  ->  mm2         "Inline stloc first use temp"
;  V34 tmp22        [V34,T24] (  6,  3   )  double  ->  mm0         "Inline stloc first use temp"
;  V35 tmp23        [V35,T33] (  3,  1.50)  double  ->  mm3         "Inline stloc first use temp"
;  V36 tmp24        [V36,T41] (  2,  1   )  double  ->  mm0         "Inline stloc first use temp"
;  V37 tmp25        [V37,T42] (  2,  1   )  double  ->  mm0         "Inline stloc first use temp"
;  V38 tmp26        [V38,T25] (  6,  3   )  double  ->  mm1         "Inline stloc first use temp"
;  V39 tmp27        [V39,T43] (  2,  1   )  double  ->  mm2         "Inline stloc first use temp"
;  V40 tmp28        [V40,T44] (  2,  1   )  double  ->  mm3         "Inline stloc first use temp"
;  V41 tmp29        [V41,T26] (  6,  3   )  double  ->  mm0         "Inline stloc first use temp"
;  V42 tmp30        [V42,T34] (  3,  1.50)  double  ->  mm1         "Inline stloc first use temp"
;  V43 cse0         [V43,T31] (  5,  2.50)  double  ->  mm0         "CSE - moderate"
;  V44 rat0         [V44,T02] (  4,  2   )     int  ->  edx         V10.lo(offs=0x00) "field V10.lo (fldOffset=0x0)"
;  V45 rat1         [V45,T03] (  4,  2   )     int  ->  edi         V10.hi(offs=0x04) "field V10.hi (fldOffset=0x4)"
;  V46 rat2         [V46,T10] (  2,  1   )     int  ->  eax         V13.lo(offs=0x00) "field V13.lo (fldOffset=0x0)"
;  V47 rat3         [V47,T11] (  2,  1   )     int  ->  ecx         V13.hi(offs=0x04) "field V13.hi (fldOffset=0x4)"
;* V48 rat4         [V48,T13] (  0,  0   )     int  ->  zero-ref    V27.lo(offs=0x00) "field V27.lo (fldOffset=0x0)"
;  V49 rat5         [V49,T06] (  3,  1.50)     int  ->  ecx         V27.hi(offs=0x04) "field V27.hi (fldOffset=0x4)"
;  V50 rat6         [V50,T07] (  2,  1   )     int  ->  edx         V29.lo(offs=0x00) "field V29.lo (fldOffset=0x0)"
;  V51 rat7         [V51,T12] (  2,  1   )     int  ->  edi         V29.hi(offs=0x04) "field V29.hi (fldOffset=0x4)"
;  V52 rat8         [V52,T01] (  3,  3   )     int  ->  edi         "ReplaceWithLclVar is creating a new local variable"
;  TEMP_01                                   float  ->  [ebp-0x20]
;  TEMP_02                                  double  ->  [ebp-0x28]
;
; Lcl frame size = 32

G_M19657_IG01:
       push     ebp
       mov      ebp, esp
       push     edi
       push     esi
       sub      esp, 32
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-0CH], eax
       vmovss   xmm0, dword ptr [ebp+08H]
						;; bbWeight=1    PerfScore 7.75
G_M19657_IG02:
       vmovaps  xmm1, xmm0
       vmovd    ecx, xmm1
       and      ecx, 0xD1FFAB1E
       cmp      ecx, 0xD1FFAB1E
       jge      G_M19657_IG19
						;; bbWeight=1    PerfScore 2.75
G_M19657_IG03:
       vmovss   xmm1, dword ptr [@RWD00]
       vandps   xmm1, xmm0
       vcvtss2sd xmm1, xmm1
       vmovsd   xmm2, qword ptr [@RWD08]
       vucomisd xmm2, xmm1
       jb       G_M19657_IG06
       vucomisd xmm1, qword ptr [@RWD24]
       jb       SHORT G_M19657_IG04
       vcvtss2sd xmm1, xmm0
       vmulsd   xmm0, xmm1, xmm1
       vmulsd   xmm2, xmm0, xmm1
       vmulsd   xmm3, xmm0, xmm0
       vmulsd   xmm4, xmm0, qword ptr [@RWD40]
       vaddsd   xmm4, xmm4, qword ptr [@RWD56]
       vmulsd   xmm3, xmm3, xmm4
       vmulsd   xmm0, xmm0, qword ptr [@RWD72]
       vaddsd   xmm0, xmm0, qword ptr [@RWD88]
       vaddsd   xmm0, xmm3, xmm0
       vmulsd   xmm0, xmm0, xmm2
       vaddsd   xmm0, xmm0, xmm1
       jmp      G_M19657_IG17
						;; bbWeight=0.50 PerfScore 29.67
G_M19657_IG04:
       vucomisd xmm1, qword ptr [@RWD104]
       jb       SHORT G_M19657_IG05
       vcvtss2sd xmm0, xmm0
       vmulsd   xmm1, xmm0, xmm0
       vmulsd   xmm1, xmm1, xmm0
       vmulsd   xmm1, xmm1, qword ptr [@RWD120]
       vaddsd   xmm0, xmm0, xmm1
       jmp      G_M19657_IG17
						;; bbWeight=0.50 PerfScore 11.00
G_M19657_IG05:
       vcvtss2sd xmm0, xmm0
       jmp      G_M19657_IG17
						;; bbWeight=0.50 PerfScore 3.00
G_M19657_IG06:
       xor      esi, esi
       vmovaps  xmm2, xmm0
       vmovd    ecx, xmm2
       test     ecx, ecx
       jge      SHORT G_M19657_IG07
       vmovss   xmm2, dword ptr [@RWD128]
       vxorps   xmm0, xmm2
       mov      esi, 1
						;; bbWeight=0.50 PerfScore 2.67
G_M19657_IG07:
       vcvtss2sd xmm0, xmm0
       vmovsd   xmm2, qword ptr [@RWD136]
       vucomisd xmm2, xmm0
       jbe      G_M19657_IG14
       vmovsd   qword ptr [ebp-14H], xmm1
       mov      ecx, dword ptr [ebp-10H]
       mov      eax, ecx
       sar      eax, 20
       sar      ecx, 31
       vmulsd   xmm1, xmm0, qword ptr [@RWD152]
       vaddsd   xmm1, xmm1, qword ptr [@RWD168]
       vcvttsd2si  edx, xmm1
       mov      dword ptr [ebp-0CH], edx
       vxorps   xmm1, xmm1
       vcvtsi2sd xmm1, dword ptr [ebp-0CH]
       vmulsd   xmm2, xmm1, qword ptr [@RWD184]
       vsubsd   xmm0, xmm0, xmm2
       vmulsd   xmm2, xmm1, qword ptr [@RWD200]
       vsubsd   xmm3, xmm0, xmm2
       vmovsd   qword ptr [ebp-1CH], xmm3
       mov      edx, dword ptr [ebp-1CH]
       mov      edi, dword ptr [ebp-18H]
       shld     edi, edx, 1
       mov      edx, edi
       sar      edx, 21
       sar      edi, 31
       sub      eax, edx
       sbb      ecx, edi
       cmp      eax, 16
       sbb      ecx, 0
       jl       SHORT G_M19657_IG08
       vmovaps  xmm3, xmm0
       vmulsd   xmm2, xmm1, qword ptr [@RWD216]
       vsubsd   xmm0, xmm3, xmm2
       vsubsd   xmm3, xmm3, xmm0
       vsubsd   xmm2, xmm3, xmm2
       vmulsd   xmm1, xmm1, qword ptr [@RWD232]
       vsubsd   xmm2, xmm1, xmm2
       vsubsd   xmm3, xmm0, xmm2
						;; bbWeight=0.50 PerfScore 44.54
G_M19657_IG08:
       cmp      edx, 0x3F2
       mov      ecx, edi
       sbb      ecx, 0
       jl       G_M19657_IG10
       test     byte  ptr [ebp-0CH], 1
       jne      SHORT G_M19657_IG09
       vmulsd   xmm0, xmm3, xmm3
       vmulsd   xmm1, xmm0, xmm3
       vmulsd   xmm2, xmm0, xmm0
       vmulsd   xmm4, xmm0, qword ptr [@RWD248]
       vaddsd   xmm4, xmm4, qword ptr [@RWD264]
       vmulsd   xmm2, xmm2, xmm4
       vmulsd   xmm0, xmm0, qword ptr [@RWD280]
       vaddsd   xmm0, xmm0, qword ptr [@RWD296]
       vaddsd   xmm0, xmm2, xmm0
       vmulsd   xmm0, xmm0, xmm1
       vaddsd   xmm0, xmm0, xmm3
       jmp      G_M19657_IG16
						;; bbWeight=0.50 PerfScore 23.38
G_M19657_IG09:
       vmulsd   xmm0, xmm3, xmm3
       vmulsd   xmm3, xmm0, xmm0
       vmulsd   xmm1, xmm0, qword ptr [@RWD312]
       vaddsd   xmm1, xmm1, qword ptr [@RWD328]
       vmulsd   xmm1, xmm3, xmm1
       vmulsd   xmm2, xmm0, qword ptr [@RWD344]
       vaddsd   xmm2, xmm2, qword ptr [@RWD360]
       vaddsd   xmm1, xmm1, xmm2
       vmulsd   xmm1, xmm3, xmm1
       vmulsd   xmm0, xmm0, qword ptr [@RWD376]
       vaddsd   xmm0, xmm0, qword ptr [@RWD392]
       vaddsd   xmm0, xmm1, xmm0
       jmp      G_M19657_IG16
						;; bbWeight=0.50 PerfScore 25.00
G_M19657_IG10:
       cmp      edx, 991
       sbb      edi, 0
       jl       SHORT G_M19657_IG12
       test     byte  ptr [ebp-0CH], 1
       jne      SHORT G_M19657_IG11
       vmulsd   xmm0, xmm3, xmm3
       vmulsd   xmm0, xmm0, xmm3
       vmulsd   xmm0, xmm0, qword ptr [@RWD408]
       vaddsd   xmm0, xmm3, xmm0
       jmp      G_M19657_IG16
						;; bbWeight=0.50 PerfScore 9.75
G_M19657_IG11:
       vmulsd   xmm0, xmm3, xmm3
       vmulsd   xmm3, xmm0, qword ptr [@RWD424]
       vaddsd   xmm0, xmm3, qword ptr [@RWD440]
       jmp      G_M19657_IG16
						;; bbWeight=0.50 PerfScore 7.50
G_M19657_IG12:
       test     byte  ptr [ebp-0CH], 1
       jne      SHORT G_M19657_IG13
       vmovaps  xmm0, xmm3
       jmp      G_M19657_IG16
						;; bbWeight=0.50 PerfScore 2.12
G_M19657_IG13:
       vmovsd   xmm0, qword ptr [@RWD456]
       jmp      G_M19657_IG16
						;; bbWeight=0.50 PerfScore 2.00
G_M19657_IG14:
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       lea      ecx, [ebp-0CH]
       call     Silk.NET.Maths.Scalar:<Sin_Ported>g__ReduceForLargeInput|79_2(double,byref):double
       fstp     qword ptr [ebp-28H]
       vmovsd   xmm0, qword ptr [ebp-28H]
       test     byte  ptr [ebp-0CH], 1
       jne      SHORT G_M19657_IG15
       vmulsd   xmm1, xmm0, xmm0
       vmulsd   xmm2, xmm1, xmm0
       vmulsd   xmm3, xmm1, xmm1
       vmulsd   xmm4, xmm1, qword ptr [@RWD472]
       vaddsd   xmm4, xmm4, qword ptr [@RWD488]
       vmulsd   xmm3, xmm3, xmm4
       vmulsd   xmm1, xmm1, qword ptr [@RWD504]
       vaddsd   xmm1, xmm1, qword ptr [@RWD520]
       vaddsd   xmm1, xmm3, xmm1
       vmulsd   xmm1, xmm1, xmm2
       vaddsd   xmm0, xmm1, xmm0
       jmp      SHORT G_M19657_IG16
						;; bbWeight=0.50 PerfScore 24.88
G_M19657_IG15:
       vmulsd   xmm0, xmm0, xmm0
       vmulsd   xmm1, xmm0, xmm0
       vmulsd   xmm2, xmm0, qword ptr [@RWD536]
       vaddsd   xmm2, xmm2, qword ptr [@RWD552]
       vmulsd   xmm2, xmm1, xmm2
       vmulsd   xmm3, xmm0, qword ptr [@RWD568]
       vaddsd   xmm3, xmm3, qword ptr [@RWD584]
       vaddsd   xmm2, xmm2, xmm3
       vmulsd   xmm1, xmm1, xmm2
       vmulsd   xmm0, xmm0, qword ptr [@RWD600]
       vaddsd   xmm0, xmm0, qword ptr [@RWD616]
       vaddsd   xmm0, xmm1, xmm0
						;; bbWeight=0.50 PerfScore 24.00
G_M19657_IG16:
       mov      eax, dword ptr [ebp-0CH]
       sar      eax, 1
       mov      dword ptr [ebp-0CH], eax
       mov      eax, esi
       and      eax, dword ptr [ebp-0CH]
       mov      edx, dword ptr [ebp-0CH]
       not      edx
       mov      dword ptr [ebp-0CH], edx
       not      esi
       and      esi, dword ptr [ebp-0CH]
       or       eax, esi
       test     al, 1
       jne      SHORT G_M19657_IG17
       vmovsd   xmm1, qword ptr [@RWD632]
       vxorps   xmm0, xmm1
						;; bbWeight=0.50 PerfScore 5.54
G_M19657_IG17:
       vcvtsd2ss xmm0, xmm0
       vmovss   dword ptr [ebp-20H], xmm0
       fld      dword ptr [ebp-20H]
						;; bbWeight=0.50 PerfScore 2.50
G_M19657_IG18:
       lea      esp, [ebp-08H]
       pop      esi
       pop      edi
       pop      ebp
       ret      4
						;; bbWeight=0.50 PerfScore 2.00
G_M19657_IG19:
       vmovss   xmm0, dword ptr [@RWD640]
       vmovss   dword ptr [ebp-20H], xmm0
       fld      dword ptr [ebp-20H]
						;; bbWeight=0.50 PerfScore 1.50
G_M19657_IG20:
       lea      esp, [ebp-08H]
       pop      esi
       pop      edi
       pop      ebp
       ret      4
						;; bbWeight=0.50 PerfScore 2.00
RWD00  dd	7FFFFFFFh
RWD04  dd	00000000h
RWD08  dq	3FE921FB54442D18h
RWD16  dq	0000000000000000h
RWD24  dq	3F80000000000000h
RWD32  dq	0000000000000000h
RWD40  dq	3EC71DE3A556C734h
RWD48  dq	0000000000000000h
RWD56  dq	BF2A01A01A01A01Ah
RWD64  dq	0000000000000000h
RWD72  dq	3F81111111111111h
RWD80  dq	0000000000000000h
RWD88  dq	BFC5555555555555h
RWD96  dq	0000000000000000h
RWD104 dq	3F20000000000000h
RWD112 dq	0000000000000000h
RWD120 dq	BFC5555555555555h
RWD128 dd	80000000h
RWD132 dd	00000000h
RWD136 dq	416E848000000000h
RWD144 dq	0000000000000000h
RWD152 dq	3FE45F306DC9C883h
RWD160 dq	0000000000000000h
RWD168 dq	3FE0000000000000h
RWD176 dq	0000000000000000h
RWD184 dq	3FF921FB54400000h
RWD192 dq	0000000000000000h
RWD200 dq	3DD0B4611A626331h
RWD208 dq	0000000000000000h
RWD216 dq	3DD0B4611A600000h
RWD224 dq	0000000000000000h
RWD232 dq	3BA3198A2E037073h
RWD240 dq	0000000000000000h
RWD248 dq	3EC71DE3A556C734h
RWD256 dq	0000000000000000h
RWD264 dq	BF2A01A01A01A01Ah
RWD272 dq	0000000000000000h
RWD280 dq	3F81111111111111h
RWD288 dq	0000000000000000h
RWD296 dq	BFC5555555555555h
RWD304 dq	0000000000000000h
RWD312 dq	BE927E4FB7789F5Ch
RWD320 dq	0000000000000000h
RWD328 dq	3EFA01A01A01A01Ah
RWD336 dq	0000000000000000h
RWD344 dq	BF56C16C16C16C17h
RWD352 dq	0000000000000000h
RWD360 dq	3FA5555555555555h
RWD368 dq	0000000000000000h
RWD376 dq	BFE0000000000000h
RWD384 dq	0000000000000000h
RWD392 dq	3FF0000000000000h
RWD400 dq	0000000000000000h
RWD408 dq	BFC5555555555555h
RWD416 dq	0000000000000000h
RWD424 dq	3FA5555555555555h
RWD432 dq	0000000000000000h
RWD440 dq	3FF0000000000000h
RWD448 dq	0000000000000000h
RWD456 dq	3FF0000000000000h
RWD464 dq	0000000000000000h
RWD472 dq	3EC71DE3A556C734h
RWD480 dq	0000000000000000h
RWD488 dq	BF2A01A01A01A01Ah
RWD496 dq	0000000000000000h
RWD504 dq	3F81111111111111h
RWD512 dq	0000000000000000h
RWD520 dq	BFC5555555555555h
RWD528 dq	0000000000000000h
RWD536 dq	BE927E4FB7789F5Ch
RWD544 dq	0000000000000000h
RWD552 dq	3EFA01A01A01A01Ah
RWD560 dq	0000000000000000h
RWD568 dq	BF56C16C16C16C17h
RWD576 dq	0000000000000000h
RWD584 dq	3FA5555555555555h
RWD592 dq	0000000000000000h
RWD600 dq	BFE0000000000000h
RWD608 dq	0000000000000000h
RWD616 dq	3FF0000000000000h
RWD624 dq	0000000000000000h
RWD632 dq	8000000000000000h
RWD640 dd	FFC00000h


; Total bytes of code 922, prolog size 16, PerfScore 337.44, (MethodHash=fef4b336) for method Silk.NET.Maths.Scalar:Sin_Ported(float):float
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Sinh(System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T02] (  1,  1   )  ushort  ->  [ebp+0x08]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V04 tmp3         [V04,T01] (  2,  2   )  ushort  ->  eax         V02._value(offs=0x00) P-INDEP "field V02._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M48165_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M48165_IG02:
       movzx    eax, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Sinh(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 11.50
G_M48165_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 65, prolog size 7, PerfScore 24.40, (MethodHash=075043da) for method JITTest.ScalarHalf:Sinh(System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarHalf:Asin(System.Half):System.Half
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 4) [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   short  ->  eax         "Inline return value spill temp"
;* V02 tmp1         [V02    ] (  0,  0   )  struct ( 4) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T02] (  1,  1   )  ushort  ->  [ebp+0x08]   V00._value(offs=0x00) P-DEP "field V00._value (fldOffset=0x0)"
;  V04 tmp3         [V04,T01] (  2,  2   )  ushort  ->  eax         V02._value(offs=0x00) P-INDEP "field V02._value (fldOffset=0x0)"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M38444_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M38444_IG02:
       movzx    eax, word  ptr [ebp+08H]
       push     eax
       call     System.Half:op_Explicit(System.Half):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Asin(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Half:op_Explicit(float):System.Half
						;; bbWeight=1    PerfScore 11.50
G_M38444_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 65, prolog size 7, PerfScore 24.40, (MethodHash=bc1369d3) for method JITTest.ScalarHalf:Asin(System.Half):System.Half
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:EntryPoint()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V01 tmp1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V02 tmp2         [V02    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V03 tmp3         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V04 tmp4         [V04    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V05 tmp5         [V05    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V06 tmp6         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V07 tmp7         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V08 tmp8         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V09 tmp9         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V10 tmp10        [V10    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V11 tmp11        [V11    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V12 tmp12        [V12    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V13 tmp13        [V13    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V14 tmp14        [V14    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V15 tmp15        [V15    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V16 tmp16        [V16    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V17 tmp17        [V17    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V18 tmp18        [V18    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V19 tmp19        [V19    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V20 tmp20        [V20    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V21 tmp21        [V21    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V22 tmp22        [V22    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V23 tmp23        [V23    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V24 tmp24        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V25 tmp25        [V25    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V26 tmp26        [V26    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V27 tmp27        [V27    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V28 tmp28        [V28    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V29 tmp29        [V29    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V30 tmp30        [V30    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V31 tmp31        [V31    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V32 tmp32        [V32    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;  V33 EHSlots      [V33    ] (  1,  1   )     blk (16) [ebp-0x14]   do-not-enreg[X] must-init addr-exposed "lvaShadowSPslotsVar"
;  TEMP_01                                   float  ->  [ebp-0x18]
;
; Lcl frame size = 24

G_M50664_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 24
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-14H], eax
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], eax
       mov      dword ptr [ebp-08H], eax
						;; bbWeight=1    PerfScore 6.75
G_M50664_IG02:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Atan(float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG04
						;; bbWeight=1    PerfScore 6.58
G_M50664_IG03:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG04:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Atan2(float,float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG06
						;; bbWeight=1    PerfScore 7.33
G_M50664_IG05:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG06:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Cos(float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG08
						;; bbWeight=1    PerfScore 6.58
G_M50664_IG07:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG08:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Cosh(float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG10
						;; bbWeight=1    PerfScore 6.58
G_M50664_IG09:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG10:
       call     JITTest.ScalarFloat:One():float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG12
						;; bbWeight=1    PerfScore 5.50
G_M50664_IG11:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG12:
       call     JITTest.ScalarFloat:Two():float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG14
						;; bbWeight=1    PerfScore 5.50
G_M50664_IG13:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG14:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:IsNormal(float):bool
       jmp      SHORT G_M50664_IG16
						;; bbWeight=1    PerfScore 4.08
G_M50664_IG15:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG16:
       call     JITTest.ScalarFloat:Pi():float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG18
						;; bbWeight=1    PerfScore 5.50
G_M50664_IG17:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG18:
       call     JITTest.ScalarFloat:Tau():float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG20
						;; bbWeight=1    PerfScore 5.50
G_M50664_IG19:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG20:
       call     JITTest.ScalarFloat:HalfPi():float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG22
						;; bbWeight=1    PerfScore 5.50
G_M50664_IG21:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG22:
       call     JITTest.ScalarFloat:PositiveInfinity():float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG24
						;; bbWeight=1    PerfScore 5.50
G_M50664_IG23:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG24:
       call     JITTest.ScalarFloat:NegativeInfinity():float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG26
						;; bbWeight=1    PerfScore 5.50
G_M50664_IG25:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG26:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarFloat:As(double):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG28
						;; bbWeight=1    PerfScore 6.58
G_M50664_IG27:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG28:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:SquareRoot(float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG30
						;; bbWeight=1    PerfScore 6.58
G_M50664_IG29:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG30:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Add(float,float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG32
						;; bbWeight=1    PerfScore 7.33
G_M50664_IG31:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG32:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Mod(float,float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG34
						;; bbWeight=1    PerfScore 7.33
G_M50664_IG33:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG34:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Subtract(float,float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG36
						;; bbWeight=1    PerfScore 7.33
G_M50664_IG35:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG36:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Multiply(float,float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG38
						;; bbWeight=1    PerfScore 7.33
G_M50664_IG37:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG38:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Divide(float,float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG40
						;; bbWeight=1    PerfScore 7.33
G_M50664_IG39:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG40:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Min(float,float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG42
						;; bbWeight=1    PerfScore 7.33
G_M50664_IG41:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG42:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Max(float,float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG44
						;; bbWeight=1    PerfScore 7.33
G_M50664_IG43:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG44:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Larger(float,float):bool
       jmp      SHORT G_M50664_IG46
						;; bbWeight=1    PerfScore 4.83
G_M50664_IG45:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG46:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Smaller(float,float):bool
       jmp      SHORT G_M50664_IG48
						;; bbWeight=1    PerfScore 4.83
G_M50664_IG47:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG48:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:LargerEquals(float,float):bool
       jmp      SHORT G_M50664_IG50
						;; bbWeight=1    PerfScore 4.83
G_M50664_IG49:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG50:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:SmallerEquals(float,float):bool
       jmp      SHORT G_M50664_IG52
						;; bbWeight=1    PerfScore 4.83
G_M50664_IG51:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG52:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Clamp(float,float,float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG54
						;; bbWeight=1    PerfScore 8.08
G_M50664_IG53:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG54:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Negate(float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG56
						;; bbWeight=1    PerfScore 6.58
G_M50664_IG55:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG56:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Equal(float,float):bool
       jmp      SHORT G_M50664_IG58
						;; bbWeight=1    PerfScore 4.83
G_M50664_IG57:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG58:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Acos(float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG60
						;; bbWeight=1    PerfScore 6.58
G_M50664_IG59:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG60:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Abs(float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG62
						;; bbWeight=1    PerfScore 6.58
G_M50664_IG61:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG62:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Sin(float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG64
						;; bbWeight=1    PerfScore 6.58
G_M50664_IG63:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG64:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Sinh(float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG66
						;; bbWeight=1    PerfScore 6.58
G_M50664_IG65:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG66:
       vxorps   xmm0, xmm0
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     JITTest.ScalarFloat:Asin(float):float
       fstp     dword ptr [ebp-18H]
       vmovss   xmm0, dword ptr [ebp-18H]
       jmp      SHORT G_M50664_IG68
						;; bbWeight=1    PerfScore 6.58
G_M50664_IG67:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M50664_IG68:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75

; Total bytes of code 1071, prolog size 23, PerfScore 330.92, (MethodHash=ef6b3a17) for method JITTest.ScalarFloat:EntryPoint()
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Atan(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M42576_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M42576_IG02:
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Atan(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.25
G_M42576_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 47, prolog size 7, PerfScore 18.35, (MethodHash=521159af) for method JITTest.ScalarFloat:Atan(float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Atan2(float,float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;  V02 tmp0         [V02,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M23070_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M23070_IG02:
       vmovss   xmm0, dword ptr [ebp+0CH]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Atan2(float,float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 10.00
G_M23070_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 60, prolog size 7, PerfScore 22.60, (MethodHash=5633a5e1) for method JITTest.ScalarFloat:Atan2(float,float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Cos(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M41589_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M41589_IG02:
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Cos(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.25
G_M41589_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 47, prolog size 7, PerfScore 18.35, (MethodHash=11b85d8a) for method JITTest.ScalarFloat:Cos(float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Cosh(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M40253_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M40253_IG02:
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Cosh(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.25
G_M40253_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 47, prolog size 7, PerfScore 18.35, (MethodHash=a0a362c2) for method JITTest.ScalarFloat:Cosh(float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:One():float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M58558_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M58558_IG02:
       vmovss   xmm0, dword ptr [@RWD00]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 3.00
G_M58558_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dd	3F800000h


; Total bytes of code 27, prolog size 7, PerfScore 10.90, (MethodHash=a64e1b41) for method JITTest.ScalarFloat:One():float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Two():float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M21718_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M21718_IG02:
       vmovss   xmm0, dword ptr [@RWD00]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 3.00
G_M21718_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dd	40000000h


; Total bytes of code 27, prolog size 7, PerfScore 10.90, (MethodHash=b48eab29) for method JITTest.ScalarFloat:Two():float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:IsNormal(float):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M36733_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M36733_IG02:
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.Single:IsNormal(float):bool
       movzx    eax, al
						;; bbWeight=1    PerfScore 4.00
G_M36733_IG03:
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 31, prolog size 6, PerfScore 12.05, (MethodHash=03837082) for method JITTest.ScalarFloat:IsNormal(float):bool
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Pi():float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M47683_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M47683_IG02:
       vmovss   xmm0, dword ptr [@RWD00]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 3.00
G_M47683_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dd	40490FDBh


; Total bytes of code 27, prolog size 7, PerfScore 10.90, (MethodHash=b3c545bc) for method JITTest.ScalarFloat:Pi():float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Tau():float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M21786_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M21786_IG02:
       vmovss   xmm0, dword ptr [@RWD00]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 3.00
G_M21786_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dd	40C90FDBh


; Total bytes of code 27, prolog size 7, PerfScore 10.90, (MethodHash=a24caae5) for method JITTest.ScalarFloat:Tau():float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:HalfPi():float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M1952_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M1952_IG02:
       vmovss   xmm0, dword ptr [@RWD00]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 3.00
G_M1952_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dd	3FC90FDBh


; Total bytes of code 27, prolog size 7, PerfScore 10.90, (MethodHash=eec6f85f) for method JITTest.ScalarFloat:HalfPi():float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:PositiveInfinity():float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M56947_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M56947_IG02:
       vmovss   xmm0, dword ptr [@RWD00]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 3.00
G_M56947_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dd	7F800000h


; Total bytes of code 27, prolog size 7, PerfScore 10.90, (MethodHash=464b218c) for method JITTest.ScalarFloat:PositiveInfinity():float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:NegativeInfinity():float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M30907_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M30907_IG02:
       vmovss   xmm0, dword ptr [@RWD00]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 3.00
G_M30907_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dd	FF800000h


; Total bytes of code 27, prolog size 7, PerfScore 10.90, (MethodHash=addb8744) for method JITTest.ScalarFloat:NegativeInfinity():float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:As(double):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  V02 tmp1         [V02,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M43965_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M43965_IG02:
       vcvtsd2ss xmm0, dword ptr [ebp+08H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.00
G_M43965_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 26, prolog size 7, PerfScore 15.80, (MethodHash=cd2d5442) for method JITTest.ScalarFloat:As(double):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:SquareRoot(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  V02 tmp1         [V02,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M13933_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M13933_IG02:
       vsqrtss  xmm0, dword ptr [ebp+08H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 14.00
G_M13933_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 26, prolog size 7, PerfScore 22.80, (MethodHash=84c6c992) for method JITTest.ScalarFloat:SquareRoot(float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Add(float,float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M54263_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M54263_IG02:
       vmovss   xmm0, dword ptr [ebp+0CH]
       vaddss   xmm0, xmm0, dword ptr [ebp+08H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 8.00
G_M54263_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 31, prolog size 7, PerfScore 17.40, (MethodHash=9d6a2c08) for method JITTest.ScalarFloat:Add(float,float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Mod(float,float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M32816_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M32816_IG02:
       vmovss   xmm0, dword ptr [ebp+0CH]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     CORINFO_HELP_FLTREM
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 10.00
G_M32816_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 60, prolog size 7, PerfScore 22.60, (MethodHash=2fb27fcf) for method JITTest.ScalarFloat:Mod(float,float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Subtract(float,float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M25826_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M25826_IG02:
       vmovss   xmm0, dword ptr [ebp+0CH]
       vsubss   xmm0, xmm0, dword ptr [ebp+08H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 8.00
G_M25826_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 31, prolog size 7, PerfScore 17.40, (MethodHash=0ddf9b1d) for method JITTest.ScalarFloat:Subtract(float,float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Multiply(float,float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M43322_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M43322_IG02:
       vmovss   xmm0, dword ptr [ebp+0CH]
       vmulss   xmm0, xmm0, dword ptr [ebp+08H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 8.00
G_M43322_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 31, prolog size 7, PerfScore 17.40, (MethodHash=583956c5) for method JITTest.ScalarFloat:Multiply(float,float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Divide(float,float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M23493_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M23493_IG02:
       vmovss   xmm0, dword ptr [ebp+0CH]
       vdivss   xmm0, xmm0, dword ptr [ebp+08H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 15.00
G_M23493_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 31, prolog size 7, PerfScore 24.40, (MethodHash=6342a43a) for method JITTest.ScalarFloat:Divide(float,float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Min(float,float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M15612_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M15612_IG02:
       vmovss   xmm0, dword ptr [ebp+0CH]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Min(float,float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 10.00
G_M15612_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 60, prolog size 7, PerfScore 22.60, (MethodHash=671dc303) for method JITTest.ScalarFloat:Min(float,float):float
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Min(float,float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  7,  3   )   float  ->  mm0        
;  V01 arg1         [V01,T03] (  4,  2.25)   float  ->  mm1        
;* V02 tmp0         [V02    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T02] (  5,  3   )   float  ->  mm1         "Inline return value spill temp"
;  V04 tmp2         [V04,T00] (  2,  0.50)     int  ->  eax         "Inline return value spill temp"
;* V05 tmp3         [V05    ] (  0,  0   )   float  ->  zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp4         [V06,T04] (  2,  0.50)  simd16  ->  mm2         "Inline stloc first use temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M50508_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
       vmovss   xmm0, dword ptr [ebp+0CH]
       vmovss   xmm1, dword ptr [ebp+08H]
						;; bbWeight=1    PerfScore 7.25
G_M50508_IG02:
       vucomiss xmm0, xmm1
       jp       SHORT G_M50508_IG03
       je       SHORT G_M50508_IG06
						;; bbWeight=1    PerfScore 3.00
G_M50508_IG03:
       vucomiss xmm0, xmm0
       jp       SHORT G_M50508_IG06
       vucomiss xmm1, xmm0
       ja       SHORT G_M50508_IG05
						;; bbWeight=0.25 PerfScore 1.00
G_M50508_IG04:
       jmp      SHORT G_M50508_IG09
						;; bbWeight=0.50 PerfScore 1.00
G_M50508_IG05:
       vmovaps  xmm1, xmm0
       jmp      SHORT G_M50508_IG09
						;; bbWeight=0.50 PerfScore 1.12
G_M50508_IG06:
       vmovaps  xmm2, xmm0
       vmovd    eax, xmm2
       test     eax, eax
       jl       SHORT G_M50508_IG08
						;; bbWeight=0.25 PerfScore 0.62
G_M50508_IG07:
       jmp      SHORT G_M50508_IG09
						;; bbWeight=0.50 PerfScore 1.00
G_M50508_IG08:
       vmovaps  xmm1, xmm0
						;; bbWeight=0.50 PerfScore 0.12
G_M50508_IG09:
       vmovss   dword ptr [ebp-04H], xmm1
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 1.00
G_M50508_IG10:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 77, prolog size 7, PerfScore 27.58, (MethodHash=1de43ab3) for method Silk.NET.Maths.Scalar:Min(float,float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Max(float,float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M26530_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M26530_IG02:
       vmovss   xmm0, dword ptr [ebp+0CH]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Max(float,float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 10.00
G_M26530_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 60, prolog size 7, PerfScore 22.60, (MethodHash=9671985d) for method JITTest.ScalarFloat:Max(float,float):float
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Max(float,float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T02] (  7,  3.25)   float  ->  mm0        
;  V01 arg1         [V01,T03] (  5,  2.50)   float  ->  mm1        
;* V02 tmp0         [V02    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T01] (  6,  3.50)   float  ->  mm1         "Inline return value spill temp"
;  V04 tmp2         [V04,T00] (  2,  0.50)     int  ->  eax         "Inline return value spill temp"
;* V05 tmp3         [V05    ] (  0,  0   )   float  ->  zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp4         [V06,T04] (  2,  0.50)  simd16  ->  mm2         "Inline stloc first use temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M9746_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
       vmovss   xmm0, dword ptr [ebp+0CH]
       vmovss   xmm1, dword ptr [ebp+08H]
						;; bbWeight=1    PerfScore 7.25
G_M9746_IG02:
       vucomiss xmm0, xmm1
       jp       SHORT G_M9746_IG03
       je       SHORT G_M9746_IG07
						;; bbWeight=1    PerfScore 3.00
G_M9746_IG03:
       vucomiss xmm0, xmm0
       jp       SHORT G_M9746_IG06
       vucomiss xmm0, xmm1
       ja       SHORT G_M9746_IG05
						;; bbWeight=0.25 PerfScore 1.00
G_M9746_IG04:
       jmp      SHORT G_M9746_IG10
						;; bbWeight=0.50 PerfScore 1.00
G_M9746_IG05:
       vmovaps  xmm1, xmm0
       jmp      SHORT G_M9746_IG10
						;; bbWeight=0.50 PerfScore 1.12
G_M9746_IG06:
       vmovaps  xmm1, xmm0
       jmp      SHORT G_M9746_IG10
						;; bbWeight=0.50 PerfScore 1.12
G_M9746_IG07:
       vmovaps  xmm2, xmm1
       vmovd    eax, xmm2
       test     eax, eax
       jl       SHORT G_M9746_IG09
						;; bbWeight=0.25 PerfScore 0.62
G_M9746_IG08:
       jmp      SHORT G_M9746_IG10
						;; bbWeight=0.50 PerfScore 1.00
G_M9746_IG09:
       vmovaps  xmm1, xmm0
						;; bbWeight=0.50 PerfScore 0.12
G_M9746_IG10:
       vmovss   dword ptr [ebp-04H], xmm1
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 1.00
G_M9746_IG11:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 83, prolog size 7, PerfScore 29.40, (MethodHash=ada7d9ed) for method Silk.NET.Maths.Scalar:Max(float,float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Larger(float,float):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M53319_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M53319_IG02:
       vmovss   xmm0, dword ptr [ebp+0CH]
       vucomiss xmm0, dword ptr [ebp+08H]
       seta     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 4.25
G_M53319_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 26, prolog size 6, PerfScore 11.80, (MethodHash=49cf2fb8) for method JITTest.ScalarFloat:Larger(float,float):bool
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Smaller(float,float):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M29824_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M29824_IG02:
       vmovss   xmm0, dword ptr [ebp+08H]
       vucomiss xmm0, dword ptr [ebp+0CH]
       seta     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 4.25
G_M29824_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 26, prolog size 6, PerfScore 11.80, (MethodHash=befb8b7f) for method JITTest.ScalarFloat:Smaller(float,float):bool
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:LargerEquals(float,float):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M17656_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M17656_IG02:
       vmovss   xmm0, dword ptr [ebp+0CH]
       vucomiss xmm0, dword ptr [ebp+08H]
       setae    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 4.25
G_M17656_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 26, prolog size 6, PerfScore 11.80, (MethodHash=5001bb07) for method JITTest.ScalarFloat:LargerEquals(float,float):bool
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:SmallerEquals(float,float):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M33919_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M33919_IG02:
       vmovss   xmm0, dword ptr [ebp+08H]
       vucomiss xmm0, dword ptr [ebp+0CH]
       setae    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 4.25
G_M33919_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 26, prolog size 6, PerfScore 11.80, (MethodHash=5f107b80) for method JITTest.ScalarFloat:SmallerEquals(float,float):bool
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Clamp(float,float,float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  1,  1   )   float  ->  [ebp+0x10]  
;  V01 arg1         [V01,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V02 arg2         [V02,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M12729_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M12729_IG02:
       vmovss   xmm0, dword ptr [ebp+10H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       vmovss   xmm0, dword ptr [ebp+0CH]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Max(float,float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Min(float,float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 17.00
G_M12729_IG03:
       mov      esp, ebp
       pop      ebp
       ret      12
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 94, prolog size 7, PerfScore 33.40, (MethodHash=430fce46) for method JITTest.ScalarFloat:Clamp(float,float,float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Negate(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  1,  1   )   float  ->  [ebp+0x08]  
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M20150_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M20150_IG02:
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Negate(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.25
G_M20150_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 47, prolog size 7, PerfScore 18.35, (MethodHash=50f9b149) for method JITTest.ScalarFloat:Negate(float):float
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Negate(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  1,  1   )   float  ->  [ebp+0x08]  
;* V01 loc0         [V01    ] (  0,  0   )   float  ->  zero-ref    ld-addr-op
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M40518_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M40518_IG02:
       vmovss   xmm1, dword ptr [ebp+08H]
       vmovss   xmm0, dword ptr [@RWD00]
       vxorps   xmm0, xmm1
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 5.33
G_M40518_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75
RWD00  dd	80000000h


; Total bytes of code 38, prolog size 7, PerfScore 15.53, (MethodHash=c9b261b9) for method Silk.NET.Maths.Scalar:Negate(float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Equal(float,float):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x0C]  
;  V01 arg1         [V01,T02] (  1,  1   )   float  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M516_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M516_IG02:
       vmovss   xmm0, dword ptr [ebp+0CH]
       vucomiss xmm0, dword ptr [ebp+08H]
       setnp    al
       jp       SHORT G_M516_IG03
       sete     al
						;; bbWeight=1    PerfScore 6.00
G_M516_IG03:
       movzx    eax, al
						;; bbWeight=1    PerfScore 0.25
G_M516_IG04:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 31, prolog size 6, PerfScore 14.30, (MethodHash=dd4ffdfb) for method JITTest.ScalarFloat:Equal(float,float):bool
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Acos(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M53204_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M53204_IG02:
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Acos(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.25
G_M53204_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 47, prolog size 7, PerfScore 18.35, (MethodHash=3029302b) for method JITTest.ScalarFloat:Acos(float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Abs(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )   float  ->  zero-ref    "Inline return value spill temp"
;  V02 tmp1         [V02,T00] (  2,  2   )   float  ->  mm1         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M50938_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M50938_IG02:
       vmovss   xmm1, dword ptr [ebp+08H]
       vmovss   xmm0, dword ptr [@RWD00]
       vandps   xmm1, xmm0
       vmovss   dword ptr [ebp-04H], xmm1
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 5.33
G_M50938_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75
RWD00  dd	7FFFFFFFh


; Total bytes of code 38, prolog size 7, PerfScore 15.53, (MethodHash=b8443905) for method JITTest.ScalarFloat:Abs(float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Sin(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M734_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M734_IG02:
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Sin_Ported(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.25
G_M734_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 47, prolog size 7, PerfScore 18.35, (MethodHash=ba6cfd21) for method JITTest.ScalarFloat:Sin(float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Sinh(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M23798_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M23798_IG02:
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Sinh(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.25
G_M23798_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 47, prolog size 7, PerfScore 18.35, (MethodHash=8e8ea309) for method JITTest.ScalarFloat:Sinh(float):float
; ============================================================

; Assembly listing for method JITTest.ScalarFloat:Asin(float):float
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )   float  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )   float  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                   float  ->  [ebp-0x04]
;
; Lcl frame size = 4

G_M16255_IG01:
       push     ebp
       mov      ebp, esp
       push     eax
       vzeroupper 
						;; bbWeight=1    PerfScore 3.25
G_M16255_IG02:
       vmovss   xmm0, dword ptr [ebp+08H]
       sub      esp, 4
       vmovss   dword ptr [esp], xmm0
       call     System.MathF:Asin(float):float
       fstp     dword ptr [ebp-04H]
       vmovss   xmm0, dword ptr [ebp-04H]
       vmovss   dword ptr [ebp-04H], xmm0
       fld      dword ptr [ebp-04H]
						;; bbWeight=1    PerfScore 7.25
G_M16255_IG03:
       mov      esp, ebp
       pop      ebp
       ret      4
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 47, prolog size 7, PerfScore 18.35, (MethodHash=43c2c080) for method JITTest.ScalarFloat:Asin(float):float
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:EntryPoint()
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V01 tmp1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V02 tmp2         [V02    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V03 tmp3         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V04 tmp4         [V04    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V05 tmp5         [V05    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V06 tmp6         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V07 tmp7         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V08 tmp8         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V09 tmp9         [V09    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V10 tmp10        [V10    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V11 tmp11        [V11    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V12 tmp12        [V12    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V13 tmp13        [V13    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V14 tmp14        [V14    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V15 tmp15        [V15    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V16 tmp16        [V16    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V17 tmp17        [V17    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V18 tmp18        [V18    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V19 tmp19        [V19    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V20 tmp20        [V20    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V21 tmp21        [V21    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V22 tmp22        [V22    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V23 tmp23        [V23    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V24 tmp24        [V24    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V25 tmp25        [V25    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V26 tmp26        [V26    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V27 tmp27        [V27    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V28 tmp28        [V28    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V29 tmp29        [V29    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V30 tmp30        [V30    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V31 tmp31        [V31    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;* V32 tmp32        [V32    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "impSpillSpecialSideEff"
;  V33 EHSlots      [V33    ] (  1,  1   )     blk (16) [ebp-0x14]   do-not-enreg[X] must-init addr-exposed "lvaShadowSPslotsVar"
;  TEMP_01                                  double  ->  [ebp-0x1C]
;
; Lcl frame size = 28

G_M32685_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 28
       vzeroupper 
       xor      eax, eax
       mov      dword ptr [ebp-14H], eax
       mov      dword ptr [ebp-10H], eax
       mov      dword ptr [ebp-0CH], eax
       mov      dword ptr [ebp-08H], eax
						;; bbWeight=1    PerfScore 6.75
G_M32685_IG02:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Atan(double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG04
						;; bbWeight=1    PerfScore 6.58
G_M32685_IG03:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG04:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Atan2(double,double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG06
						;; bbWeight=1    PerfScore 7.33
G_M32685_IG05:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG06:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Cos(double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG08
						;; bbWeight=1    PerfScore 6.58
G_M32685_IG07:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG08:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Cosh(double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG10
						;; bbWeight=1    PerfScore 6.58
G_M32685_IG09:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG10:
       call     JITTest.ScalarDouble:One():double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG12
						;; bbWeight=1    PerfScore 5.50
G_M32685_IG11:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG12:
       call     JITTest.ScalarDouble:Two():double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG14
						;; bbWeight=1    PerfScore 5.50
G_M32685_IG13:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG14:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:IsNormal(double):bool
       jmp      SHORT G_M32685_IG16
						;; bbWeight=1    PerfScore 4.08
G_M32685_IG15:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG16:
       call     JITTest.ScalarDouble:Pi():double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG18
						;; bbWeight=1    PerfScore 5.50
G_M32685_IG17:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG18:
       call     JITTest.ScalarDouble:Tau():double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG20
						;; bbWeight=1    PerfScore 5.50
G_M32685_IG19:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG20:
       call     JITTest.ScalarDouble:HalfPi():double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG22
						;; bbWeight=1    PerfScore 5.50
G_M32685_IG21:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG22:
       call     JITTest.ScalarDouble:PositiveInfinity():double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG24
						;; bbWeight=1    PerfScore 5.50
G_M32685_IG23:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG24:
       call     JITTest.ScalarDouble:NegativeInfinity():double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG26
						;; bbWeight=1    PerfScore 5.50
G_M32685_IG25:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG26:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:As(double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG28
						;; bbWeight=1    PerfScore 6.58
G_M32685_IG27:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG28:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:SquareRoot(double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG30
						;; bbWeight=1    PerfScore 6.58
G_M32685_IG29:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG30:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Add(double,double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG32
						;; bbWeight=1    PerfScore 7.33
G_M32685_IG31:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG32:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Mod(double,double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG34
						;; bbWeight=1    PerfScore 7.33
G_M32685_IG33:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG34:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Subtract(double,double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG36
						;; bbWeight=1    PerfScore 7.33
G_M32685_IG35:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG36:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Multiply(double,double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG38
						;; bbWeight=1    PerfScore 7.33
G_M32685_IG37:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG38:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Divide(double,double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG40
						;; bbWeight=1    PerfScore 7.33
G_M32685_IG39:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG40:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Min(double,double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG42
						;; bbWeight=1    PerfScore 7.33
G_M32685_IG41:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG42:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Max(double,double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG44
						;; bbWeight=1    PerfScore 7.33
G_M32685_IG43:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG44:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Larger(double,double):bool
       jmp      SHORT G_M32685_IG46
						;; bbWeight=1    PerfScore 4.83
G_M32685_IG45:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG46:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Smaller(double,double):bool
       jmp      SHORT G_M32685_IG48
						;; bbWeight=1    PerfScore 4.83
G_M32685_IG47:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG48:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:LargerEquals(double,double):bool
       jmp      SHORT G_M32685_IG50
						;; bbWeight=1    PerfScore 4.83
G_M32685_IG49:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG50:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:SmallerEquals(double,double):bool
       jmp      SHORT G_M32685_IG52
						;; bbWeight=1    PerfScore 4.83
G_M32685_IG51:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG52:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Clamp(double,double,double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG54
						;; bbWeight=1    PerfScore 8.08
G_M32685_IG53:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG54:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Negate(double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG56
						;; bbWeight=1    PerfScore 6.58
G_M32685_IG55:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG56:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Equal(double,double):bool
       jmp      SHORT G_M32685_IG58
						;; bbWeight=1    PerfScore 4.83
G_M32685_IG57:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG58:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Acos(double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG60
						;; bbWeight=1    PerfScore 6.58
G_M32685_IG59:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG60:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Abs(double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG62
						;; bbWeight=1    PerfScore 6.58
G_M32685_IG61:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG62:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Sin(double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG64
						;; bbWeight=1    PerfScore 6.58
G_M32685_IG63:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG64:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Sinh(double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG66
						;; bbWeight=1    PerfScore 6.58
G_M32685_IG65:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG66:
       vxorps   xmm0, xmm0
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     JITTest.ScalarDouble:Asin(double):double
       fstp     qword ptr [ebp-1CH]
       vmovsd   xmm0, qword ptr [ebp-1CH]
       jmp      SHORT G_M32685_IG68
						;; bbWeight=1    PerfScore 6.58
G_M32685_IG67:
       call     CORINFO_HELP_ENDCATCH
						;; bbWeight=0    PerfScore 0.00
G_M32685_IG68:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75

; Total bytes of code 1071, prolog size 23, PerfScore 330.92, (MethodHash=56198052) for method JITTest.ScalarDouble:EntryPoint()
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Atan(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M17621_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M17621_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Math:Atan(double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 7.25
G_M17621_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 49, prolog size 9, PerfScore 17.80, (MethodHash=e4c6bb2a) for method JITTest.ScalarDouble:Atan(double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Atan2(double,double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;  V02 tmp0         [V02,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M51550_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M51550_IG02:
       vmovsd   xmm0, qword ptr [ebp+10H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Math:Atan2(double,double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 10.00
G_M51550_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 62, prolog size 9, PerfScore 22.05, (MethodHash=775e36a1) for method JITTest.ScalarDouble:Atan2(double,double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Cos(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M3216_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M3216_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Math:Cos(double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 7.25
G_M3216_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 49, prolog size 9, PerfScore 17.80, (MethodHash=c9aaf36f) for method JITTest.ScalarDouble:Cos(double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Cosh(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M53688_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M53688_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Math:Cosh(double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 7.25
G_M53688_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 49, prolog size 9, PerfScore 17.80, (MethodHash=97892e47) for method JITTest.ScalarDouble:Cosh(double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:One():double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M15166_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M15166_IG02:
       vmovsd   xmm0, qword ptr [@RWD08]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 3.00
G_M15166_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dq	0000000000000000h
RWD08  dq	3FF0000000000000h


; Total bytes of code 29, prolog size 9, PerfScore 10.35, (MethodHash=7d12c4c1) for method JITTest.ScalarDouble:One():double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Two():double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;* V01 tmp1         [V01    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M62038_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M62038_IG02:
       vmovsd   xmm0, qword ptr [@RWD08]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 3.00
G_M62038_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dq	0000000000000000h
RWD08  dq	4000000000000000h


; Total bytes of code 29, prolog size 9, PerfScore 10.35, (MethodHash=43a20da9) for method JITTest.ScalarDouble:Two():double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:IsNormal(double):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M22173_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M22173_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Double:IsNormal(double):bool
       movzx    eax, al
						;; bbWeight=1    PerfScore 4.00
G_M22173_IG03:
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 31, prolog size 6, PerfScore 12.05, (MethodHash=d8fba962) for method JITTest.ScalarDouble:IsNormal(double):bool
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Pi():double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M56131_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M56131_IG02:
       vmovsd   xmm0, qword ptr [@RWD08]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 3.00
G_M56131_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dq	0000000000000000h
RWD08  dq	400921FB54442D18h


; Total bytes of code 29, prolog size 9, PerfScore 10.35, (MethodHash=7a2724bc) for method JITTest.ScalarDouble:Pi():double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Tau():double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M6042_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M6042_IG02:
       vmovsd   xmm0, qword ptr [@RWD08]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 3.00
G_M6042_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dq	0000000000000000h
RWD08  dq	401921FB54442D18h


; Total bytes of code 29, prolog size 9, PerfScore 10.35, (MethodHash=0a43e865) for method JITTest.ScalarDouble:Tau():double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:HalfPi():double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M6592_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M6592_IG02:
       vmovsd   xmm0, qword ptr [@RWD08]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 3.00
G_M6592_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dq	0000000000000000h
RWD08  dq	3FF921FB54442D18h


; Total bytes of code 29, prolog size 9, PerfScore 10.35, (MethodHash=c381e63f) for method JITTest.ScalarDouble:HalfPi():double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:PositiveInfinity():double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M7411_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M7411_IG02:
       vmovsd   xmm0, qword ptr [@RWD08]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 3.00
G_M7411_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dq	0000000000000000h
RWD08  dq	7FF0000000000000h


; Total bytes of code 29, prolog size 9, PerfScore 10.35, (MethodHash=33b6e30c) for method JITTest.ScalarDouble:PositiveInfinity():double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:NegativeInfinity():double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 tmp0         [V00    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M54715_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M54715_IG02:
       vmovsd   xmm0, qword ptr [@RWD08]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 3.00
G_M54715_IG03:
       mov      esp, ebp
       pop      ebp
       ret      
						;; bbWeight=1    PerfScore 1.75
RWD00  dq	0000000000000000h
RWD08  dq	FFF0000000000000h


; Total bytes of code 29, prolog size 9, PerfScore 10.35, (MethodHash=59382a44) for method JITTest.ScalarDouble:NegativeInfinity():double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:As(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  V02 tmp1         [V02,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M56061_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M56061_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 3.00
G_M56061_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 28, prolog size 9, PerfScore 11.25, (MethodHash=b3172502) for method JITTest.ScalarDouble:As(double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:SquareRoot(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  V02 tmp1         [V02,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M33640_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M33640_IG02:
       vsqrtsd  xmm0, qword ptr [ebp+08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 6.00
G_M33640_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 28, prolog size 9, PerfScore 14.25, (MethodHash=a8b57c97) for method JITTest.ScalarDouble:SquareRoot(double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Add(double,double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M21527_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M21527_IG02:
       vmovsd   xmm0, qword ptr [ebp+10H]
       vaddsd   xmm0, xmm0, qword ptr [ebp+08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 8.00
G_M21527_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 33, prolog size 9, PerfScore 16.85, (MethodHash=29d7abe8) for method JITTest.ScalarDouble:Add(double,double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Mod(double,double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M23600_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M23600_IG02:
       vmovsd   xmm0, qword ptr [ebp+10H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     CORINFO_HELP_DBLREM
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 10.00
G_M23600_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 62, prolog size 9, PerfScore 22.05, (MethodHash=3ccca3cf) for method JITTest.ScalarDouble:Mod(double,double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Subtract(double,double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M12866_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M12866_IG02:
       vmovsd   xmm0, qword ptr [ebp+10H]
       vsubsd   xmm0, xmm0, qword ptr [ebp+08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 8.00
G_M12866_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 33, prolog size 9, PerfScore 16.85, (MethodHash=89c5cdbd) for method JITTest.ScalarDouble:Subtract(double,double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Multiply(double,double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M5530_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M5530_IG02:
       vmovsd   xmm0, qword ptr [ebp+10H]
       vmulsd   xmm0, xmm0, qword ptr [ebp+08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 8.00
G_M5530_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 33, prolog size 9, PerfScore 16.85, (MethodHash=b6adea65) for method JITTest.ScalarDouble:Multiply(double,double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Divide(double,double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M43461_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M43461_IG02:
       vmovsd   xmm0, qword ptr [ebp+10H]
       vdivsd   xmm0, xmm0, qword ptr [ebp+08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 17.00
G_M43461_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 33, prolog size 9, PerfScore 25.85, (MethodHash=c503563a) for method JITTest.ScalarDouble:Divide(double,double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Min(double,double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M43772_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M43772_IG02:
       vmovsd   xmm0, qword ptr [ebp+10H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Min(double,double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 10.00
G_M43772_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 62, prolog size 9, PerfScore 22.05, (MethodHash=a5dd5503) for method JITTest.ScalarDouble:Min(double,double):double
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Min(double,double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T02] (  7,  3   )  double  ->  mm0        
;  V01 arg1         [V01,T04] (  4,  2.25)  double  ->  mm1        
;* V02 tmp0         [V02    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T03] (  5,  3   )  double  ->  mm1         "Inline return value spill temp"
;* V04 tmp2         [V04    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V05 tmp3         [V05,T05] (  2,  1   )  double  ->  [ebp-0x08]   do-not-enreg[F] ld-addr-op "Inlining Arg"
;* V06 rat0         [V06,T01] (  0,  0   )     int  ->  zero-ref    V04.lo(offs=0x00) "field V04.lo (fldOffset=0x0)"
;  V07 rat1         [V07,T00] (  2,  0.50)     int  ->  eax         V04.hi(offs=0x04) "field V04.hi (fldOffset=0x4)"
;  TEMP_01                                  double  ->  [ebp-0x10]
;
; Lcl frame size = 16

G_M52969_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 16
       vzeroupper 
       vmovsd   xmm0, qword ptr [ebp+10H]
       vmovsd   xmm1, qword ptr [ebp+08H]
						;; bbWeight=1    PerfScore 6.50
G_M52969_IG02:
       vucomisd xmm0, xmm1
       jp       SHORT G_M52969_IG03
       je       SHORT G_M52969_IG06
						;; bbWeight=1    PerfScore 3.00
G_M52969_IG03:
       vucomisd xmm0, xmm0
       jp       SHORT G_M52969_IG06
       vucomisd xmm1, xmm0
       ja       SHORT G_M52969_IG05
						;; bbWeight=0.25 PerfScore 1.00
G_M52969_IG04:
       jmp      SHORT G_M52969_IG09
						;; bbWeight=0.50 PerfScore 1.00
G_M52969_IG05:
       vmovaps  xmm1, xmm0
       jmp      SHORT G_M52969_IG09
						;; bbWeight=0.50 PerfScore 1.12
G_M52969_IG06:
       vmovsd   qword ptr [ebp-08H], xmm0
       mov      eax, dword ptr [ebp-04H]
       test     eax, eax
       jl       SHORT G_M52969_IG08
						;; bbWeight=0.25 PerfScore 0.69
G_M52969_IG07:
       jmp      SHORT G_M52969_IG09
						;; bbWeight=0.50 PerfScore 1.00
G_M52969_IG08:
       vmovaps  xmm1, xmm0
						;; bbWeight=0.50 PerfScore 0.12
G_M52969_IG09:
       vmovsd   qword ptr [ebp-10H], xmm1
       fld      qword ptr [ebp-10H]
						;; bbWeight=1    PerfScore 1.00
G_M52969_IG10:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 79, prolog size 9, PerfScore 26.99, (MethodHash=4bad3116) for method Silk.NET.Maths.Scalar:Min(double,double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Max(double,double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M44770_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M44770_IG02:
       vmovsd   xmm0, qword ptr [ebp+10H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Max(double,double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 10.00
G_M44770_IG03:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 62, prolog size 9, PerfScore 22.05, (MethodHash=ad4d511d) for method JITTest.ScalarDouble:Max(double,double):double
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Max(double,double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T03] (  7,  3.25)  double  ->  mm0        
;  V01 arg1         [V01,T04] (  5,  2.50)  double  ->  mm1        
;* V02 tmp0         [V02    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T02] (  6,  3.50)  double  ->  mm1         "Inline return value spill temp"
;* V04 tmp2         [V04    ] (  0,  0   )    long  ->  zero-ref    "Inline return value spill temp"
;  V05 tmp3         [V05,T05] (  2,  1   )  double  ->  [ebp-0x08]   do-not-enreg[F] ld-addr-op "Inlining Arg"
;* V06 rat0         [V06,T01] (  0,  0   )     int  ->  zero-ref    V04.lo(offs=0x00) "field V04.lo (fldOffset=0x0)"
;  V07 rat1         [V07,T00] (  2,  0.50)     int  ->  eax         V04.hi(offs=0x04) "field V04.hi (fldOffset=0x4)"
;  TEMP_01                                  double  ->  [ebp-0x10]
;
; Lcl frame size = 16

G_M47351_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 16
       vzeroupper 
       vmovsd   xmm0, qword ptr [ebp+10H]
       vmovsd   xmm1, qword ptr [ebp+08H]
						;; bbWeight=1    PerfScore 6.50
G_M47351_IG02:
       vucomisd xmm0, xmm1
       jp       SHORT G_M47351_IG03
       je       SHORT G_M47351_IG07
						;; bbWeight=1    PerfScore 3.00
G_M47351_IG03:
       vucomisd xmm0, xmm0
       jp       SHORT G_M47351_IG06
       vucomisd xmm0, xmm1
       ja       SHORT G_M47351_IG05
						;; bbWeight=0.25 PerfScore 1.00
G_M47351_IG04:
       jmp      SHORT G_M47351_IG10
						;; bbWeight=0.50 PerfScore 1.00
G_M47351_IG05:
       vmovaps  xmm1, xmm0
       jmp      SHORT G_M47351_IG10
						;; bbWeight=0.50 PerfScore 1.12
G_M47351_IG06:
       vmovaps  xmm1, xmm0
       jmp      SHORT G_M47351_IG10
						;; bbWeight=0.50 PerfScore 1.12
G_M47351_IG07:
       vmovsd   qword ptr [ebp-08H], xmm1
       mov      eax, dword ptr [ebp-04H]
       test     eax, eax
       jl       SHORT G_M47351_IG09
						;; bbWeight=0.25 PerfScore 0.69
G_M47351_IG08:
       jmp      SHORT G_M47351_IG10
						;; bbWeight=0.50 PerfScore 1.00
G_M47351_IG09:
       vmovaps  xmm1, xmm0
						;; bbWeight=0.50 PerfScore 0.12
G_M47351_IG10:
       vmovsd   qword ptr [ebp-10H], xmm1
       fld      qword ptr [ebp-10H]
						;; bbWeight=1    PerfScore 1.00
G_M47351_IG11:
       mov      esp, ebp
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 85, prolog size 9, PerfScore 28.81, (MethodHash=b0584708) for method Silk.NET.Maths.Scalar:Max(double,double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Larger(double,double):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M41762_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M41762_IG02:
       vmovsd   xmm0, qword ptr [ebp+10H]
       vucomisd xmm0, qword ptr [ebp+08H]
       seta     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 4.25
G_M41762_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 26, prolog size 6, PerfScore 11.80, (MethodHash=11de5cdd) for method JITTest.ScalarDouble:Larger(double,double):bool
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Smaller(double,double):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M2181_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M2181_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       vucomisd xmm0, qword ptr [ebp+10H]
       seta     al
       movzx    eax, al
						;; bbWeight=1    PerfScore 4.25
G_M2181_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 26, prolog size 6, PerfScore 11.80, (MethodHash=0151f77a) for method JITTest.ScalarDouble:Smaller(double,double):bool
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:LargerEquals(double,double):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M9053_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M9053_IG02:
       vmovsd   xmm0, qword ptr [ebp+10H]
       vucomisd xmm0, qword ptr [ebp+08H]
       setae    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 4.25
G_M9053_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 26, prolog size 6, PerfScore 11.80, (MethodHash=8724dca2) for method JITTest.ScalarDouble:LargerEquals(double,double):bool
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:SmallerEquals(double,double):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M49850_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M49850_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       vucomisd xmm0, qword ptr [ebp+10H]
       setae    al
       movzx    eax, al
						;; bbWeight=1    PerfScore 4.25
G_M49850_IG03:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 26, prolog size 6, PerfScore 11.80, (MethodHash=2cee3d45) for method JITTest.ScalarDouble:SmallerEquals(double,double):bool
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Clamp(double,double,double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  1,  1   )  double  ->  [ebp+0x18]  
;  V01 arg1         [V01,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V02 arg2         [V02,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M49084_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M49084_IG02:
       vmovsd   xmm0, qword ptr [ebp+18H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       vmovsd   xmm0, qword ptr [ebp+10H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Max(double,double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Min(double,double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 17.00
G_M49084_IG03:
       mov      esp, ebp
       pop      ebp
       ret      24
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 96, prolog size 9, PerfScore 32.85, (MethodHash=95794043) for method JITTest.ScalarDouble:Clamp(double,double,double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Negate(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  1,  1   )  double  ->  [ebp+0x08]  
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M14451_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M14451_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     Silk.NET.Maths.Scalar:Negate(double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 7.25
G_M14451_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 49, prolog size 9, PerfScore 17.80, (MethodHash=2b35c78c) for method JITTest.ScalarDouble:Negate(double):double
; ============================================================

; Assembly listing for method Silk.NET.Maths.Scalar:Negate(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  1,  1   )  double  ->  [ebp+0x08]  
;* V01 loc0         [V01    ] (  0,  0   )  double  ->  zero-ref    ld-addr-op
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M6886_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M6886_IG02:
       vmovsd   xmm1, qword ptr [ebp+08H]
       vmovsd   xmm0, qword ptr [@RWD08]
       vxorps   xmm0, xmm1
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 5.33
G_M6886_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75
RWD00  dq	0000000000000000h
RWD08  dq	8000000000000000h


; Total bytes of code 40, prolog size 9, PerfScore 14.98, (MethodHash=38f1e519) for method Silk.NET.Maths.Scalar:Negate(double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Equal(double,double):bool
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x10]  
;  V01 arg1         [V01,T02] (  1,  1   )  double  ->  [ebp+0x08]  
;* V02 tmp0         [V02    ] (  0,  0   )    bool  ->  zero-ref    "Inline return value spill temp"
;  V03 tmp1         [V03,T00] (  2,  2   )    bool  ->  eax         "Inline return value spill temp"
;
; Lcl frame size = 0

G_M56833_IG01:
       push     ebp
       mov      ebp, esp
       vzeroupper 
						;; bbWeight=1    PerfScore 2.25
G_M56833_IG02:
       vmovsd   xmm0, qword ptr [ebp+10H]
       vucomisd xmm0, qword ptr [ebp+08H]
       setnp    al
       jp       SHORT G_M56833_IG03
       sete     al
						;; bbWeight=1    PerfScore 6.00
G_M56833_IG03:
       movzx    eax, al
						;; bbWeight=1    PerfScore 0.25
G_M56833_IG04:
       pop      ebp
       ret      16
						;; bbWeight=1    PerfScore 2.50

; Total bytes of code 31, prolog size 6, PerfScore 14.30, (MethodHash=0b7a21fe) for method JITTest.ScalarDouble:Equal(double,double):bool
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Acos(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M22225_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M22225_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Math:Acos(double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 7.25
G_M22225_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 49, prolog size 9, PerfScore 17.80, (MethodHash=d1f5a92e) for method JITTest.ScalarDouble:Acos(double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Abs(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;* V01 tmp0         [V01    ] (  0,  0   )  double  ->  zero-ref    "Inline return value spill temp"
;  V02 tmp1         [V02,T00] (  2,  2   )  double  ->  mm1         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M39391_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M39391_IG02:
       vmovsd   xmm1, qword ptr [ebp+08H]
       vmovsd   xmm0, qword ptr [@RWD08]
       vandps   xmm1, xmm0
       vmovsd   qword ptr [ebp-08H], xmm1
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 5.33
G_M39391_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75
RWD00  dq	0000000000000000h
RWD08  dq	7FFFFFFFFFFFFFFFh


; Total bytes of code 40, prolog size 9, PerfScore 14.98, (MethodHash=825a6620) for method JITTest.ScalarDouble:Abs(double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Sin(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M11003_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M11003_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Math:Sin(double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 7.25
G_M11003_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 49, prolog size 9, PerfScore 17.80, (MethodHash=6cccd504) for method JITTest.ScalarDouble:Sin(double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Sinh(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M37683_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M37683_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Math:Sinh(double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 7.25
G_M37683_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 49, prolog size 9, PerfScore 17.80, (MethodHash=ef686ccc) for method JITTest.ScalarDouble:Sinh(double):double
; ============================================================

; Assembly listing for method JITTest.ScalarDouble:Asin(double):double
; Emitting BLENDED_CODE for generic X86 CPU - Windows
; optimized code
; ebp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] (  1,  1   )  double  ->  [ebp+0x08]  
;  V01 tmp0         [V01,T00] (  2,  2   )  double  ->  mm0         "Inline return value spill temp"
;  TEMP_01                                  double  ->  [ebp-0x08]
;
; Lcl frame size = 8

G_M61306_IG01:
       push     ebp
       mov      ebp, esp
       sub      esp, 8
       vzeroupper 
						;; bbWeight=1    PerfScore 2.50
G_M61306_IG02:
       vmovsd   xmm0, qword ptr [ebp+08H]
       sub      esp, 8
       vmovsd   qword ptr [esp], xmm0
       call     System.Math:Asin(double):double
       fstp     qword ptr [ebp-08H]
       vmovsd   xmm0, qword ptr [ebp-08H]
       vmovsd   qword ptr [ebp-08H], xmm0
       fld      qword ptr [ebp-08H]
						;; bbWeight=1    PerfScore 7.25
G_M61306_IG03:
       mov      esp, ebp
       pop      ebp
       ret      8
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 49, prolog size 9, PerfScore 17.80, (MethodHash=64831085) for method JITTest.ScalarDouble:Asin(double):double
; ============================================================

